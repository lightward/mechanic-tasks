{% comment %}
  Preferred option order:

  {{ options.datetime_product_metafield_namespace__required }}
  {{ options.datetime_product_metafield_key__required }}
  {{ options.run_hourly__boolean }}
  {{ options.run_daily__boolean }}
  {{ options.test_mode__boolean }}
{% endcomment %}

{% if event.topic == "mechanic/user/trigger" or event.topic contains "mechanic/scheduler/" %}
  {% capture bulk_operation_query %}
    query {
      products {
        edges {
          node {
            __typename
            id
            metafield(
              namespace: {{ options.datetime_product_metafield_namespace__required | json }}
              key: {{ options.datetime_product_metafield_key__required | json }}
            ) {
              value
            }
            variants {
              edges {
                node {
                  __typename
                  id
                  inventoryPolicy
                  inventoryItem {
                    inventoryLevels {
                      edges {
                        node {
                          __typename
                          id
                          available
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  {% endcapture %}

  {% action "shopify" %}
    mutation {
      bulkOperationRunQuery(
        query: {{ bulk_operation_query | json }}
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
  {% endaction %}
{% elsif event.topic == "mechanic/shopify/bulk_operation" %}
  {% assign now_s = "now" | date: "%s" | times: 1 %}

  {% if event.preview %}
    {% capture objects_json %}
    [
      {
        "__typename": "ProductVariant",
        "id": "gid://shopify/ProductVariant/1234567890",
        "inventoryPolicy": "CONTINUE",
        "inventoryItem": {},
        "__parentId": "gid://shopify/Product/1234567890",

        {% comment %}
          This is just stub data, remember, and it doesn't have
          the richness of a real bulkOperations.objects object. So,
          we insert this parent object in the place where we'd
          normally have access to it, even though this isn't literally
          where it would appear in the JSONL file from Shopify
        {% endcomment %}
        "__parent": {
          "__typename": "Product",
          "id": "gid://shopify/Product/1234567890",
          "metafield": {
            "value": "2021-10-01"
          }
        }
      },
      {
        "__typename": "InventoryLevel",
        "id": "gid://shopify/InventoryLevel/1234567890?inventory_item_id=1234567890",
        "available": 4,
        "__parentId": "gid://shopify/ProductVariant/1234567890"
      }
    ]
    {% endcapture %}

    {% assign bulkOperation = hash %}
    {% assign bulkOperation["objects"] = objects_json | parse_json %}
  {% endif %}

  {% assign summary = array %}

  {% assign variants = bulkOperation.objects | where: "__typename", "ProductVariant" %}

  {% for variant in variants %}
    {% assign variant_mutations = array %}
    {% assign inventoryLevels = bulkOperation.objects | where: "__typename", "InventoryLevel" | where: "__parentId", variant.id %}
    {% assign product = variant.__parent %}

    {% if product.metafield.value == blank %}
      {% continue %}
    {% endif %}

    {% assign product_date = product.metafield.value | parse_date: "%Y-%m-%d" %}

    {% if product_date == nil %}
      {% log message: "Found a product metafield value that doesn't match the Shopify date or date_time metafield format. Skipping.", product_metafield_value: product.metafield.value %}
      {% continue %}
    {% endif %}

    {% assign product_date_s = product.metafield.value | date: "%s" | times: 1 %}

    {% if product_date_s > now_s %}
      {% continue %}
    {% endif %}

    {% if variant.inventoryPolicy != "DENY" %}
      {% capture mutation %}
        productVariantUpdate(
          input: {
            id: {{ variant.id | json }}
            inventoryPolicy: DENY
          }
        ) {
          product {
            id
            title
          }
          productVariant {
            inventoryPolicy
          }
          userErrors {
            field
            message
          }
        }
      {% endcapture %}

      {% assign variant_mutations[variant_mutations.size] = mutation %}
      {% assign summary[summary.size] = "Change variant inventory policy for " | append: variant.id | append: " to DENY" %}
    {% endif %}

    {% for inventoryLevel in inventoryLevels %}
      {% if inventoryLevel.available > 0 %}
        {% capture mutation %}
          inventoryAdjustQuantity(
            input: {
              inventoryLevelId: {{ inventoryLevel.id | json }}
              availableDelta: {{ inventoryLevel.available | times: -1 | json }}
            }
          ) {
            inventoryLevel {
              available
            }
            userErrors {
              field
              message
            }
          }
        {% endcapture %}

        {% assign variant_mutations[variant_mutations.size] = mutation %}
      {% assign summary[summary.size] = "Set inventory level for " | append: inventoryLevel.id | append: " to 0, by adjusting it by -" | append: inventoryLevel.available %}
      {% endif %}
    {% endfor %}

    {% if variant_mutations != empty %}
      {% if options.test_mode__boolean %}
        {% action "echo" summary %}
      {% else %}
        {% action "shopify" %}
          mutation {
            {{ variant_mutations | join: newline }}
          }
        {% endaction %}
      {% endif %}
    {% endif %}
  {% endfor %}
{% endif %}
