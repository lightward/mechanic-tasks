{% assign dates_and_tags_to_add = options.dates_and_tags_to_add__keyval %}
{% assign dates_and_tags_to_remove = options.dates_and_tags_to_remove__keyval %}
{% assign product_ids = options.product_ids__array_number_required %}
{% assign use_hour_specificity = options.use_hour_specificity__boolean %}
{% assign test_mode = options.test_mode__boolean %}

{% if dates_and_tags_to_add == blank and dates_and_tags_to_remove == blank %}
  {% error "Fill in at least one of 'Dates and tags to add' and 'Dates and tags to remove'. :)" %}
{% endif %}

{% comment %}
  -- determine which tags will be added and/or removed on this task run
{% endcomment %}

{% assign tags_to_add = array %}
{% assign tags_to_remove = array %}

{% if use_hour_specificity %}
  {% assign time_format = "%Y-%m-%d %I%p" %}
{% else %}
  {% assign time_format = "%Y-%m-%d" %}
{% endif %}

{% assign now_time = "now" | date: time_format %}
{% assign full_schedule = hash %}

{% for keyval in dates_and_tags_to_add %}
  {% assign some_time = keyval[0] | date: time_format %}

  {% if some_time == now_time %}
    {% assign tags_to_add[tags_to_add.size] = keyval[1] %}
  {% endif %}

  {% if full_schedule[some_time] == nil %}
    {% assign full_schedule[some_time] = array %}
  {% endif %}

  {% assign n = full_schedule[some_time].size %}
  {% assign full_schedule[some_time][n] = "add: " | append: keyval[1] %}
{% endfor %}

{% for keyval in dates_and_tags_to_remove %}
  {% assign some_time = keyval[0] | date: time_format %}

  {% if some_time == now_time %}
    {% assign tags_to_remove[tags_to_remove.size] = keyval[1] %}
  {% endif %}

  {% if full_schedule[some_time] == nil %}
    {% assign full_schedule[some_time] = array %}
  {% endif %}

  {% assign n = full_schedule[some_time].size %}
  {% assign full_schedule[some_time][n] = "remove: " | append: keyval[1] %}
{% endfor %}

{% comment %}
  -- get data for the configured product IDs (if more than 250 are configured, this can be changed to a paginated query)
{% endcomment %}

{% assign search_query_parts = array %}

{% for product_id in product_ids %}
  {% assign search_query_parts[search_query_parts.size] = product_id | prepend: "id:" %}
{% endfor %}

{% capture query %}
  query {
    products(
      first: 250
      query: {{ search_query_parts | join: " OR " | json }}
    ) {
      nodes {
        id
        handle
        tags
      }
    }
  }
{% endcapture %}

{% assign result = query | shopify %}

{% if event.preview %}
  {% capture result_json %}
    {
      "data": {
        "products": {
          "nodes": [
            {
              "id": "gid://shopify/Product/1234567890",
              "handle": "preview-product"
            }
          ]
        }
      }
    }
  {% endcapture %}

  {% assign result = result_json | parse_json %}

  {% comment %}
    -- add preview values for tags since configured dates are unlikely to align when task is previewed
  {% endcomment %}

  {% assign tags_to_add[0] = "preview-add" %}
  {% assign tags_to_remove[0] = "preview-remove" %}
{% endif %}

{% assign products = result.data.products.nodes %}
{% assign product_handles = products | map: "handle"  %}

{% log
  now: now_time,
  schedule: full_schedule,
  configured_product_ids: product_ids,
  matched_product_handles: product_handles
%}

{% if test_mode %}
  {% break %}
{% endif %}

{% if tags_to_add == blank and tags_to_remove == blank %}
  {% log "No tags to add or remove on this task run based on configured schedule." %}
  {% break %}
{% endif %}

{% for product in products %}
  {% action "shopify" %}
    mutation {
      {% if tags_to_add != blank %}
        tagsAdd(
          id: {{ product.id | json }}
          tags: {{ tags_to_add | json }}
        ) {
          userErrors {
            field
            message
          }
        }
      {% endif %}
      {% if tags_to_remove != blank %}
        tagsRemove(
          id: {{ product.id | json }}
          tags: {{ tags_to_remove | json }}
        ) {
          userErrors {
            field
            message
          }
        }
      {% endif %}
    }
  {% endaction %}
{% endfor %}
