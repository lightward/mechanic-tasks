{% assign customer_id = options.customer_id__number_required %}
{% assign customer_metafield = options.customer_metafield__required %}
{% assign metafield_value = options.metafield_value__required %}
{% assign mutation_choice = options.mutation_choice__choice_o1_customer_update_o2_metafields_set_required %}

{% comment %}
  -- get customer metafield data
{% endcomment %}

{% capture query %}
  query {
    customer(id: {{ customer_id | prepend: "gid://shopify/Customer/" | json }}) {
      id
      metafield(key: {{ customer_metafield | json }}) {
        id
        value
      }
    }
  }
{% endcapture %}

{% assign result = query | shopify %}

{% if event.preview %}
  {% capture result_json %}
    {
      "data": {
        "customer": {
          "id": "gid://shopify/Customer/1234567890",
          "metafield": {
            "id": "gid://shopify/Metafield/1234567890",
            "value": "lorem"
          }
        }
      }
    }
  {% endcapture %}

  {% assign result = result_json | parse_json %}
{% endif %}

{% assign customer = result.data.customer %}
{% assign existing_metafield = customer.metafield.value %}

{% if customer == blank %}
  {% error %}
    "Customer not found with customer ID ({{ customer_id }})."
  {% enderror %}

  {% break %}
{% endif %}

{% unless event.preview %}
  {% log customer: customer %}
{% endunless %}

{% comment %}
  -- update customer metafield using configured mutation choice
{% endcomment %}

{% if mutation_choice == "customer_update" %}
  {% action "shopify" %}
    mutation {
      customerUpdate(
        input: {
          id: {{ customer.id | json }}
          metafields: [
            {
              id: {{ existing_metafield.id | json }}
              namespace: {{ customer_metafield | split: "." | first | json }}
              key: {{ customer_metafield | split: "." | last | json }}
              value: {{ metafield_value | json }}
              type: "single_line_text_field"
            }
          ]
        }
      ) {
        userErrors {
          field
          message
        }
      }
    }
  {% endaction %}

{% elsif mutation_choice == "metafields_set" %}
  {% action "shopify" %}
    mutation {
      metafieldsSet(
        metafields: [
          {
            ownerId: {{ customer.id | json }}
            namespace: {{ customer_metafield | split: "." | first | json }}
            key: {{ customer_metafield | split: "." | last | json }}
            value: {{ metafield_value | json }}
            type: "single_line_text_field"
          }
        ]
      ) {
        metafields {
          id
          namespace
          key
          type
          value
          owner {
            ... on Customer {
              id
            }
          }
        }
        userErrors {
          code
          field
          message
        }
      }
    }
  {% endaction %}
{% endif %}

{%- capture log_message -%}
  Assuming a metafield definition has not been previously created for the metafield configured in this task, then you can find the 'unstructured' metafield using the following url: {{ shop.admin_url }}customers/{{ customer_id }}/metafields/unstructured
{%- endcapture -%}

{% log log_message %}
