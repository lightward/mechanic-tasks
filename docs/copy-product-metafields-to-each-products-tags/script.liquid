{% comment %}
  An opinion about object order:

  {{ options.metafield_namespace__required }}
  {{ options.metafield_keys_and_tag_prefixes__keyval_required }}
  {{ options.monitor_new_and_updated_products__boolean }}
  {{ options.remove_outdated_prefixed_tags__boolean }}
  {{ options.test_mode__boolean }}
{% endcomment %}

{% assign metafield_namespace = options.metafield_namespace__required %}
{% assign metafield_keys_and_tag_prefixes = options.metafield_keys_and_tag_prefixes__keyval_required %}
{% assign metafield_keys = metafield_keys_and_tag_prefixes | keys %}

{% assign metafields = array %}
{% assign tag_prefixes_hash = hash %}

{% for keyval in metafield_keys_and_tag_prefixes %}
  {% assign metafield_key = keyval[0] %}
  {% assign tag_prefix = keyval[1] %}

  {% if metafield_key != blank %}
    {% capture metafield %}
      {{ metafield_key }}: metafield(
        namespace: {{ metafield_namespace | json }}
        key: {{ metafield_key | json }}
      ) {
        type
        value
      }
    {% endcapture %}

    {% assign metafields = metafields | push: metafield %}

    {% if tag_prefix != blank %}
      {% assign tag_prefixes_hash[metafield_key] = tag_prefix | lstrip %}
    {% endif %}
  {% endif %}
{% endfor %}

{% assign tag_prefixes = tag_prefixes_hash | values %}

{% assign products = array %}

{% if event.topic == "mechanic/user/trigger" or event.topic contains "mechanic/scheduler/" %}
  {% assign cursor = nil %}

  {% for n in (0..1000) %}
    {% capture query %}
      query {
        products(
          first: 25
          after: {{ cursor | json }}
        ) {
          pageInfo {
            hasNextPage
          }
          edges {
            cursor
            node {
              id
              tags
              {{ metafields | join: newline }}
            }
          }
        }
      }
    {% endcapture %}

    {% assign result = query | shopify %}

    {% assign products_batch = result.data.products.edges | map: "node" %}

    {% assign products = products | concat: products_batch %}

    {% if result.data.products.pageInfo.hasNextPage %}
      {% assign cursor = result.data.products.edges.last.cursor %}
    {% else %}
      {% break %}
    {% endif %}
  {% endfor %}

{% elsif event.topic contains "shopify/products/" %}
  {% capture query %}
    query {
      product(id: {{ product.admin_graphql_api_id | json }}) {
        id
        tags
        {{ metafields | join: newline }}
      }
    }
  {% endcapture %}

  {% assign result = query | shopify %}

  {% assign products[0] = result.data.product %}
{% endif %}

{% if event.preview %}
  {% capture products_json %}
    [
      {
        "id": "gid://shopify/Product/1234567890",
        "tags": [
          {{ tag_prefixes.first | append: "sample" | json }}
        ],
        {{ metafield_keys.first | json }}: {
          "type": "single_line_text_field",
          "value": "Lorem ipsum"
        }
      }
    ]
  {% endcapture %}

  {% assign products = products_json | parse_json %}
{% endif %}

{% assign product_ids_and_tags = hash %}

{% for product in products %}
  {% assign tags_should_have = array %}
  {% assign tags_to_add = array %}
  {% assign tags_to_remove = array %}

  {% unless event.preview %}
    {% log product_before_tagging_updates: product %}
  {% endunless %}

  {% for metafield_key in metafield_keys %}
    {% assign tag_prefix = tag_prefixes_hash[metafield_key] %}
    {% assign product_metafield = product[metafield_key] %}

    {% if product_metafield != blank %}
      {% if product_metafield.type contains "list." %}
        {% assign product_metafield_values = product_metafield.value | parse_json %}
        {% assign product_metafield_type = product_metafield.type | remove: "list." %}
      {% else %}
        {% assign product_metafield_values = array | push: product_metafield.value %}
        {% assign product_metafield_type = product_metafield.type %}
      {% endif %}

      {% case product_metafield_type %}
        {% when "boolean" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "color" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "date" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "date_time" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "dimension" %}
          {% for product_metafield_value in product_metafield_values %}
            {% assign parsed_product_metafield_value = product_metafield_value | parse_json %}
            {% capture tag %}{{ tag_prefix }}{{ parsed_product_metafield_value.value }} {{ parsed_product_metafield_value.unit }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "number_decimal" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "number_integer" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "rating" %}
          {% for product_metafield_value in product_metafield_values %}
            {% assign parsed_product_metafield_value = product_metafield_value | parse_json %}
            {% capture tag %}{{ tag_prefix }}{{ parsed_product_metafield_value.value }} / {{ parsed_product_metafield_value.scale_max }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "single_line_text_field" %}
          {% for product_metafield_value in product_metafield_values %}
            {% capture tag %}{{ tag_prefix }}{{ product_metafield_value }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "volume" %}
          {% for product_metafield_value in product_metafield_values %}
            {% assign parsed_product_metafield_value = product_metafield_value | parse_json %}
            {% capture tag %}{{ tag_prefix }}{{ parsed_product_metafield_value.value }} {{ parsed_product_metafield_value.unit }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% when "weight" %}
          {% for product_metafield_value in product_metafield_values %}
            {% assign parsed_product_metafield_value = product_metafield_value | parse_json %}
            {% capture tag %}{{ tag_prefix }}{{ parsed_product_metafield_value.value }} {{ parsed_product_metafield_value.unit }}{% endcapture %}
            {% assign tags_should_have[tags_should_have.size] = tag | strip %}
          {% endfor %}

        {% else %}
          {% log
            message: "Unsupported metafield type for this task",
            metafield_type: product_metafield.type,
            product_id: product.id
          %}
      {% endcase %}
    {% endif %}
  {% endfor %}

  {% if options.remove_outdated_prefixed_tags__boolean %}
    {% for tag_prefix in tag_prefixes %}
      {% assign tag_prefix_size = tag_prefix.size %}

      {% for product_tag in product.tags %}
        {% assign product_tag_slice = product_tag | slice: 0, tag_prefix_size %}

        {% if product_tag.size > tag_prefix_size and product_tag_slice == tag_prefix %}
          {% unless tags_should_have contains product_tag %}
            {% assign tags_to_remove = tags_to_remove | push: product_tag %}
          {% endunless %}
        {% endif %}
      {% endfor %}
    {% endfor %}
  {% endif %}

  {% for tag_should_have in tags_should_have %}
    {% unless product.tags contains tag_should_have %}
      {% assign tags_to_add = tags_to_add | push: tag_should_have %}
    {% endunless %}
  {% endfor %}

  {% if tags_to_add != blank or tags_to_remove != blank %}
    {% assign product_ids_and_tags[product.id] = hash %}
    {% assign product_ids_and_tags[product.id]["tags_to_add"] = tags_to_add %}
    {% assign product_ids_and_tags[product.id]["tags_to_remove"] = tags_to_remove %}

  {% else %}
    {% log
      message: "No tagging operations needed for this product; skipping.",
      product_id: product.id
    %}
  {% endif %}
{% endfor %}

{% if options.test_mode__boolean %}
  {% action "echo" %}
    {
      "message": "Found {{ product_ids_and_tags.size }} tagging operations",
      "product_ids_and_tags": {{ product_ids_and_tags | json }}
    }
  {% endaction %}

{% else %}
  {% for keyval in product_ids_and_tags %}
    {% assign product_id = keyval[0] %}
    {% assign tags_to_add = keyval[1].tags_to_add %}
    {% assign tags_to_remove = keyval[1].tags_to_remove %}

    {% if tags_to_add != blank or tags_to_remove != blank %}
      {% action "shopify" %}
        mutation {
          {% if tags_to_add != blank %}
            tagsAdd(
              id: {{ product_id | json }}
              tags: {{ tags_to_add | json }}
            ) {
              userErrors {
                field
                message
              }
            }
          {% endif %}
          {% if tags_to_remove != blank %}
            tagsRemove(
              id: {{ product_id | json }}
              tags: {{ tags_to_remove | json }}
            ) {
              userErrors {
                field
                message
              }
            }
          {% endif %}
        }
      {% endaction %}
    {% endif %}
  {% endfor %}
{% endif %}
