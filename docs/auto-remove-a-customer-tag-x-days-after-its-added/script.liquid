{% assign tag_to_monitor = options.tag_to_monitor__required %}
{% assign tag_removal_interval_s = options.days_to_wait_before_untagging__number_required | times: 24 | times: 60 | times: 60 | round %}

{% assign untag_flag_tag = tag_to_monitor | append: " - will be auto-removed by Mechanic" %}
{% assign now_s = "now" | date: "%s" | times: 1 %}
{% assign metafield_key = task.id | sha256 | slice: 0, 7 %}

{% if event.topic == "user/task/untag_customer" %}
  {% assign customer_id = event.data.customer_id %}
{% else %}
  {% assign customer_id = customer.admin_graphql_api_id %}
{% endif %}

{% capture query %}
  query {
    customer(id: {{ customer_id | json }}) {
      id
      tags
      metafield(
        namespace: "mechanic"
        key: {{ metafield_key | json }}
      ) {
        id
        value
      }
    }
  }
{% endcapture %}

{% assign result = query | shopify %}

{% if event.preview %}
  {% capture result_json %}
    {
      "data": {
        "customer": {
          "id": "gid://shopify/Customer/1234567890",
          "tags": {{ tag_to_monitor | json }}
        }
      }
    }
  {% endcapture %}

  {% assign result = result_json | parse_json %}
{% endif %}

{% assign customer = result.data.customer %}

{% if customer.tags contains tag_to_monitor %}
  {% assign time_to_remove_s = customer.metafield.value | times: 1 %}

  {% if customer.metafield == blank or time_to_remove_s == 0 %}
    {% action "shopify" %}
      mutation {
        tagsAdd(
          id: {{ customer.id | json }}
          tags: {{ untag_flag_tag | json }}
        ) {
          node {
            ... on Customer {
              tags
            }
          }
          userErrors {
            field
            message
          }
        }

        metafieldsSet(
          metafields: [
            {
              ownerId: {{ customer.id | json }}
              namespace: "mechanic"
              key: {{ metafield_key | json }}
              value: {{ now_s | plus: tag_removal_interval_s | append: "" | json }}
              type: "number_integer"
            }
          ]
        ) {
          metafields {
            id
            namespace
            key
            type
            value
            owner {
              ... on Customer {
                id
                displayName
              }
            }
          }
          userErrors {
            code
            field
            message
          }
        }
      }
    {% endaction %}

    {% action "event" %}
      {
        "topic": "user/task/untag_customer",
        "data": {
          "customer_id": {{ customer.id | json }}
        },
        "run_at": {{ now_s | plus: tag_removal_interval_s | json }},
        "task_id": {{ task.id | json }}
      }
    {% endaction %}

  {% elsif customer.tags contains untag_flag_tag %}
    {% if now_s < time_to_remove_s %}
      {% log
        message: "This customer is scheduled to be untagged, but it's not time yet. Skipping.",
        tag_to_monitor: tag_to_monitor,
        untag_flag_tag: untag_flag_tag,
        now_s: now_s,
        time_to_remove_s: time_to_remove_s
      %}

    {% else %}
      {% log
        message: "This customer is scheduled to be untagged, and that time is now.",
        tag_to_monitor: tag_to_monitor,
        untag_flag_tag: untag_flag_tag,
        now_s: now_s,
        time_to_remove_s: time_to_remove_s
      %}

      {% action "shopify" %}
        mutation {
          tagsRemove(
            id: {{ customer.id | json }}
            tags: {{ array | push: tag_to_monitor, untag_flag_tag | json }}
          ) {
            node {
              ... on Customer {
                tags
              }
            }
            userErrors {
              field
              message
            }
          }

          metafieldsDelete(
            metafields: [
              {
                ownerId: {{ customer.id | json }}
                namespace: "mechanic"
                key: {{ metafield_key | json }}
              }
            ]
          ) {
            deletedMetafields {
              ownerId
              namespace
              key
            }
            userErrors {
              field
              message
            }
          }
        }
      {% endaction %}
    {% endif %}

  {% else %}
    {% log
      message: "This customer has a tag removal time recorded, but the 'untag flag tag' has been removed. Skipping.",
      tag_to_monitor: tag_to_monitor,
      untag_flag_tag: untag_flag_tag,
      now_s: now_s,
      time_to_remove_s: time_to_remove_s
    %}
  {% endif %}

{% elsif event.topic == "user/task/untag_customer" %}
  {% log
    message: "The tag auto-removal event has arrived, but the customer has already been untagged by someone/something else. Skipping.",
    tag_to_monitor: tag_to_monitor,
    customer_tags: customer.tags
  %}
{% endif %}
