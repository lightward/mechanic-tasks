{% capture query %}
  query {
    order(id: {{ order.admin_graphql_api_id | json }}) {
      id
      tags
      fulfillmentOrders(
        first: 20
        query: "status:open"
      ) {
        edges {
          node {
            id
            assignedLocation {
              name
            }
          }
        }
      }
    }
  }
{% endcapture %}

{% assign result = query | shopify %}

{% if event.preview %}
  {% capture result_json %}
    {
      "data": {
        "order": {
          "id": "gid://shopify/Order/1234567890",
          "tags": {{ options.order_tag_to_watch_for__required | json }},
          "fulfillmentOrders": {
            "edges": [
              {
                "node": {
                  "id": "gid://shopify/FulfillmentOrder/1234567890",
                  "assignedLocation": {
                    "name": "ACME Warehouse"
                  }
                }
              }
            ]
          }
        }
      }
    }
  {% endcapture %}

  {% assign result = result_json | parse_json %}
{% endif %}

{% assign order = result.data.order %}
{% assign fuflillment_orders = order.fulfillmentOrders.edges | map: "node" %}

{% if fuflillment_orders != blank and order.tags contains options.order_tag_to_watch_for__required %}
  {% if options.ignore_if_this_order_tag_is_found != blank and order.tags contains options.ignore_if_this_order_tag_is_found %}
    {% log message: "Order had the tag to watch for, but it also had the ignore tag. Skipping.", order_tags: order.tags, task_options: options %}
    {% break %}
  {% endif %}

  {% assign fuflillment_order_ids_by_location = hash %}

  {% for fuflillment_order in fuflillment_orders %}
    {% assign fuflillment_order_ids_by_location[fuflillment_order.assignedLocation.name]
      = fuflillment_order_ids_by_location[fuflillment_order.assignedLocation.name]
      | default: array
      | push: fuflillment_order.id
    %}
  {% endfor %}

  {% for keyval in fuflillment_order_ids_by_location %}
    {% action "shopify" %}
      mutation {
        fulfillmentCreateV2(
          fulfillment: {
            lineItemsByFulfillmentOrder: [
              {% for fuflillment_order_id in keyval[1] %}
                { fulfillmentOrderId: {{ fuflillment_order_id | json }} }
              {% endfor %}
            ]
            notifyCustomer: {{ options.notify_customer_on_fulfillment__boolean | json }}
          }
        ) {
          fulfillment {
            id
            status
          }
          userErrors {
            field
            message
          }
        }
      }
    {% endaction %}
  {% endfor %}
{% endif %}
