{
  "docs": "This task allows you to easily see which customers have open draft orders. Using the tag of your choice, it will set it on any customers with at least one open draft order (including draft orders where an invoice has been sent).\n\nIt runs on draft order creation and updates, as well as a daily scan of all customers with the tag or an open draft order. This daily run will handle the use cases of deleting a customer's only open draft order or switching the customer on a draft order. Run the task manually to run this same comprehensive scan.",
  "halt_action_run_sequence_on_error": false,
  "name": "Tag customers with open draft orders",
  "online_store_javascript": null,
  "options": {
    "customer_tag_to_apply__required": null
  },
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign customer_tag_to_apply = options.customer_tag_to_apply__required %}\n\n{% if event.topic contains \"shopify/draft_orders/\" %}\n  {% if draft_order.customer == blank %}\n    {% unless event.preview %}\n      {% break %}\n    {% endunless %}\n  {% endif %}\n\n  {% comment %}\n    -- check if there are any open draft orders for this customer, and get their tags\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      customer(id: {{ draft_order.customer.admin_graphql_api_id | json }}) {\n        id\n        tags\n      }\n      draftOrders(\n        first: 1\n        query: \"status:invoice_sent,open customer_id:{{ draft_order.customer.id }}\"\n      ) {\n        nodes {\n          id\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"draftOrders\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/DraftOrder/1234567890\"\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign customer = result.data.customer %}\n  {% assign open_draft_orders = result.data.draftOrders.nodes %}\n\n  {% comment %}\n    -- add and remove the customer tag as needed\n  {% endcomment %}\n\n  {% if open_draft_orders != blank %}\n    {% unless customer.tags contains customer_tag_to_apply %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ customer.id | json }}\n            tags: {{ customer_tag_to_apply | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n\n  {% else %}\n    {% if customer.tags contains customer_tag_to_apply %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer.id | json }}\n            tags: {{ customer_tag_to_apply | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% comment %}\n    -- get all customers with open draft orders\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign customers_with_open_draft_orders = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        draftOrders(\n          first: 250\n          after: {{ cursor | json }}\n          query: \"status:invoice_sent,open customer_id:*\"\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            customer {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"draftOrders\": {\n              \"nodes\": [\n                {\n                  \"customer\": {\n                    \"id\": \"gid://shopify/Customer/1234567890\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign customers_with_open_draft_orders\n      = result.data.draftOrders.nodes\n      | map: \"customer\"\n      | map: \"id\"\n      | concat: customers_with_open_draft_orders\n      | uniq\n    %}\n\n    {% if result.data.draftOrders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.draftOrders.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- get all customers with the tag\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign customers_with_tag = array %}\n\n  {%- capture search_query -%}\n    customer_tags CONTAINS '{{ customer_tag_to_apply }}'\n  {%- endcapture -%}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customerSegmentMembers(\n          first: 250\n          after: {{ cursor | json }}\n          query: {{ search_query | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customerSegmentMembers\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"id\": \"gid://shopify/CustomerSegmentMember/9876543210\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% for edge in result.data.customerSegmentMembers.edges %}\n      {% assign customers_with_tag[customers_with_tag.size] = edge.node.id | remove: \"SegmentMember\" %}\n    {% endfor %}\n\n    {% if result.data.customerSegmentMembers.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customerSegmentMembers.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- add and remove the customer tag as needed\n  {% endcomment %}\n\n  {% for customer_id in customers_with_open_draft_orders %}\n    {% unless customers_with_tag contains customer_id %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ customer_id | json }}\n            tags: {{ customer_tag_to_apply | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n  {% endfor %}\n\n  {% for customer_id in customers_with_tag %}\n    {% unless customers_with_open_draft_orders contains customer_id %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer_id | json }}\n            tags: {{ customer_tag_to_apply | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/draft_orders/create",
    "shopify/draft_orders/update",
    "mechanic/scheduler/daily",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/draft_orders/create\nshopify/draft_orders/update\nmechanic/scheduler/daily\nmechanic/user/trigger",
  "tags": [
    "Customers",
    "Draft Orders",
    "Tag"
  ]
}
