{
  "docs": "Running daily, or manually, this task query for all customers if their __first__ order was a year or more ago and they do not yet have the configured tag to apply. Alternatively, you may choose to tag customers if their account was created at least a year ago.\n\nOptionally, you may choose whether to wait a certain amount of days before tagging (i.e. a year + X days afterwards), and to configure a \"Customer search query\" with the **exact** same syntax used in the Customers segment search dialog.\n\nFor example:\n* Use `customer_tags CONTAINS 'VIP'` for customers with the VIP tag\n* Use `email_subscription_status = 'SUBSCRIBED'` for customers subscribed to email marketing\n* Use `amount_spent >= 100` for customers who have spent more than 100 in the local shop currency\n\n**Important**: The task will already include the appropriate search terms to filter customers by either their first order date or account creation date, so do not include that criteria if using the optional \"Customer search query\".",
  "halt_action_run_sequence_on_error": false,
  "name": "Tag customers on the anniversary of their first order",
  "online_store_javascript": null,
  "options": {
    "customer_tag_to_apply__required": null,
    "customer_search_query": null,
    "days_to_wait_before_tagging__number": null,
    "use_account_creation_date_instead_of_first_order_date__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign customer_tag_to_apply = options.customer_tag_to_apply__required %}\n{% assign customer_search_query = options.customer_search_query %}\n{% assign days_to_wait_before_tagging = options.days_to_wait_before_tagging__number %}\n{% assign use_account_creation_date = options.use_account_creation_date_instead_of_first_order_date__boolean %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% assign origin_threshold = \"now - 1 year\" | date: \"%Y-%m-%d\" %}\n\n  {% if days_to_wait_before_tagging > 0 %}\n    {% assign seconds_to_wait_before_tagging = days_to_wait_before_tagging | times: 86400 %}\n    {% assign origin_threshold = origin_threshold | date: \"%s\" | minus: seconds_to_wait_before_tagging | date: \"%Y-%m-%d\" %}\n  {% endif %}\n\n  {%- capture search_query -%}\n    customer_tags NOT CONTAINS '{{ customer_tag_to_apply }}' AND\n    {% if use_account_creation_date %}customer_added_date{% else %}first_order_date{% endif %} <= {{ origin_threshold }}\n    {% if customer_search_query != blank %} AND ({{ customer_search_query }}){% endif %}\n  {%- endcapture -%}\n\n  {% log search_query: search_query %}\n\n  {% assign cursor = nil %}\n  {% assign customer_ids = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customerSegmentMembers(\n          first: 1000\n          query: {{ search_query | json }}\n        ) {\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customerSegmentMembers\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"id\": \"gid://shopify/CustomerSegmentMember/1234567890\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% for edge in result.data.customerSegmentMembers.edges %}\n      {% assign customer_ids[customer_ids.size] = edge.node.id | remove: \"SegmentMember\" %}\n    {% endfor %}\n\n    {% if result.data.customerSegmentMembers.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customerSegmentMembers.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- tag all customers who were returned by the customer segment query\n  {% endcomment %}\n\n  {% for customer_id in customer_ids %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ customer_id | json }}\n          tags: {{ customer_tag_to_apply | json }}\n        ) {\n          node {\n            ... on Customer {\n              email\n              displayName\n            }\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n\n  {% else %}\n    {% log \"No customers qualified to have the configured tag added on this task run.\" %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/scheduler/daily"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/scheduler/daily",
  "tags": [
    "Customers",
    "Tag"
  ]
}
