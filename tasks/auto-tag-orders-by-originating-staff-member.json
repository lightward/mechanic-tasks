{
  "docs": "Use this task to keep track of who created what order. This task watches for new orders, that are created by store staff members, auto-tagging each new order with the name of the user who created it. Run this task manually to scan and tag all existing orders in your store.\n\nOptionally, enter a tag prefix to help identify these tags (e.g \"Placed by: \").",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag orders by originating staff member",
  "online_store_javascript": null,
  "options": {
    "include_pos_orders__boolean": null,
    "tag_prefix": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign tag_prefix = options.tag_prefix %}\n{% assign include_pos_orders = options.include_pos_orders__boolean %}\n\n{% if event.topic == \"shopify/orders/create\" %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        name\n        sourceName\n        tags\n        events(\n          first: 1\n          query: \"action:placed\"\n        ) {\n          nodes {\n            attributeToUser\n            message\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"order\": {\n            \"id\": \"gid://shopify/Order/1234567890\",\n            \"events\": {\n              \"nodes\": [\n                {\n                  \"attributeToUser\": true,\n                  \"message\": \"Jean Deaux created this order.\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign order = result.data.order %}\n  {% assign placed_event = order.events.nodes.first %}\n  {% assign originator = nil %}\n\n  {% comment %}\n    -- the event message will vary based on the order source (draft order vs. POS)\n  {% endcomment %}\n\n  {% if order.sourceName == \"shopify_draft_order\" %}\n    {% if placed_event.attributeToUser and placed_event.message contains \" created \" %}\n      {% assign originator = placed_event.message | split: \" created \" | first %}\n    {% endif %}\n\n  {% elsif order.sourceName == \"pos\" and include_pos_orders %}\n    {% if placed_event.message contains \" processed this order\" %}\n      {% assign originator = placed_event.message | split: \" processed \" | first %}\n    {% endif %}\n  {% endif %}\n\n  {% if originator %}\n    {% assign originator_tag = tag_prefix | append: originator %}\n\n    {% unless order.tags contains originator_tag %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ order.id | json }}\n            tags: {{ originator_tag | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get all orders created from draft or via POS\n  {% endcomment %}\n\n  {% capture bulk_operation_query %}\n    query {\n      orders(\n        query: \"source_name:pos OR source_name:shopify_draft_order\"\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            name\n            sourceName\n            tags\n            events(\n              first: 1\n              query: \"action:placed\"\n            ) {\n              edges {\n                node {\n                  __typename\n                  id\n                  attributeToUser\n                  message\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"__typename\":\"Order\",\"id\":\"gid://shopify/Order/1234567890\",\"sourceName\":\"shopify_draft_order\"}\n      {\"__typename\":\"BasicEvent\",\"attributeToUser\":true,\"message\":\"Jean Deaux created this order\",\"__parentId\":\"gid://shopify/Order/1234567890\"}\n      {\"__typename\":\"Order\",\"id\":\"gid://shopify/Order/2345678901\",\"sourceName\":\"pos\"}\n      {\"__typename\":\"BasicEvent\",\"attributeToUser\":false,\"message\":\"Jean Deaux processed this order\",\"__parentId\":\"gid://shopify/Order/2345678901\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign events = bulkOperation.objects | where: \"__typename\", \"BasicEvent\" %}\n\n  {% for order in orders %}\n    {% assign placed_event = events | where: \"__parentId\", order.id | first %}\n    {% assign originator = nil %}\n\n    {% if order.sourceName == \"shopify_draft_order\" %}\n      {% if placed_event.attributeToUser and placed_event.message contains \" created \" %}\n        {% assign originator = placed_event.message | split: \" created \" | first %}\n      {% endif %}\n\n    {% elsif order.sourceName == \"pos\" and include_pos_orders %}\n      {% if placed_event.message contains \" processed this order\" %}\n        {% assign originator = placed_event.message | split: \" processed \" | first %}\n      {% endif %}\n    {% endif %}\n\n    {% if originator %}\n      {% assign originator_tag = tag_prefix | append: originator %}\n\n      {% unless order.tags contains originator_tag %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ order.id | json }}\n              tags: {{ originator_tag | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Auto-Tag",
    "Orders",
    "Staff"
  ]
}
