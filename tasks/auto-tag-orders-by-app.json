{
  "name": "Auto-tag orders by app",
  "options": {
    "app_titles_and_order_tags__keyval_required": {
      "SomeApp": "some_app"
    },
    "test_mode__boolean": null
  },
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic == \"shopify/orders/create\" %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        name\n        tags\n        events(\n          first: 1\n          sortKey: CREATED_AT\n          query: \"verb:placed\"\n        ) {\n          edges {\n            node {\n              id\n              ... on BasicEvent {\n                appTitle\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"order\": {\n            \"id\": \"gid://shopify/Order/1234567890\",\n            \"name\": \"#1234\",\n            \"tags\": [],\n            \"events\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"appTitle\": {{ options.app_titles_and_order_tags__keyval_required.first.first | json }}\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign app_title = result.data.order.events.edges.first.node.appTitle %}\n  {% assign tag_to_add = options.app_titles_and_order_tags__keyval_required[app_title] %}\n\n  {% if app_title == blank %}\n    {% log message: \"This order was not created by an app. Skipping.\" %}\n  {% elsif tag_to_add == blank %}\n    {% log message: \"No tag found for this app. Skipping.\", app_title: app_title %}\n  {% elsif result.data.order.tags contains tag_to_add %}\n    {% log message: \"The order already has the tag for this app. Skipping.\", app_title: app_title, tag_to_add: tag_to_add %}\n  {% elsif options.test_mode__boolean %}\n    {% action \"echo\" order_id: result.data.order.id, order_name: result.data.order.name, order_app_title: app_title, order_tag_to_add: tag_to_add %}\n  {% else %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ result.data.order.id | json }}\n          tags: {{ tag_to_add | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      orders {\n        edges {\n          node {\n            __typename\n            id\n            name\n            tags\n            events(\n              first: 1\n              sortKey: CREATED_AT\n              query: \"verb:placed\"\n            ) {\n              edges {\n                node {\n                  __typename\n                  id\n                  ... on BasicEvent {\n                    appTitle\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_json %}\n      {\n        \"objects\": [\n          {\n            \"__typename\": \"Order\",\n            \"name\": \"#1234\",\n            \"tags\": [],\n            \"id\": \"gid://shopify/Order/1234567890\"\n          },\n          {\n            \"__typename\": \"BasicEvent\",\n            \"id\":\" gid://shopify/BasicEvent/1234567890\",\n            \"appTitle\": {{ options.app_titles_and_order_tags__keyval_required.first.first | json }},\n            \"__parentId\": \"gid://shopify/Order/1234567890\"\n          }\n        ]\n      }\n    {% endcapture %}\n\n    {% assign bulkOperation = bulkOperation_json | parse_json %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign events = bulkOperation.objects | where: \"__typename\", \"BasicEvent\" %}\n  {% assign app_title_counts = hash %}\n\n  {% for event in events %}\n    {% assign app_title = event.appTitle %}\n\n    {% if app_title == blank %}\n      {% assign app_title = \"(not placed via app)\" %}\n    {% endif %}\n\n    {% assign app_title_counts[app_title] = app_title_counts[app_title] | plus: 1 %}\n  {% endfor %}\n\n  {% log app_title_counts: app_title_counts %}\n\n  {% if options.test_mode__boolean %}\n    {% assign summaries = array %}\n  {% endif %}\n          \n  {% for order in orders %}\n    {% assign order_app_title = nil %}\n    {% assign order_tag_to_add = nil %}\n\n    {% assign order_event = events | where: \"__parentId\", order.id | first %}\n    {% assign order_app_title = order_event.appTitle %}\n\n    {% if order_app_title != blank %}\n      {% unless order.tags contains options.app_titles_and_order_tags__keyval_required[order_app_title] %}\n        {% assign order_tag_to_add = options.app_titles_and_order_tags__keyval_required[order_app_title] %}\n      {% endunless %}\n    {% endif %}\n\n    {% if order_app_title != blank %}\n      {% if options.test_mode__boolean %}\n        {% assign summary = hash %}\n        {% assign summary[\"order_id\"] = order.id %}\n        {% assign summary[\"order_name\"] = order.name %}\n        {% assign summary[\"order_tags\"] = order.tags %}\n        {% assign summary[\"order_app_title\"] = order_app_title %}\n        {% assign summary[\"order_tag_to_add\"] = order_tag_to_add %}\n        {% assign summaries[summaries.size] = summary %}\n      {% elsif order_tag_to_add != blank %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ order.id | json }}\n              tags: {{ order_tag_to_add | uniq | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {% if options.test_mode__boolean %}\n    {% action \"echo\" summaries %}\n  {% endif %}\n{% endif %}",
  "docs": "Some apps are responsible for placing orders. Use this task to tag orders, both incoming and historical, based on which app was responsible for placing them.\n\nThis task scans your incoming orders, tagging them based on the Shopify app responsible for placing each one. Run this task manually to scan and tag your existing orders.\n\nConfigure this task with app titles on the left, and order tags to add on the right.\n\nUse the \"Test mode\" option to see what the task intends to do, without actually having the task actually make any changes to your customers.\n\nPlease note: this task works by *app*, and as such does not apply to orders that are created by a *sales channel*. It's sometimes difficult to distinguish whether a third-party is using an app or a sales channel; if you're having trouble with this task, try its companion, [Auto-tag orders by sales channel](https://usemechanic.com/task/auto-tag-orders-by-sales-channel).",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Orders"
  ]
}
