{
  "docs": "Use this task to automatically tag customers when they purchase specific a membership product, and then untag them after a certain amount of time has passed! (Optionally, this task can also automatically untag the customer if/when their membership order is cancelled.)",
  "halt_action_run_sequence_on_error": false,
  "name": "Manage tagging for a time-limited membership product",
  "online_store_javascript": null,
  "options": {
    "membership_product_title__required": "1 month membership",
    "membership_tag__required": "member",
    "days_to_wait_before_untagging__number_required": 30,
    "remove_tag_immediately_for_cancelled_orders__boolean": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign membership_product_title = options.membership_product_title__required %}\n{% assign membership_tag = options.membership_tag__required %}\n{% assign days_to_wait_before_untagging = options.days_to_wait_before_untagging__number_required %}\n\n{% if order %}\n  {% comment %}\n    -- query the order, products, and customer for use in all events triggered by orders\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        tags\n        customer {\n          id\n          tags\n        }\n        lineItems(first: 250) {\n          nodes {\n            product {\n              title\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"order\": {\n            \"id\": \"gid://shopify/Order/1234567890\",\n            \"customer\": {\n              \"id\": \"gid://shopify/Customer/1234567890\"\n            },\n            \"lineItems\": {\n              \"nodes\": [\n                {\n                  \"product\": {\n                    \"title\": {{ membership_product_title | json }}\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign order = result.data.order %}\n  {% assign customer = order.customer %}\n  {% assign purchased_product_titles\n    = order.lineItems.nodes\n    | map: \"product\"\n    | map: \"title\"\n  %}\n\n  {% comment %}\n    -- stop processing this order if there is no customer or the membership product is not included\n  {% endcomment %}\n\n  {% unless customer != blank and purchased_product_titles contains membership_product_title %}\n    {% break %}\n  {% endunless %}\n{% endif %}\n\n{% if event.topic == \"shopify/orders/paid\" %}\n  {% assign days_in_the_future_s = days_to_wait_before_untagging | times: 86400 %}\n  {% assign expire_at_s = \"now\" | date: \"%s\" | plus: days_in_the_future_s %}\n\n  {% comment %}\n    -- if the customer does not already have the membership tag, then tag them and create a future event to untag them\n  {% endcomment %}\n\n  {% unless customer.tags contains membership_tag %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ customer.id | json }}\n          tags: {{ membership_tag | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n\n    {% action \"event\" %}\n      {\n        \"topic\": \"user/memberships/expire\",\n        \"data\": {\n          \"membership_tag\": {{ membership_tag | json }},\n          \"customer_id\": {{ customer.id | json }}\n        },\n        \"run_at\": {{ expire_at_s | json }},\n        \"task_id\": {{ task.id | json }}\n      }\n    {% endaction %}\n  {% endunless %}\n\n{% elsif event.topic == \"shopify/orders/cancelled\" %}\n  {% comment %}\n    -- if customer still has the membership tag, then call custom event to untag them\n  {% endcomment %}\n\n  {% if customer.tags contains membership_tag or event.preview %}\n    {% action \"event\" %}\n      {\n        \"topic\": \"user/memberships/expire\",\n        \"data\": {\n          \"membership_tag\": {{ membership_tag | json }},\n          \"customer_id\": {{ customer.id | json }}\n        },\n        \"task_id\": {{ task.id | json }}\n      }\n    {% endaction %}\n  {% endif %}\n\n{% elsif event.topic == \"user/memberships/expire\" %}\n  {% comment %}\n    -- get the customer ID and membership tag from the event data, as the tag may have changed in the task config since the customer was originally tagged\n  {% endcomment %}\n\n  {% assign customer_id = event.data.customer_id %}\n  {% assign membership_tag = event.data.membership_tag %}\n\n  {% capture query %}\n    query {\n      customer(id: {{ customer_id | json }}) {\n        id\n        tags\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"customer\": {\n            \"id\": \"gid://shopify/Customer/1234567890\",\n            \"tags\": {{ membership_tag | json }}\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign customer = result.data.customer %}\n\n  {% if customer.tags contains membership_tag %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsRemove(\n          id: {{ customer.id | json }}\n          tags: {{ membership_tag | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/orders/paid",
    "user/memberships/expire"
  ],
  "subscriptions_template": "shopify/orders/paid\n{% if options.remove_tag_immediately_for_cancelled_orders__boolean %}\n  shopify/orders/cancelled\n{% endif %}\nuser/memberships/expire",
  "tags": [
    "Membership",
    "Products",
    "Tag",
    "Time-Limited"
  ]
}
