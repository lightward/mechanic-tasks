{
  "docs": "This task will keep your sale tags in sync, without any manual work. Configure the task with a tag to apply (and optionally a tag for products that _aren't_ on sale), and Mechanic will take care of applying and removing tags as appropriate.\n\nRun this task manually to update your entire product catalog at once.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag products that have a \"compare at\" price",
  "online_store_javascript": null,
  "options": {
    "tag_for_sale_products__required": "on-sale",
    "tag_for_all_other_products": "not-on-sale",
    "sale_products_must_have_a_price_lower_than_the_compare_at_price__boolean": true
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign tag_for_sale_products = options.tag_for_sale_products__required %}\n{% assign tag_for_all_other_products = options.tag_for_all_other_products %}\n{% assign must_have_price_lower_than_the_compare_at_price = options.sale_products_must_have_a_price_lower_than_the_compare_at_price__boolean %}\n\n{% comment %}\n  -- for product create/update, filter the products query with the product ID that caused the event\n{% endcomment %}\n\n{% if event.topic == \"shopify/products/update\" %}\n  {% assign search_query = product.id | prepend: \"id:\" %}\n{% endif %}\n\n{% comment %}\n  -- query product(s) in the shop; variants will be queried separately as needed to support up to 2K variants\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign products = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      products(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ search_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          tags\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"products\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Product/1234567890\"\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign products = products | concat: result.data.products.nodes %}\n\n  {% if result.data.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.products.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- process each product by querying as many variants as needed to determine which tag applies\n{% endcomment %}\n\n{% for product in products %}\n  {% assign product_qualifies_as_sale = nil %}\n  {% assign cursor = nil %}\n\n  {% for n in (1..8) %}\n    {% capture query %}\n      query {\n        product(id: {{ product.id | json }}) {\n          variants(\n            first: 250\n            after: {{ cursor | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              price\n              compareAtPrice\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"product\": {\n              \"variants\": {\n                \"nodes\": [\n                  {\n                    \"price\": \"19.99\",\n                    \"compareAtPrice\": \"24.99\"\n                  }\n                ]\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign variants = result.data.product.variants.nodes %}\n\n    {% comment %}\n      -- check batch of variants to see if a compare at price exists, and optionally if it is greater than the price\n    {% endcomment %}\n\n    {% for variant in variants %}\n      {% if variant.compareAtPrice == blank %}\n        {% continue %}\n      {% endif %}\n\n      {% if must_have_price_lower_than_the_compare_at_price %}\n        {% assign price = variant.price | times: 1 %}\n        {% assign compare_at_price = variant.compareAtPrice | times: 1 %}\n\n        {% if price < compare_at_price %}\n          {% assign product_qualifies_as_sale = true %}\n          {% break %}\n        {% endif %}\n\n      {% else %}\n        {% assign product_qualifies_as_sale = true %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% comment %}\n      -- only query for more variants if the product has not yet qualified as \"on sale\" AND if there are more variants\n    {% endcomment %}\n\n    {% if product_qualifies_as_sale %}\n      {% break %}\n    {% elsif result.data.product.variants.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.product.variants.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- adjust tags on product as needed\n  {% endcomment %}\n\n  {% assign tag_to_add = nil %}\n  {% assign tag_to_remove = nil %}\n\n  {% if product_qualifies_as_sale %}\n    {% if tag_for_sale_products != blank %}\n      {% unless product.tags contains tag_for_sale_products %}\n        {% assign tag_to_add = tag_for_sale_products %}\n      {% endunless %}\n    {% endif %}\n\n    {% if tag_for_all_other_products != blank %}\n      {% if product.tags contains tag_for_all_other_products %}\n        {% assign tag_to_remove = tag_for_all_other_products %}\n      {% endif %}\n    {% endif %}\n\n  {% else %}\n    {% if tag_for_sale_products != blank %}\n      {% if product.tags contains tag_for_sale_products %}\n        {% assign tag_to_remove = tag_for_sale_products %}\n      {% endif %}\n    {% endif %}\n\n    {% if tag_for_all_other_products != blank %}\n      {% unless product.tags contains tag_for_all_other_products %}\n        {% assign tag_to_add = tag_for_all_other_products %}\n      {% endunless %}\n    {% endif %}\n  {% endif %}\n\n  {% if tag_to_add or tag_to_remove %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tag_to_add %}\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n\n        {% if tag_to_remove %}\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/products/create",
    "shopify/products/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/products/create\nshopify/products/update\nmechanic/user/trigger",
  "tags": [
    "Auto-Tag",
    "Compare at",
    "Products",
    "Sale"
  ]
}
