{
  "docs": "When a customer orders an item on sale (technically, when the order contains a product variant that includes a \"compare at\" price), this task automatically adds a tag to their account. Useful for keeping track of customers who take advantage of sale pricing!\n\nThis task will run for each new order that's created, tagging customers who purchase a product that has a \"compare at\" price.\n\nRun this task manually to have Mechanic scan your entire customer base, and each customer's uncancelled order history. **This may take some time!** To ensure that Mechanic can access your complete history, [make sure \"Read all orders\" is enabled](https://learn.mechanic.dev/platform/shopify/read-all-orders).\n\n**Please note**: This task will only tag customers who've purchased a product that _currently_ has a \"compare at\" price. Historical information about \"compare at\" pricing is not available, and so this task cannot make tagging decisions based on historical pricing.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag customers who purchase an item on sale",
  "online_store_javascript": null,
  "options": {
    "tag_to_add__required": "discount-shopper"
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign tag_to_add = options.tag_to_add__required %}\n\n{% if event.topic contains \"shopify/orders/\" %}\n  {% comment %}\n    -- get order and customer data\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        customer {\n          id\n          tags\n        }\n        lineItems(first: 250) {\n          nodes {\n            variant {\n              compareAtPrice\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"order\": {\n            \"id\": \"gid://shopify/Order/1234567890\",\n            \"customer\": {\n              \"id\": \"gid://shopify/Customer/1234567890\"\n            },\n            \"lineItems\": {\n              \"nodes\": [\n                {\n                  \"variant\": {\n                    \"compareAtPrice\": \"100.0\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign order = result.data.order %}\n  {% assign customer = order.customer %}\n\n  {% if customer == blank %}\n    {% break %}\n  {% endif %}\n\n  {% comment %}\n    -- if any line item has a variant with a compare at price set, then tag the customer\n  {% endcomment %}\n\n  {% for line_item in order.lineItems.nodes %}\n    {% if line_item.variant.compareAtPrice != blank %}\n      {% unless customer.tags contains tag_to_add %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ customer.id | json }}\n              tags: {{ tag_to_add | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get all customers who do not yet have the tag and who have placed at least one order\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign customer_ids = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customerSegmentMembers(\n          first: 1000\n          after: {{ cursor | json }}\n          query: \"customer_tags NOT CONTAINS '{{ tag_to_add }}' AND number_of_orders > 0\"\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customerSegmentMembers\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"id\": \"gid://shopify/customerSegmentMember/1234567890\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% for edge in result.data.customerSegmentMembers.edges %}\n      {% assign customer_ids[customer_ids.size] = edge.node.id | remove: \"SegmentMember\" %}\n    {% endfor %}\n\n    {% if result.data.customerSegmentMembers.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customerSegmentMembers.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% for customer_id in customer_ids %}\n  {% assign customer_qualifies = nil %}\n\n  {% comment %}\n    -- get uncancelled orders data for customer\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customer(id: {{ customer_id | json }}) {\n          orders(\n            first: 50\n            after: {{ cursor | json }}\n            query: \"-status:cancelled\"\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              lineItems(first: 250) {\n                nodes {\n                  variant {\n                    compareAtPrice\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customer\": {\n              \"orders\": {\n                \"nodes\": [\n                  {\n                    \"lineItems\": {\n                      \"nodes\": [\n                        {\n                          \"variant\": {\n                            \"compareAtPrice\": \"100.0\"\n                          }\n                        }\n                      ]\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% comment %}\n      -- break out of orders loop as soon as customer qualifies\n    {% endcomment %}\n\n    {% for order in result.data.customer.orders.nodes %}\n      {% for line_item in order.lineItems.nodes %}\n        {% if line_item.variant.compareAtPrice != blank %}\n          {% assign customer_qualifies = true %}\n          {% break %}\n        {% endif %}\n      {% endfor %}\n\n      {% if customer_qualifies %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if result.data.customer.orders.pageInfo.hasNextPage and customer_qualifies != true %}\n      {% assign cursor = result.data.customer.orders.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if customer_qualifies %}\n    {% unless customer.tags contains tag_to_add %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ customer_id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/create\r\nmechanic/user/trigger",
  "tags": [
    "Auto-Tag",
    "Customers",
    "Products"
  ]
}
