{
  "docs": "This task runs when products are updated (which includes product creation) and manages publishing to the configured sales channels, according to whether or not the product has a certain tag. Products with the tag will be published on ALL of the configured sales channels; and those without the product tag will be unpublished from them.\n\nRun this task manually to scan your entire product catalog, publishing and unpublishing products by the presence or absence of the configured product tag.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto publish products by tag",
  "online_store_javascript": null,
  "options": {
    "sales_channel_names__array_required": [],
    "product_tag__required": ""
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign sales_channel_names = options.sales_channel_names__array_required %}\n{% assign product_tag = options.product_tag__required %}\n\n{% capture query %}\n  query {\n    publications(first: 250) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"edges\": [\n            {% for sales_channel_name in sales_channel_names %}\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/Publication/{{ forloop.index }}\",\n                  \"name\": {{ sales_channel_name | json }}\n                }\n              }\n              {% unless forloop.last %},{% endunless %}\n            {% endfor %}\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign publications = result.data.publications.edges | map: \"node\" %}\n{% assign publication_names = publications | map: \"name\" | sort %}\n\n{% assign configured_publications = array %}\n\n{% for publication in publications %}\n  {% if sales_channel_names contains publication.name %}\n    {% assign configured_publications = configured_publications | push: publication %}\n  {% endif %}\n{% endfor %}\n\n{% log\n  available_publications: publication_names,\n  configured_publications: configured_publications\n%}\n\n{% capture published_on_publications_selections %}\n  {% for configured_publication in configured_publications %}\n    publishedOnPublication{{ configured_publication.id | split: \"/\" | last }}: publishedOnPublication(\n      publicationId: {{ configured_publication.id | json }}\n    )\n  {%- endfor %}\n{% endcapture %}\n\n{% assign products = array %}\n\n{% if event.topic contains \"shopify/products/\" %}\n  {% capture query %}\n    query {\n      product(id: {{ product.admin_graphql_api_id | json }}) {\n        id\n        tags\n        {{ published_on_publications_selections }}\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign products[0] = result.data.product %}\n\n{% elsif event.topic contains \"mechanic/user/trigger\" %}\n  {% assign cursor = nil %}\n\n  {% for n in (0..300) %}\n    {% capture query %}\n      query {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            node {\n              id\n              tags\n              {{ published_on_publications_selections }}\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign products_batch = result.data.products.edges | map: \"node\" %}\n    {% assign products = products | concat: products_batch %}\n\n    {% if result.data.products.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.products.edges.last.cursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture products_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Product/1234567890\",\n        {% for configured_publication in configured_publications %}\n          \"publishedOnPublication{{ configured_publication.id | split: \"/\" | last }}\": false,\n        {% endfor %}\n        \"tags\": {{ product_tag | json }}\n      }\n    ]\n  {% endcapture %}\n\n  {% assign products = products_json | parse_json %}\n{% endif %}\n\n{% log products: products %}\n\n{% for product in products %}\n  {% assign mutations = array %}\n  {% assign should_be_published = false %}\n\n  {% if product.tags contains product_tag %}\n    {% assign should_be_published = true %}\n  {% endif %}\n\n  {% for configured_publication in configured_publications %}\n    {% assign publication_key = configured_publication.id | split: \"/\" | last | prepend: \"publishedOnPublication\" %}\n\n    {% if product[publication_key] %}\n      {% unless should_be_published %}\n        {% capture mutation %}\n          publishableUnpublish{{ configured_publication.id | split: \"/\" | last }}: publishableUnpublish(\n            id: {{ product.id | json }}\n            input: {\n              publicationId: {{ configured_publication.id | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endcapture %}\n\n        {% assign mutations = mutations | push: mutation %}\n      {% endunless %}\n\n    {% elsif should_be_published %}\n      {% capture mutation %}\n        publishablePublish{{ configured_publication.id | split: \"/\" | last }}: publishablePublish(\n          id: {{ product.id | json }}\n          input: {\n            publicationId: {{ configured_publication.id | json }}\n          }\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      {% endcapture %}\n\n      {% assign mutations = mutations | push: mutation %}\n    {% endif %}\n  {% endfor %}\n\n  {% if mutations != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        {{ mutations | join: newline }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "subscriptions": [
    "shopify/products/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/products/update\nmechanic/user/trigger",
  "tags": [
    "Products",
    "Publish",
    "Sales Channel",
    "Unpublish"
  ]
}
