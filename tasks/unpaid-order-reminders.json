{
  "name": "Send recurring reminders about unpaid orders",
  "options": {
    "include_partially_paid_orders__boolean": false,
    "limit_to_orders_matching_this_query": "tag:sendreminder",
    "ignore_customers_having_this_tag": null,
    "initial_delay_period__number_required": null,
    "interval_period_between_emails__number_required": null,
    "periods_given_are_in_days__boolean": null,
    "periods_given_are_in_hours__boolean": null,
    "email_subject__required": "Order ORDER_NUMBER: AMOUNT_DUE is still outstanding!",
    "email_body__multiline_required": "Hello,\n\nFor your order (ORDER_NUMBER), we still require AMOUNT_DUE.\n\nThanks,\n{{ shop.name }}",
    "test_mode__boolean": true
  },
  "subscriptions": [
    "mechanic/scheduler/hourly"
  ],
  "subscriptions_template": "mechanic/scheduler/hourly",
  "script": "{% comment %}\n  Preferred option order:\n\n  {{ options.include_partially_paid_orders__boolean }}\n  {{ options.limit_to_orders_matching_this_query }}\n  {{ options.ignore_customers_having_this_tag }}\n  {{ options.initial_delay_period__number_required }}\n  {{ options.interval_period_between_emails__number_required }}\n  {{ options.periods_given_are_in_days__boolean }}\n  {{ options.periods_given_are_in_hours__boolean }}\n  {{ options.email_subject__required }}\n  {{ options.email_body__multiline_required }}\n  {{ options.test_mode__boolean }}\n{% endcomment %}\n\n{% assign options_valid = true %}\n\n{% if options.initial_delay_period__number_required < 0 %}\n  {% error \"The initial delay period must be at least 0.\" %}\n  {% assign options_valid = false %}\n{% elsif options.interval_period_between_emails__number_required < 1 %}\n  {% error \"The interval delay period between emails must be at least 1.\" %}\n  {% assign options_valid = false %}\n{% endif %}\n\n{% if options.periods_given_are_in_days__boolean and options.periods_given_are_in_hours__boolean %}\n  {% error \"Choose *either* days or hours, but not both!\" %}\n  {% assign options_valid = false %}\n{% elsif options.periods_given_are_in_days__boolean == false and options.periods_given_are_in_hours__boolean == false %}\n  {% error \"Choose one of days or hours. :)\" %}\n  {% assign options_valid = false %}\n{% endif %}\n\n{% if options_valid %}\n  {% assign cursor = nil %}\n  {% assign orders_that_deserve_an_email = array %}\n  {% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n\n  {% if event.preview %}\n    {% assign now_s = \"2020-01-01 00:00:00\" | date: \"%s\" | times: 1 %}\n  {% endif %}\n\n  {% if options.periods_given_are_in_days__boolean %}\n    {% assign period_unit_s = 60 | times: 60 | times: 24 %}\n  {% elsif options.periods_given_are_in_hours__boolean %}\n    {% assign period_unit_s = 60 | times: 60 %}\n  {% endif %}\n\n  {% assign initial_delay_period_s = options.initial_delay_period__number_required | times: period_unit_s %}\n  {% assign initial_threshold_s = now_s | minus: initial_delay_period_s %}\n  {% assign interval_period_between_emails_s = options.interval_period_between_emails__number_required | times: period_unit_s %}\n\n  {% capture orders_query %}-status:cancelled AND (financial_status:pending{% if options.include_partially_paid_orders__boolean %} OR financial_status:partially_paid){% endif %}{% endcapture %}\n\n  {% if options.limit_to_orders_matching_this_query != blank %}\n    {% assign orders_query = orders_query | append: \" AND (\" | append: options.limit_to_orders_matching_this_query | append: \")\" %}\n  {% endif %}\n\n  {% log orders_query: orders_query %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        orders(\n          first: 100\n          query: {{ orders_query | json }}\n          after: {{ cursor | json }}\n        ) {\n          edges {\n            node {\n              id\n              processedAt\n              email\n              name\n              customer {\n                firstName\n                tags\n              }\n              totalPriceSet {\n                shopMoney {\n                  amount\n                }\n              }\n              totalReceivedSet {\n                shopMoney {\n                  amount\n                }\n              }\n              taxLines {\n                title\n                priceSet {\n                  shopMoney {\n                    amount\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"orders\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"id\": \"gid://shopify/Order/1234567890\",\n                    {% assign arbitrary_multiple_of_interval_period_between_emails_s = interval_period_between_emails_s | times: 42 %}\n                    \"processedAt\": {{ now_s | minus: initial_delay_period_s | minus: arbitrary_multiple_of_interval_period_between_emails_s | date: \"%Y-%m-%d %H:%M:%S\" | json }},\n                    \"email\": \"customer@example.com\",\n                    \"name\": \"#1234\",\n                    \"customer\": {\n                      \"tags\": [],\n                      \"firstName\": \"Bente\"\n                    },\n                    \"totalPriceSet\": {\n                      \"shopMoney\": {\n                        \"amount\": \"50.0\"\n                      }\n                    },\n                    \"totalReceivedSet\": {\n                      \"shopMoney\": {\n                        \"amount\": \"10.0\"\n                      }\n                    },\n                    \"taxLines\": [\n                      {\n                        \"title\": \"VAT\",\n                        \"priceSet\": {\n                          \"shopMoney\": {\n                            \"amount\": \"21.46\"\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% for order_edge in result.data.orders.edges %}\n      {% assign order = order_edge.node %}\n\n      {% if options.ignore_customers_having_this_tag != blank and order.customer.tags contains options.ignore_customers_having_this_tag %}\n        {% continue %}\n      {% endif %}\n\n      {% assign processed_at_s = order.processedAt | date: \"%s\" | times: 1 %}\n\n      {% if processed_at_s <= initial_threshold_s %}\n        {% assign period_offset_h = now_s | minus: processed_at_s | minus: initial_delay_period_s | modulo: interval_period_between_emails_s | divided_by: 60.0 | divided_by: 60.0 | floor %}\n\n        {% if period_offset_h == 0 %}\n          {% assign orders_that_deserve_an_email[orders_that_deserve_an_email.size] = order %}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n\n    {% if result.data.orders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.orders.edges.last.cursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% for order in orders_that_deserve_an_email %}\n    {% assign amount_due = order.totalPriceSet.shopMoney.amount | minus: order.totalReceivedSet.shopMoney.amount | times: 100 | money_with_currency %}\n    {% assign tax_lines = array %}\n    {% for tax_line in order.taxLines %}\n      {% assign tax_lines[tax_lines.size] = tax_line.priceSet.shopMoney.amount | money_with_currency | prepend: \": \" | prepend: tax_line.title %}\n    {% endfor %}\n    {% assign tax_lines = tax_lines | join: \", \" %}\n\n    {% assign customer_first_name = order.customer.firstName | default: \"Kunde\" %}\n\n    {% assign email_subject = options.email_subject__required | replace: \"ORDER_NUMBER\", order.name | replace: \"AMOUNT_DUE\", amount_due | replace: \"TAX_LINES\", tax_lines | replace: \"CUSTOMER_FIRST_NAME\", customer_first_name %}\n    {% assign email_body = options.email_body__multiline_required | replace: \"ORDER_NUMBER\", order.name | replace: \"AMOUNT_DUE\", amount_due | replace: \"TAX_LINES\", tax_lines | replace: \"CUSTOMER_FIRST_NAME\", customer_first_name %}\n\n    {% if options.test_mode__boolean %}\n      {% action \"echo\", order_name: order.name, order_email: order.email, email_subject: email_subject, email_body: email_body %}\n    {% else %}\n      {% action \"email\" %}\n        {\n          \"to\": {{ order.email | json }},\n          \"subject\": {{ email_subject | json }},\n          \"body\": {{ email_body | strip | newline_to_br | json }},\n          \"reply_to\": {{ shop.customer_email | json }},\n          \"from_display_name\": {{ shop.name | json }}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": null,
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
