{
  "name": "Auto-update inventory policy based on a \"preorder\" tag",
  "options": {
  },
  "subscriptions": [
    "mechanic/scheduler/daily",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/scheduler/daily\nmechanic/user/trigger",
  "script": "{% if event.preview %}\n  {\n    \"action\": {\n      \"type\": \"shopify\",\n      \"options\": [\n        \"update\",\n        [\n          \"variant\",\n          12345\n        ],\n        {\n          \"inventory_policy\": \"continue\"\n        }\n      ]\n    }\n  }\n{% elsif event.topic == \"shopify/products/create\" or event.topic == \"shopify/products/update\" %}\n  {% if product.published_at == blank %}\n    {\"log\": \"Product is not published; skipping scan\"}\n  {% else %}\n    {% assign updated_variants_count = 0 %}\n    {% assign product_updated = false %}\n\n    {% assign product_tags = product.tags | split: \", \" %}\n    {% assign allow_preorders = false %}\n    {% for tag in product_tags %}\n      {% assign tag_parts = tag | split: \"_\" %}\n      {% if tag_parts[0] == \"preorder\" %}\n        {% assign allow_preorders = true %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% assign inventory_policy_update = nil %}\n\n    {% for variant in product.variants %}\n      {% if allow_preorders and variant.inventory_policy == \"deny\" %}\n        {% assign inventory_policy_update = \"continue\" %}\n      {% elsif allow_preorders == false and variant.inventory_policy == \"continue\" %}\n        {% assign inventory_policy_update = \"deny\" %}\n      {% endif %}\n\n      {% if inventory_policy_update %}\n        {% assign product_updated = true %}\n        {% assign updated_variants_count = updated_variants_count | plus: 1 %}\n        {\n          \"action\": {\n            \"type\": \"shopify\",\n            \"options\": [\n              \"update\",\n              [\n                \"variant\",\n                {{ variant.id | json }}\n              ],\n              {\n                \"inventory_policy\": {{ inventory_policy_update | json }}\n              }\n            ]\n          }\n        }\n      {% endif %}\n    {% endfor %}\n\n    {% capture log_message %}\n      {{ product.variants.size }} variants scanned, {{ updated_variants_count }} variants required an update\n    {% endcapture %}\n\n    {\"log\": {{ log_message | strip | json }}}\n  {% endif %}\n{% else %}\n  {% assign products_count = 0 %}\n  {% assign updated_products_count = 0 %}\n  {% assign updated_variants_count = 0 %}\n\n  {% for product in shop.products.published %}\n    {% assign product_updated = false %}\n\n    {% assign product_tags = product.tags | split: \", \" %}\n    {% assign allow_preorders = false %}\n    {% for tag in product_tags %}\n      {% assign tag_parts = tag | split: \"_\" %}\n      {% if tag_parts[0] == \"preorder\" %}\n        {% assign allow_preorders = true %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% assign inventory_policy_update = nil %}\n\n    {% for variant in product.variants %}\n      {% if allow_preorders and variant.inventory_policy == \"deny\" %}\n        {% assign inventory_policy_update = \"continue\" %}\n      {% elsif allow_preorders == false and variant.inventory_policy == \"continue\" %}\n        {% assign inventory_policy_update = \"deny\" %}\n      {% endif %}\n\n      {% if inventory_policy_update %}\n        {% assign product_updated = true %}\n        {% assign updated_variants_count = updated_variants_count | plus: 1 %}\n        {\n          \"action\": {\n            \"type\": \"shopify\",\n            \"options\": [\n              \"update\",\n              [\n                \"variant\",\n                {{ variant.id | json }}\n              ],\n              {\n                \"inventory_policy\": {{ inventory_policy_update | json }}\n              }\n            ]\n          }\n        }\n      {% endif %}\n    {% endfor %}\n\n    {% assign products_count = products_count | plus: 1 %}\n    {% if product_updated %}\n      {% assign updated_products_count = updated_products_count | plus: 1 %}\n    {% endif %}\n  {% endfor %}\n\n  {% capture log_message %}\n    {{ products_count }} published products scanned, {{ updated_products_count }} products ({{ updated_variants_count }} variants) required an update\n  {% endcapture %}\n\n  {\"log\": {{ log_message | strip | json }}}\n{% endif %}",
  "docs": "This task manages your published product catalog, checking for the presence of a \"preorder\" tag, or a tag that starts with \"preorder_\" (like \"preorder_summer\"). If this tag is found, the task updates the product to allow customers to purchase the product after it's out of stock. If no preorder tag is found, the task makes sure customers *cannot* purchase the product if it's out of stock.\n\nThis task scans your product catalog nightly or when you hit the \"Run task\" button, checking for the presence of a \"preorder\" tag, or a tag that starts with \"preorder_\" (like \"preorder_summer\"). If this tag is found, the task updates the product to allow customers to purchase the product after it's out of stock. If no preorder tag is found, the task makes sure customers *cannot* purchase the product if it's out of stock.\r\n\r\nNotes:\r\n\r\n* For efficiency, this task only scans _published_ products in your catalog.\r\n* This task supports four event topics:\r\n\r\n    * Use `mechanic/scheduler/daily` for a daily scan, at midnight.\r\n    * Use `mechanic/user/trigger` to run the task on-demand, with the push of a button.\r\n    * Use `shopify/products/create` to run the task for each product as it's created.\r\n    * Use `shopify/products/update` to run the task for each product as it's updated.\r\n\r\n    Out of the box, the task comes configured with `mechanic/scheduler/daily` and `mechanic/user/trigger`. Use the \"Subscriptions\" setting (under \"Show Advanced\", in the task editor) to swap out subscriptions as needed.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
