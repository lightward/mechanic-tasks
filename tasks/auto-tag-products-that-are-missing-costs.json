{
  "docs": "Use this task to help you close in on the last few products that are missing cost values. Trigger this task manually to process your entire catalog, or let this task update tags as needed for products you create or update.\n\nUse the \"Run task\" button to scan all products in your catalog. Or, create/update products as usual, and this task will maintain tagging accordingly.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag products that are missing costs",
  "online_store_javascript": null,
  "options": {
    "tag_for_cost_missing__required": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign tag_for_cost_missing = options.tag_for_cost_missing__required %}\n\n{% if event.topic == \"shopify/products/create\" or event.topic == \"shopify/products/update\" %}\n  {% assign missing_cost = nil %}\n  {% assign cursor = nil %}\n\n  {% comment %}\n    -- query costs of variant inventory items, breaking if one is found without a cost; support up to 2k variants\n  {% endcomment %}\n\n  {% for n in (1..8) %}\n    {% capture query %}\n      query {\n        product(id: {{ product.admin_graphql_api_id | json }}) {\n          id\n          tags\n          variants(\n            first: 250\n            after: {{ cursor | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              inventoryItem {\n                unitCost {\n                  amount\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"product\": {\n              \"id\": \"gid://shopify/Product/1234567890\",\n              \"variants\": {\n                \"nodes\": [\n                  {\n                    \"inventoryItem\": {\n                      \"unitCost\": null\n                    }\n                  }\n                ]\n              }\n\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign product = result.data.product %}\n\n    {% for variant in product.variants.nodes %}\n      {% if variant.inventoryItem.unitCost == blank %}\n        {% assign missing_cost = true %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if missing_cost %}\n      {% break %}\n    {% endif %}\n\n    {% if result.data.product.variants.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.product.variants.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if missing_cost %}\n    {% unless product.tags contains tag_for_cost_missing %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tag_for_cost_missing | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endunless %}\n\n  {% elsif product.tags contains tag_for_cost_missing %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsRemove(\n          id: {{ product.id | json }}\n          tags: {{ tag_for_cost_missing | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- query all products in the shop and their variant inventory items\n  {% endcomment %}\n\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            variants {\n              edges {\n                node {\n                  __typename\n                  id\n                  inventoryItem {\n                    unitCost {\n                      amount\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"__typename\":\"Product\",\"id\":\"gid://shopify/Product/1234567890\"}\n      {\"__typename\":\"ProductVariant\",\"id\":\"gid://shopify/ProductVariant/1234567890\",\"inventoryItem\":{\"unitCost\":null},\"__parentId\":\"gid://shopify/Product/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign products = bulkOperation.objects | where: \"__typename\", \"Product\" %}\n  {% assign bulk_variants = bulkOperation.objects | where: \"__typename\", \"ProductVariant\" %}\n\n  {% comment %}\n    -- process all products returned by the bulk op query\n  {% endcomment %}\n\n  {% for product in products %}\n    {% comment %}\n      -- link the variants to the product and check if any have a missing unitCost\n    {% endcomment %}\n\n    {% assign variants = bulk_variants | where: \"__parentId\", product.id %}\n\n    {% assign missing_cost = nil %}\n\n    {% for variant in variants %}\n      {% if variant.inventoryItem.unitCost == blank %}\n        {% assign missing_cost = true %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if missing_cost %}\n      {% unless product.tags contains tag_for_cost_missing %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ product.id | json }}\n              tags: {{ tag_for_cost_missing | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n\n    {% elsif product.tags contains tag_for_cost_missing %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tag_for_cost_missing | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/products/create",
    "shopify/products/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/products/create\nshopify/products/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Auto-Tag",
    "Costs",
    "Products"
  ]
}
