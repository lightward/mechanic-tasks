{
  "docs": "This task scans the last x days of orders, and unpublishes any products that haven't met your specified sales threshold during that time period. By default, this task adds up the line item subtotals for each product (quantity times price), but it can also count by total quantity sold. This task only looks at products that were published before the time period being examined.\n\nUse test mode to ensure that this task does what you expect, before running it for real. :)",
  "halt_action_run_sequence_on_error": false,
  "name": "Unpublish products that fall below a rolling sales threshold",
  "online_store_javascript": null,
  "options": {
    "sales_channel_name__required": "Online Store",
    "number_of_days_back_to_look__number_required": 30,
    "minimum_sales_threshold_for_staying_published__number_required": null,
    "use_total_quantity_instead_of_line_item_subtotals__boolean": false,
    "test_mode__boolean": true,
    "run_daily__boolean": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign sales_channel_name = options.sales_channel_name__required %}\n{% assign number_of_days_back_to_look = options.number_of_days_back_to_look__number_required %}\n{% assign minimum_sales_threshold_for_staying_published = options.minimum_sales_threshold_for_staying_published__number_required %}\n{% assign use_total_quantity_instead_of_line_item_subtotals = options.use_total_quantity_instead_of_line_item_subtotals__boolean %}\n{% assign test_mode = options.test_mode__boolean %}\n{% assign run_daily = options.run_daily__boolean %}\n\n{% comment %}\n  -- get the ID for the configured sales channel\n  -- Note: title filter does work for app catalog titles, so have to get all publications\n{% endcomment %}\n\n{% capture query %}\n  query {\n    publications(\n      first: 250\n      catalogType:APP\n    ) {\n      nodes {\n        id\n        catalog {\n          ... on AppCatalog {\n            apps(first: 1) {\n              nodes {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"nodes\": [\n            {\n              \"id\": \"gid://shopify/Publication/1234567890\",\n              \"catalog\": {\n                \"apps\": {\n                  \"nodes\": [\n                    {\n                      \"title\": {{ sales_channel_name | json }}\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% comment %}\n  -- make sure the configured sales channel name matches a publication in this shop\n{% endcomment %}\n\n{% assign publication_id = nil %}\n{% assign available_sales_channel_names = array %}\n\n{% for publication in result.data.publications.nodes %}\n  {% assign publication_name = publication.catalog.apps.nodes.first.title %}\n\n  {% assign available_sales_channel_names = available_sales_channel_names | push: publication_name %}\n\n  {% if sales_channel_name == publication_name %}\n    {% assign publication_id = publication.id %}\n  {% endif %}\n{% endfor %}\n\n{% if publication_id == blank %}\n  {% error\n    message: \"The sales channel configured in this task must exist in the shop. Check the list of available channels.\",\n    configured_sales_channel_name: sales_channel_name,\n    available_sales_channel_names: available_sales_channel_names\n  %}\n  {% break %}\n{% endif %}\n\n{% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n{% assign time_interval_s = number_of_days_back_to_look | times: 24 | times: 60 | times: 60 %}\n{% assign starting_date_s = now_s | minus: time_interval_s %}\n{% assign starting_date = starting_date_s | date: \"%Y-%m-%d\" %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic == \"mechanic/scheduler/daily\" %}\n  {% comment %}\n    -- get all orders since the staring date\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      orders(\n        query: {{ \"processed_at:>=\" | append: starting_date | json }}\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            name\n            lineItems {\n              edges {\n                node {\n                  __typename\n                  id\n                  quantity\n                  originalTotalSet {\n                    shopMoney {\n                      amount\n                    }\n                  }\n                  product {\n                    id\n                    publishedOnPublication(publicationId: {{ publication_id | json }})\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"__typename\":\"Order\",\"id\":\"gid://shopify/Order/1234567890\"}\n      {\"__typename\":\"LineItem\",\"id\":\"gid://shopify/LineItem/1234567890\",\"quantity\":0,\"originalTotalSet\":{\"shopMoney\":{\"amount\":\"0.0\"}},\"product\":{\"id\":\"gid://shopify/Product/1234567890\",\"publishedOnPublication\":true},\"__parentId\":\"gid://shopify/Order/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign line_items = bulkOperation.objects | where: \"__typename\", \"LineItem\" %}\n\n  {% if orders == blank %}\n    {% error \"No orders were found in this date range.\" %}\n    {% break %}\n  {% endif %}\n\n  {% comment %}\n    -- loop through all line items to tally sales by product ID for products currently published on the configured sales channel\n  {% endcomment %}\n\n  {% assign sales_by_product_id = hash %}\n\n  {% for line_item in line_items %}\n    {% assign product = line_item.product %}\n\n    {% if product.publishedOnPublication %}\n      {% if use_total_quantity_instead_of_line_item_subtotals %}\n        {% assign sales_by_product_id[product.id]\n          = sales_by_product_id[product.id]\n          | default: 0\n          | plus: line_item.quantity\n        %}\n\n      {% else %}\n        {% assign sales_by_product_id[product.id]\n          = sales_by_product_id[product.id]\n          | default: 0.0\n          | plus: line_item.originalTotalSet.shopMoney.amount\n        %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- filter products by the ones which have been published since before the cutoff date\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign published_product_ids = array %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        publication(id: {{ publication_id | json }}) {\n          id\n          productPublicationsV3(\n            first: 250\n            after: {{ cursor | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              isPublished\n              publishDate\n              publishable {\n                ... on Product {\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"publication\": {\n              \"id\": \"gid://shopify/Publication/1234567890\",\n              \"productPublicationsV3\": {\n                \"nodes\": [\n                  {\n                    \"isPublished\": true,\n                    \"publishDate\": \"2000-02-02T00:00:00Z\",\n                    \"publishable\": {\n                      \"id\": \"gid://shopify/Product/1234567890\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% for product_publication in result.data.publication.productPublicationsV3.nodes %}\n      {% if product_publication.isPublished == false %}\n        {% continue %}\n      {% endif %}\n\n      {% assign publish_date_s = product_publication.publishDate | date: \"%s\" | times: 1 %}\n\n      {% if publish_date_s > starting_date_s %}\n        {% if test_mode %}\n          {% log %}\n            \"Ignoring product {{ product_publication.publishable.id }}; it was published after our starting date threshold.\"\n          {% endlog %}\n        {% endif %}\n        {% continue %}\n      {% endif %}\n\n      {% assign published_product_ids = published_product_ids | push: product_publication.publishable.id %}\n    {% endfor %}\n\n    {% if result.data.publication.productPublicationsV3.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.publication.productPublicationsV3.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    WIP here\n  {% endcomment %}\n\n  {% assign product_ids_to_unpublish = array %}\n\n  {% for published_product_id in published_product_ids %}\n    {% assign sales = sales_by_product_id[published_product_id] | default: 0 %}\n\n    {% if sales < minimum_sales_threshold_for_staying_published %}\n      {% assign product_ids_to_unpublish = product_ids_to_unpublish | push: published_product_id %}\n    {% endif %}\n  {% endfor %}\n\n  {% if event.preview %}\n    {% assign published_product_ids[0] = \"gid://shopify/Product/123457890\" %}\n    {% assign product_ids_to_unpublish[0] = \"gid://shopify/Product/123457890\" %}\n  {% endif %}\n\n  {% if test_mode %}\n    {% log %}\n      {\n        \"message\": \"Found {{ product_ids_to_unpublish.size }} products to unpublish, out of {{ published_product_ids.size }} total products on this sales channel\",\n        \"published_product_ids\": {{ published_product_ids | json }},\n        \"sales_by_product_id\": {{ sales_by_product_id | json }},\n        \"product_ids_to_unpublish\": {{ product_ids_to_unpublish | json }}\n      }\n    {% endlog %}\n\n  {% else %}\n    {% for product_id_to_unpublish in product_ids_to_unpublish %}\n      {% action \"shopify\" %}\n        mutation {\n          publishableUnpublish(\n            id: {{ product_id_to_unpublish | json }}\n            input: {\n              publicationId: {{ publication_id | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}\nmechanic/shopify/bulk_operation",
  "tags": [
    "Products",
    "Unpublish"
  ]
}
