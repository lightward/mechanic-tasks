{
  "name": "Auto-tag products with their vendors",
  "options": {
    "apply_this_prefix_to_vendor_tags": null
  },
  "subscriptions": [
    "shopify/products/create",
    "shopify/products/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/products/create\nshopify/products/update\nmechanic/user/trigger",
  "script": "{% assign vendor_tag_prefix = options.apply_this_prefix_to_vendor_tags %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% assign cursor = nil %}\n  {% assign products = array %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            cursor\n            node {\n              id\n              tags\n              vendor\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign products_result = result.data.products.edges | map: \"node\" | where: \"vendor\" %}\n    {% assign products = products | concat: products_result %}\n\n    {% if result.data.products.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.products.edges.last.cursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% if product.vendor == blank %}\n    {% break %}\n  {% endif %}\n\n  {% assign graphql_product = hash %}\n  {% assign graphql_product[\"id\"] = product.admin_graphql_api_id %}\n  {% assign graphql_product[\"tags\"] = product.tags | split: \", \" %}\n  {% assign graphql_product[\"vendor\"] = product.vendor %}\n\n  {% assign products = array %}\n  {% assign products[0] = graphql_product %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture products_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Product/1234567890\",\n        \"vendor\": \"ACME\"\n      }\n    ]\n  {% endcapture %}\n\n  {% assign products = products_json | parse_json %}\n{% endif %}\n\n{% for product in products %}\n  {% assign tags_to_remove = array %}\n  {% assign vendor_tag = product.vendor %}\n\n  {% if vendor_tag_prefix != blank %}\n    {% assign vendor_tag = vendor_tag | prepend: vendor_tag_prefix %}\n\n    {% for tag in product.tags %}\n      {% if tag contains vendor_tag_prefix and tag != vendor_tag %}\n        {% assign trimmed_tag = tag | slice: 0, vendor_tag_prefix.size %}\n        \n        {% if trimmed_tag == vendor_tag_prefix %}\n          {% assign tags_to_remove = tags_to_remove | push: tag %}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n\n    {% if tags_to_remove != blank %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tags_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}      \n    {% endif %}\n  {% endif %}\n\n  {% unless product.tags contains vendor_tag %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ product.id | json }}\n          tags: {{ vendor_tag | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endunless %}\n{% endfor %}",
  "docs": "Use this task to copy each product's vendor to the product's tag. Optionally, you can apply a prefix to all vendor tags (e.g. \"vendor-\"). Run this task manually to scan every product in your store. Otherwise, this task will run for specific products, whenever a product is created or updated.\n\n__Note__: When using the vendor tag prefix option, any tags on a product that contain that prefix, but do not match the current vendor, will be removed. This does _not_ happen when the prefix option is not used or has been changed.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Products",
    "Vendor"
  ]
}
