{
  "name": "Make products unavailable, after the date/time stored in product metafields",
  "options": {
    "datetime_product_metafield_namespace__required": null,
    "datetime_product_metafield_key__required": null,
    "datetime_format__required": "%Y/%m/%d",
    "run_hourly__boolean": null,
    "run_daily__boolean": null,
    "test_mode__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\n\n{% if options.run_hourly__boolean %}\n  mechanic/scheduler/hourly\n{% elsif options.run_daily__boolean  %}\n  mechanic/scheduler/daily\n{% endif %}\n\nmechanic/shopify/bulk_operation",
  "script": "{% comment %}\n  Preferred option order:\n\n  {{ options.datetime_product_metafield_namespace__required }}\n  {{ options.datetime_product_metafield_key__required }}\n  {{ options.datetime_format__required }}\n  {{ options.run_hourly__boolean }}\n  {{ options.run_daily__boolean }}\n  {{ options.test_mode__boolean }}\n{% endcomment %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            __typename\n            id\n            metafield(\n              namespace: {{ options.datetime_product_metafield_namespace__required | json }}\n              key: {{ options.datetime_product_metafield_key__required | json }}\n            ) {\n              value\n            }\n            variants {\n              edges {\n                node {\n                  __typename\n                  id\n                  inventoryPolicy\n                  inventoryItem {\n                    inventoryLevels {\n                      edges {\n                        node {\n                          __typename\n                          id\n                          available\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n\n  {% if event.preview %}\n    {% capture objects_json %}\n    [\n      {\n        \"__typename\": \"ProductVariant\",\n        \"id\": \"gid://shopify/ProductVariant/1234567890\",\n        \"inventoryPolicy\": \"CONTINUE\",\n        \"inventoryItem\": {},\n        \"__parentId\": \"gid://shopify/Product/1234567890\",\n\n        {% comment %}\n          This is just stub data, remember, and it doesn't have\n          the richness of a real bulkOperations.objects object. So,\n          we insert this parent object in the place where we'd\n          normally have access to it, even though this isn't literally\n          where it would appear in the JSONL file from Shopify\n        {% endcomment %}\n        \"__parent\": {\n          \"__typename\": \"Product\",\n          \"id\": \"gid://shopify/Product/1234567890\",\n          \"metafield\": {\n            \"value\": {{ \"2019-01-01\" | date: options.datetime_format__required | json }}\n          }\n        }\n      },\n      {\n        \"__typename\": \"InventoryLevel\",\n        \"id\": \"gid://shopify/InventoryLevel/1234567890?inventory_item_id=1234567890\",\n        \"available\": 4,\n        \"__parentId\": \"gid://shopify/ProductVariant/1234567890\"\n      }\n    ]\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = objects_json | parse_json %}\n  {% endif %}\n\n  {% assign summary = array %}\n\n  {% assign variants = bulkOperation.objects | where: \"__typename\", \"ProductVariant\" %}\n\n  {% for variant in variants %}\n    {% assign variant_mutations = array %}\n    {% assign inventoryLevels = bulkOperation.objects | where: \"__typename\", \"InventoryLevel\" | where: \"__parentId\", variant.id %}\n    {% assign product = variant.__parent %}\n\n    {% if product.metafield.value == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% assign product_date = product.metafield.value | parse_date: \"%m/%d/%y\" %}\n    {% if product_date == nil %}\n      {% log message: \"Found a product metafield value that doesn't match the configured date format. Skipping.\", product_metafield_value: product.metafield.value %}\n      {% continue %}\n    {% endif %}\n\n    {% assign product_date_s = product_date | date: \"%s\" | times: 1 %}\n\n    {% assign product_date_formatted = product_date_s | date: options.datetime_format__required %}\n    {% if product_date_formatted != product.metafield.value %}\n      {% log \"Product date metafield was found to be \", product.metafield.value, \" which does not match the configured datetime format.\" %}\n    {% endif %}\n\n    {% if product_date_s > now_s %}\n      {% continue %}\n    {% endif %}\n\n    {% if variant.inventoryPolicy != \"DENY\" %}\n      {% capture mutation %}\n        productVariantUpdate(\n          input: {\n            id: {{ variant.id | json }}\n            inventoryPolicy: DENY\n          }\n        ) {\n          product {\n            id\n            title\n          }\n          productVariant {\n            inventoryPolicy\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      {% endcapture %}\n\n      {% assign variant_mutations[variant_mutations.size] = mutation %}\n      {% assign summary[summary.size] = \"Change variant inventory policy for \" | append: variant.id | append: \" to DENY\" %}\n    {% endif %}\n\n    {% for inventoryLevel in inventoryLevels %}\n      {% if inventoryLevel.available > 0 %}\n        {% capture mutation %}\n          inventoryAdjustQuantity(\n            input: {\n              inventoryLevelId: {{ inventoryLevel.id | json }}\n              availableDelta: {{ inventoryLevel.available | times: -1 | json }}\n            }\n          ) {\n            inventoryLevel {\n              available\n            }\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endcapture %}\n\n        {% assign variant_mutations[variant_mutations.size] = mutation %}\n      {% assign summary[summary.size] = \"Set inventory level for \" | append: inventoryLevel.id | append: \" to 0, by adjusting it by -\" | append: inventoryLevel.available %}\n      {% endif %}\n    {% endfor %}\n\n    {% if variant_mutations != empty %}\n      {% if options.test_mode__boolean %}\n        {% action \"echo\" summary %}\n      {% else %}\n        {% action \"shopify\" %}\n          mutation {\n            {{ variant_mutations | join: newline }}\n          }\n        {% endaction %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": "Use this task to automatically set product inventory to 0, and the product's inventory policy to deny out-of-stock purchases, after a date/time that you specify in a product metafield.\n\nConfigure \"Datetime product metafield namespace\" and \"Datetime product metafield key\" with the namespace and key for the product metafield that holds a date/time value. Configure \"Datetime format\" with a valid date/time format, using http://www.strfti.me/ as a guide. This format must _exactly_ match the values you keep in your product metafields. If a value is found that does not match this format, this task will skip that product.\r\n\r\nConfiguring product metafields requires an app for metafield management. [Metafields Guru](https://apps.shopify.com/metafields-editor-2) is a good choice. :)\r\n\r\nWhen you run this task (or as it runs hourly/daily, per your configuration), the task will look for products who have a date/time value that's in the past. For qualifying products, all inventory items with a level greater than 0 will have their levels set to exactly 0, and all variants will have their inventory policies set to \"deny\" (preventing sales, once the variants are all out of stock).",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Metafields",
    "Products",
    "Unpublish"
  ]
}
