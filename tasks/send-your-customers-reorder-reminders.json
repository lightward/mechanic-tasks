{
  "name": "Send your customers reorder reminders",
  "options": {
    "only_include_customers_having_this_tag": null,
    "number_of_days_to_wait_between_emails__number_required": null,
    "email_subject__required": "It's time to reorder!",
    "email_body__multiline_required": "Hello,\n\nIt's been X days since your last order (ORDER_NUMBER). <a href=\"https://{{ shop.domain  }}/\">Return to our store</a>\n\nThanks,\n{{ shop.name }}",
    "test_mode__boolean": null
  },
  "subscriptions": [
    "mechanic/scheduler/daily",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "{% if options.test_mode__boolean %}\n  mechanic/user/trigger\n{% endif %}\n\nmechanic/scheduler/daily\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic contains \"mechanic/scheduler/\" or event.topic == \"mechanic/user/trigger\" %}\n  {% assign query = \"orders_count:>0\" %}\n  {% if options.only_include_customers_having_this_tag != blank %}\n    {% assign query = options.only_include_customers_having_this_tag | json | prepend: \"tag:\" | append: \" \" | append: query %}\n  {% endif %}\n\n  {% capture bulk_operation_query %}\n    query {\n      customers(\n        query: {{ query | json }}\n      ) {\n        edges {\n          node {\n            email\n            lastOrder {\n              email\n              name\n              processedAt\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n  {% assign interval_d = options.number_of_days_to_wait_between_emails__number_required %}\n\n  {% if event.preview %}\n    {% capture object_json %}\n      {\n        \"email\": \"customer@example.com\",\n        \"lastOrder\": {\n          \"email\": \"customer+fallback@example.com\",\n          \"name\": \"#1234\",\n          \"processedAt\": {{ interval_d | times: 24 | times: 60 | times: 60 | times: -1 | plus: now_s | date: \"%FT%T%:z\" | json }}\n        }\n      }\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = array %}\n    {% assign bulkOperation[\"objects\"][0] = object_json | parse_json %}\n  {% endif %}\n\n  {% for customer in bulkOperation.objects %}\n    {% if customer.lastOrder == nil %}\n      {% continue %}\n    {% endif %}\n\n    {% assign processed_at_s = customer.lastOrder.processedAt | date: \"%s\" | times: 1 %}\n    {% assign age_d = now_s | minus: processed_at_s | divided_by: 60 | divided_by: 60 | divided_by: 24 | round %}\n    {% assign age_d_modulo = age_d | modulo: interval_d %}\n\n    {% if age_d == 0 %}\n      {% continue %}\n    {% elsif age_d_modulo != 0 %}\n      {% capture message -%}\n        Order {{ customer.lastOrder.name }} ({{ customer.email | default: customer.lastOrder.email }}) was placed on {{ customer.lastOrder.processedAt }}. Next email is due in {{ interval_d | minus: age_d_modulo }} day(s).\n      {%- endcapture %}\n      {% log message %}\n      {% continue %}\n    {% else %}\n      {% assign email_options = hash %}\n      {% assign email_options[\"to\"] = customer.email | default: customer.lastOrder.email %}\n      {% assign email_options[\"subject\"] = options.email_subject__required | replace: \"ORDER_NUMBER\", customer.lastOrder.name %}\n      {% assign email_options[\"body\"] = options.email_body__multiline_required | replace: \"ORDER_NUMBER\", customer.lastOrder.name | strip | newline_to_br %}\n      {% assign email_options[\"reply_to\"] = shop.customer_email %}\n      {% assign email_options[\"from_display_name\"] = shop.name %}\n\n      {% if options.test_mode__boolean %}\n        {% action \"echo\" email_options %}\n      {% else %}\n        {% action \"email\" email_options %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": "Useful for customers who need recurring reminders to reorder. Optionally filtering by a customer tag, this task monitors the most recent order for each customer, and sends them reminders every x days since that order.\n\nThis task runs daily, at midnight in your store's timezone. Optionally filtering by a customer tag, it monitors the most recent order for each customer, and sends them reminders every x days since that order. The task will continue sending reorder reminders, every x days since each customer's latest order.\r\n\r\nThis task will send emails to the address on file for the customer, falling back to the email on file for the order if the customer has no email address.\r\n\r\nTo test this task, enable test mode, and save. You'll find a new \"Run task\" button, which will report the emails that would be sent on the current date.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Customers",
    "Email",
    "Loyalty",
    "Reminder"
  ]
}
