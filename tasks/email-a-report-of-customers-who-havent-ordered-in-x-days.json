{
  "docs": "Use this task to request or schedule an email digest of customers, having a certain tag, who haven't placed an order in a certain number of days.\n\nRun this task manually to request a report immediately, or configure the task to run automatically on a schedule.",
  "halt_action_run_sequence_on_error": false,
  "name": "Email a report of customers who haven't ordered in X days",
  "online_store_javascript": null,
  "options": {
    "required_customer_tag__required": null,
    "include_customers_who_have_not_placed_an_order_in_this_many_days__number_required": null,
    "email_subject_prefix__required": null,
    "email_recipient__required_email": null,
    "send_email_anyway_if_no_customers_are_found__boolean": null,
    "send_email_daily__boolean": null,
    "send_email_every_monday__boolean": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign required_customer_tag = options.required_customer_tag__required %}\n{% assign interval_days = options.include_customers_who_have_not_placed_an_order_in_this_many_days__number_required %}\n{% assign email_subject_prefix = options.email_subject_prefix__required %}\n{% assign email_recipient = options.email_recipient__required_email %}\n{% assign send_email_anyway_if_no_customers_are_found = options.send_email_anyway_if_no_customers_are_found__boolean %}\n\n{% if interval_days <= 0 %}\n  {% error \"The number of days must be greater than 0. :)\" %}\n{% endif %}\n\n{% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% comment %}\n    -- get IDs of all customers with the required tag and who have placed an order over X days\n  {% endcomment %}\n\n  {%- capture customer_segment_query -%}\n    customer_tags CONTAINS '{{ required_customer_tag }}' AND orders_placed(until: -{{ interval_days }}d) = true\n  {%- endcapture -%}\n\n  {% assign cursor = nil %}\n  {% assign customer_ids = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customerSegmentMembers(\n          first: 1000\n          after: {{ cursor | json }}\n          query: {{ customer_segment_query | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign customer_segment_members = result.data.customerSegmentMembers.edges | map: \"node\" %}\n\n    {% comment %}\n      -- remove the \"SegmentMember\" portion from IDs for easier use in querying each customer for additional data not available in the segment resource\n    {% endcomment %}\n\n    {% for customer_segment_member in customer_segment_members %}\n      {% assign customer_ids[customer_ids.size] = customer_segment_member.id | remove: \"SegmentMember\" %}\n    {% endfor %}\n\n    {% if result.data.customerSegmentMembers.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customerSegmentMembers.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% unless event.preview %}\n    {% log count_of_customers_who_qualify: customer_ids.size %}\n  {% endunless %}\n\n  {% if event.preview %}\n    {% assign customer_ids[0] = \"gid://shopify/Customer/1234567890\" %}\n  {% endif %}\n\n  {% comment %}\n    -- get additional customer and last order data and save list item in an array for email body processing\n  {% endcomment %}\n\n  {% assign list_items = array %}\n\n  {% for customer_id in customer_ids %}\n    {% capture query %}\n      query {\n        customer(id: {{ customer_id | json }}) {\n          legacyResourceId\n          displayName\n          email\n          lastOrder {\n            legacyResourceId\n            name\n            processedAt\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customer\": {\n              \"legacyResourceId\": \"1234567890\",\n              \"displayName\": \"Alpha Beta\",\n              \"email\": \"customer@example.com\",\n              \"lastOrder\": {\n                \"processedAt\": {{ interval_days | times: -86400 | plus: now_s | minus: 432000 | date: \"%Y-%m-%dT%H:%M:%SZ\" | json }},\n                \"legacyResourceId\": \"1234567890\",\n                \"name\": \"#PREVIEW\"\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign customer = result.data.customer %}\n\n    {% assign lastOrder_days_ago\n      = customer.lastOrder.processedAt\n      | date: \"%s\"\n      | minus: now_s\n      | divided_by: -86400\n    %}\n\n    {% capture list_item %}\n      <li>\n        <a href=\"{{ shop.admin_url }}customers/{{ customer.legacyResourceId }}\">{{ customer.displayName | default: \"(unnamed)\" }}</a>\n        ({{ customer.email | default: \"(no email)\" }})\n        <br>\n        Last ordered on {{ customer.lastOrder.processedAt | date: \"%Y-%m-%d\" }},\n        {{ lastOrder_days_ago }} {{ lastOrder_days_ago | pluralize: \"day\", \"days\" }} ago\n        â€“ <a href=\"{{ shop.admin_url }}orders/{{ customer.lastOrder.legacyResourceId }}\">{{ customer.lastOrder.name }}</a>\n      </li>\n    {% endcapture %}\n\n    {% assign list_items = list_items | push: list_item %}\n  {% endfor %}\n\n  {% comment %}\n    -- generate the email subject and body with the list item data from qualifying customers\n  {% endcomment %}\n\n  {% capture email_subject %}\n    {{ email_subject_prefix }} {{ list_items.size }} {{ list_items.size | pluralize: \"customer\", \"customers\" }} found\n  {% endcapture %}\n\n  {% if list_items != blank %}\n    {% capture email_body %}\n      <p>Hello,</p>\n      <p>\n        Filtering for customers tagged {{ required_customer_tag | json }},\n        the following {{ list_items.size }} {{ list_items.size | pluralize: \"customer was\", \"customers were\" }}\n        found to have not placed an order in the last {{ interval_days }} {{ interval_days | pluralize: \"day\", \"days\" }}:\n      </p>\n      <ul>\n      {{ list_items | join: newline }}\n      </ul>\n      <p>Thanks,<br>- Mechanic, for {{ shop.name }}</p>\n    {% endcapture %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ email_recipient | json }},\n        \"subject\": {{ email_subject | strip | json }},\n        \"body\": {{ email_body | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n\n  {% elsif send_email_anyway_if_no_customers_are_found %}\n    {% capture email_body %}\n      Hello,\n\n      We didn't find any customers (tagged {{ required_customer_tag | json }}) having zero orders placed in the last {{ interval_days }} day(s).\n\n      Thanks,\n      - Mechanic, for {{ shop.name }}\n    {% endcapture %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ email_recipient | json }},\n        \"subject\": {{ email_subject | strip | json }},\n        \"body\": {{ email_body | unindent | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.send_email_daily__boolean %}\n  mechanic/scheduler/daily\n{% elsif options.send_email_every_monday__boolean %}\n  mechanic/scheduler/monday\n{% endif %}",
  "tags": [
    "Customers",
    "Email",
    "Report",
    "Retention"
  ]
}
