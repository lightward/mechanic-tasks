{
  "name": "Auto-publish new products",
  "options": {
    "sales_channel_names__array_required": null
  },
  "subscriptions": [
    "shopify/products/create"
  ],
  "subscriptions_template": "shopify/products/create",
  "script": "{% if event.preview %}\n  {% assign product = hash %}\n  {% assign product[\"admin_graphql_api_id\"] = \"gid://shopify/Product/1234567890\" %}\n{% endif %}\n\n{% assign publication_ids = array %}\n\n{% capture publication_query %}\n  query {\n    publications(first: 250) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign publication_result = publication_query | shopify %}\n\n{% if event.preview %}\n  {% capture publication_result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"edges\": [\n            {% for name in options.sales_channel_names__array_required %}\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/Publication/1234567890\",\n                  \"name\": {{ name | json }}\n                }\n              }\n              {% unless forloop.last %}\n                ,\n              {% endunless %}\n            {% endfor %}\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign publication_result = publication_result_json | parse_json %}\n{% endif %}\n\n{% for publication_edge in publication_result.data.publications.edges %}\n  {% if options.sales_channel_names__array_required contains publication_edge.node.name %}\n    {% assign publication_ids[publication_ids.size] = publication_edge.node.id %}\n  {% endif %}\n{% endfor %}\n\n{% if publication_ids.size != options.sales_channel_names__array_required.size %}\n  {% error %}\n    {{ \"Only found \" | append: publication_ids.size | append: \" existing sales channels - check your task configuration, and fix any incorrect names. :)\" | json }}\n  {% enderror %}\n{% else %}\n  {% capture product_query %}\n    query {\n      product(id: {{ product.admin_graphql_api_id | json }}) {\n        {% for publication_id in publication_ids %}\n          publishedOnPublication{{ forloop.index }}: publishedOnPublication(publicationId: {{ publication_id | json }})\n        {% endfor %}\n      }\n    }\n  {% endcapture %}\n\n  {% assign product_result = product_query | shopify %}\n\n  {% if event.preview %}\n    {% capture product_result_json %}\n      {\n        \"data\": {\n          \"product\": {\n            {% for publication_id in publication_ids %}\n              \"publishedOnPublication{{ forloop.index }}\": false\n              {% unless forloop.last %}\n                ,\n              {% endunless %}\n            {% endfor %}\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign product_result = product_result_json | parse_json %}\n  {% endif %}\n\n  {% assign publication_ids_for_publishing = array %}\n\n  {% for publication_id in publication_ids %}\n    {% assign key = \"publishedOnPublication\" | append: forloop.index %}\n    {% assign published = product_result.data.product[key] %}\n    {% unless published %}\n      {% assign publication_ids_for_publishing[publication_ids_for_publishing.size] = publication_id %}\n    {% endunless %}\n  {% endfor %}\n\n  {% if publication_ids_for_publishing == empty %}\n    {% log \"Product was already published on all configured sales channel(s). :)\" %}\n  {% else %}\n    {% action \"shopify\" %}\n      mutation {\n        {% for publication_id in publication_ids_for_publishing %}\n          publishablePublish{{ forloop.index }}: publishablePublish(\n            id: {{ product.admin_graphql_api_id | json }}\n            input: {\n              publicationId: {{ publication_id | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endfor %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "Use this task to automatically make add new products to the sales channels of your choice, making each product available on each channel immediately after the product is created.\n\n[YouTube: See the development video!](https://youtu.be/yCV17WpS1Kg)",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Products",
    "Publish"
  ]
}
