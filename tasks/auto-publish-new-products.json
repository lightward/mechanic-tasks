{
  "docs": "Use this task to automatically make add new products to the sales channels of your choice, making each product available on each channel immediately after the product is created.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-publish new products",
  "online_store_javascript": null,
  "options": {
    "sales_channel_names__array_required": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign sales_channel_names = options.sales_channel_names__array_required %}\n\n{% comment %}\n  -- get all of the sales channel names (i.e. publications aka app catalogs) in the shop\n{% endcomment %}\n\n{% capture query %}\n  query {\n    publications(\n      first: 250\n      catalogType:APP\n    ) {\n      nodes {\n        id\n        catalog {\n          ... on AppCatalog {\n            apps(first: 1) {\n              nodes {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"nodes\": [\n            {\n              \"id\": \"gid://shopify/Publication/1234567890\",\n              \"catalog\": {\n                \"apps\": {\n                  \"nodes\": [\n                    {\n                      \"title\": {{ sales_channel_names.first | json }}\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% comment %}\n  -- add the configured publication names into a hash for use in lookups\n{% endcomment %}\n\n{% assign publication_ids = array %}\n{% assign publication_names_by_id = hash %}\n{% assign available_sales_channel_names = array %}\n\n{% for publication in result.data.publications.nodes %}\n  {% assign publication_name = publication.catalog.apps.nodes.first.title %}\n\n  {% assign available_sales_channel_names = available_sales_channel_names | push: publication_name %}\n\n  {% if sales_channel_names contains publication_name %}\n    {% assign publication_ids = publication_ids | push: publication.id %}\n    {% assign publication_names_by_id[publication.id] = publication_name %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- make sure the configured sales channel names match what is in the shop\n{% endcomment %}\n\n{% if publication_ids == blank  %}\n  {% error\n    message: \"None of the sales channel configured in this task exist in the shop. Check the list of available channels and verify each configured channel exists.\",\n    configured_sales_channel_names: sales_channel_names,\n    available_sales_channel_names: available_sales_channel_names\n  %}\n\n  {% break %}\n\n{% elsif publication_ids.size != sales_channel_names.size %}\n  {% comment %}\n    -- using action error here so the task will continue with any other configured and matched sales channels\n  {% endcomment %}\n\n  {% action \"echo\"\n    __error: \"One or more configured sales channel names do not match any of the publication names available in this shop.\",\n    configured_sales_channel_names: sales_channel_names,\n    available_sales_channel_names: available_sales_channel_names\n  %}\n{% endif %}\n\n{% comment %}\n  -- check which publications the product is published on\n{% endcomment %}\n\n{% capture product_query %}\n  query {\n    product(id: {{ product.admin_graphql_api_id | json }}) {\n      {% for publication_id in publication_ids %}\n        publishedOnPublication{{ forloop.index }}: publishedOnPublication(publicationId: {{ publication_id | json }})\n      {% endfor %}\n    }\n  }\n{% endcapture %}\n\n{% assign product_result = product_query | shopify %}\n\n{% if event.preview %}\n  {% capture product_result_json %}\n    {\n      \"data\": {\n        \"product\": {\n          \"publishedOnPublication1\": false\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign product_result = product_result_json | parse_json %}\n{% endif %}\n\n{% assign publication_ids_for_publishing = array %}\n\n{% for publication_id in publication_ids %}\n  {% assign key = \"publishedOnPublication\" | append: forloop.index %}\n  {% assign published = product_result.data.product[key] %}\n\n  {% unless published %}\n    {% assign publication_ids_for_publishing = publication_ids_for_publishing | push: publication_id %}\n  {% endunless %}\n{% endfor %}\n\n{% if publication_ids_for_publishing == blank %}\n  {% log \"Product was already published on all configured sales channel(s). :)\" %}\n  {% break %}\n{% endif %}\n\n{% action \"shopify\" %}\n  mutation {\n    {% for publication_id in publication_ids_for_publishing %}\n      publishablePublish{{ forloop.index }}: publishablePublish(\n        id: {{ product.admin_graphql_api_id | json }}\n        input: {\n          publicationId: {{ publication_id | json }}\n        }\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    {% endfor %}\n  }\n{% endaction %}\n",
  "subscriptions": [
    "shopify/products/create"
  ],
  "subscriptions_template": "shopify/products/create",
  "tags": [
    "Products",
    "Publish"
  ]
}
