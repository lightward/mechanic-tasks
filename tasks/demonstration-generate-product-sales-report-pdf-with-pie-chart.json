{
  "name": "Demonstration: Generate product sales report PDF with pie chart",
  "options": {
    "report_on_sales_from_today__boolean": null,
    "report_on_sales_from_yesterday__boolean": null,
    "report_on_sales_in_past_week__boolean": null,
    "report_on_sales_in_past_month__boolean": null,
    "report_on_sales_in_past_quarter__boolean": null,
    "report_on_sales_in_past_year__boolean": null,
    "group_by_product_type__boolean": null,
    "group_by_vendor__boolean": null,
    "email_report_recipients__array_required": null,
    "run_this_task_daily__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "{% if options.run_this_task_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% assign from_today = options.report_on_sales_from_today__boolean %}\n{% assign from_yesterday = options.report_on_sales_from_yesterday__boolean %}\n{% assign in_past_week = options.report_on_sales_in_past_week__boolean %}\n{% assign in_past_month = options.report_on_sales_in_past_month__boolean %}\n{% assign in_past_quarter = options.report_on_sales_in_past_quarter__boolean %}\n{% assign in_past_year = options.report_on_sales_in_past_year__boolean %}\n\n{% assign today = \"now\" | date: \"%Y-%m-%d\" %}\n{% assign yesterday = \"now - 1 day\" | date: \"%Y-%m-%d\" %}\n\n{% assign date_query = nil %}\n{% assign report_title = \"Sales by Product\" %}\n\n{% if from_today %}\n  {% unless from_yesterday or in_past_week or in_past_month or in_past_quarter or in_past_year %}\n    {% assign date_query = \"processed_at:past_day\" %}\n    {% assign report_title = report_title | append: \" (Today)\" %}\n  {% endunless %}\n\n{% elsif from_yesterday %}\n  {% unless in_past_week or in_past_month or in_past_quarter or in_past_year %}\n    {% assign date_query = \"processed_at:\" | append: yesterday %}\n    {% assign report_title = report_title | append: \" (Yesterday)\" %}\n  {% endunless %}\n\n{% elsif in_past_week %}\n  {% unless in_past_month or in_past_quarter or in_past_year %}\n    {% assign date_query = \"processed_at:past_week\" %}\n    {% assign report_title = report_title | append: \" (Past week)\" %}\n  {% endunless %}\n\n{% elsif in_past_month %}\n  {% unless in_past_quarter or in_past_year %}\n    {% assign date_query = \"processed_at:past_month\" %}\n    {% assign report_title = report_title | append: \" (Past month)\" %}\n  {% endunless %}\n\n{% elsif in_past_quarter %}\n  {% unless in_past_year %}\n    {% assign date_query = \"processed_at:past_quarter\" %}\n    {% assign report_title = report_title | append: \" (Past quarter)\" %}\n  {% endunless %}\n\n{% elsif in_past_year %}\n  {% assign date_query = \"processed_at:past_year\" %}\n  {% assign report_title = report_title | append: \" (Past year)\" %}\n{% endif %}\n\n{% if date_query %}\n  {% log date_query: date_query %}\n{% else %}\n  {% error \"Choose exactly one reporting period option: today, yesterday, past week, past month, past quarter, or past year.\" %}\n{% endif %}\n\n{% assign report_title_with_date\n  = report_title\n  | append: \" - \"\n  | append: today\n%}\n\n{% if event.topic contains \"mechanic/scheduler/\" or event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      orders(\n        query: {{ date_query | json }}\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            name\n            lineItems {\n              edges {\n                node {\n                  __typename\n                  id\n                  product {\n                    __typename\n                    id\n                    title\n                    productType\n                  }\n                  vendor\n                  quantity\n                  discountAllocations {\n                    allocatedAmountSet {\n                      shopMoney {\n                        amount\n                      }\n                    }\n                  }\n                  discountedTotalSet {\n                    shopMoney {\n                      amount\n                    }\n                  }\n                  originalTotalSet {\n                    shopMoney {\n                      amount\n                    }\n                  }\n                  totalDiscountSet {\n                    shopMoney {\n                      amount\n                    }\n                  }\n                  taxLines {\n                    priceSet {\n                      shopMoney {\n                        amount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            refunds {\n              id\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"__typename\":\"Order\",\"id\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"name\":\"#TEST123\",\"refunds\":[{\"id\":\"gid:\\/\\/shopify\\/Refund\\/1234567890\"}]}\n      {\"__typename\":\"LineItem\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/1234567890\",\"product\":{\"id\":\"gid:\\/\\/shopify\\/Product\\/1234567890\",\"title\":\"ACME - Widget\",\"productType\":\"Widget\"},\"vendor\":\"ACME\",\"quantity\":3,\"discountAllocations\":[{\"allocatedAmountSet\":{\"shopMoney\":{\"amount\":\"6.24\"}}}],\"discountedTotalSet\":{\"shopMoney\":{\"amount\":\"86.97\"}},\"originalTotalSet\":{\"shopMoney\":{\"amount\":\"86.97\"}},\"totalDiscountSet\":{\"shopMoney\":{\"amount\":\"0.0\"}},\"taxLines\":[{\"rate\":0.05,\"ratePercentage\":5.0,\"title\":\"GST\",\"priceSet\":{\"shopMoney\":{\"amount\":\"4.04\"}}}],\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n      {\"__typename\":\"LineItem\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/2345678901\",\"product\":{\"id\":\"gid:\\/\\/shopify\\/Product\\/2345678901\",\"title\":\"ACME - Brick\",\"productType\":\"Brick\"},\"vendor\":\"ACME\",\"quantity\":3,\"discountAllocations\":[{\"allocatedAmountSet\":{\"shopMoney\":{\"amount\":\"2.59\"}}}],\"discountedTotalSet\":{\"shopMoney\":{\"amount\":\"36.0\"}},\"originalTotalSet\":{\"shopMoney\":{\"amount\":\"36.0\"}},\"totalDiscountSet\":{\"shopMoney\":{\"amount\":\"0.0\"}},\"taxLines\":[{\"rate\":0.05,\"ratePercentage\":5.0,\"title\":\"GST\",\"priceSet\":{\"shopMoney\":{\"amount\":\"1.67\"}}}],\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n      {\"__typename\":\"LineItem\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/3456789012\",\"product\":{\"id\":\"gid:\\/\\/shopify\\/Product\\/3456789012\",\"title\":\"Blammo - Widget\",\"productType\":\"Widget\"},\"vendor\":\"Blammo\",\"quantity\":3,\"discountAllocations\":[{\"allocatedAmountSet\":{\"shopMoney\":{\"amount\":\"17.4\"}}},{\"allocatedAmountSet\":{\"shopMoney\":{\"amount\":\"5.0\"}}}],\"discountedTotalSet\":{\"shopMoney\":{\"amount\":\"69.6\"}},\"originalTotalSet\":{\"shopMoney\":{\"amount\":\"87.0\"}},\"totalDiscountSet\":{\"shopMoney\":{\"amount\":\"17.4\"}},\"taxLines\":[{\"rate\":0.05,\"ratePercentage\":5.0,\"title\":\"GST\",\"priceSet\":{\"shopMoney\":{\"amount\":\"3.23\"}}}],\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n      {\"__typename\":\"LineItem\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/4567890123\",\"product\":{\"id\":\"gid:\\/\\/shopify\\/Product\\/4567890123\",\"title\":\"Blammo - Log\",\"productType\":\"Log\"},\"vendor\":\"Blammo\",\"quantity\":2,\"discountAllocations\":[{\"allocatedAmountSet\":{\"shopMoney\":{\"amount\":\"1.5\"}}}],\"discountedTotalSet\":{\"shopMoney\":{\"amount\":\"21.0\"}},\"originalTotalSet\":{\"shopMoney\":{\"amount\":\"21.0\"}},\"totalDiscountSet\":{\"shopMoney\":{\"amount\":\"0.0\"}},\"taxLines\":[{\"rate\":0.05,\"ratePercentage\":5.0,\"title\":\"GST\",\"priceSet\":{\"shopMoney\":{\"amount\":\"0.98\"}}}],\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign line_items = bulkOperation.objects | where: \"__typename\", \"LineItem\" | where: \"product\" %}\n\n  {% if orders == empty %}\n    {% log message: \"This task run did not generate any data to report on.\" %}\n    {% break %}\n  {% endif %}\n\n  {% assign all_product_types_in_this_period\n    = line_items\n    | map: \"product\"\n    | map: \"productType\"\n    | uniq\n    | sort_natural\n  %}\n\n  {% assign all_vendors_in_this_period\n    = line_items\n    | map: \"vendor\"\n    | uniq\n    | sort_natural\n  %}\n\n  {% assign summary_totals = hash %}\n  {% assign product_data_by_id = hash %}\n  {% assign product_data_by_type = hash %}\n  {% assign product_data_by_vendor = hash %}\n\n  {% for order in orders %}\n    {% if order.refunds != blank %}\n      {% assign order_refund_line_items = array %}\n\n      {% for refund in order.refunds %}\n        {% comment %}\n        -- NOTE: Need to query for refund line items separately from bulk op query due to Shopify constraint...\n        \"Queries that contain a connection field within a list field are not currently supported.\"\n        {% endcomment %}\n        {% capture query %}\n          query {\n            refund(id: {{ refund.id | json }}) {\n              refundLineItems(first: 25) {\n                edges {\n                  node {\n                    lineItem {\n                      id\n                    }\n                    quantity\n                    totalTaxSet {\n                      shopMoney {\n                        amount\n                      }\n                    }\n                    subtotalSet {\n                      shopMoney {\n                        amount\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        {% endcapture %}\n\n        {% assign result = query | shopify %}\n\n        {% if event.preview %}\n          {% capture result_json %}\n            {\n              \"data\": {\n                \"refund\": {\n                  \"refundLineItems\": {\n                    \"edges\": [\n                      {\n                        \"node\": {\n                          \"lineItem\": {\n                            \"id\": \"gid://shopify/LineItem/9641853847372\"\n                          },\n                          \"quantity\": 1,\n                          \"totalTaxSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"1.07\"\n                            }\n                          },\n                          \"subtotalSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"21.53\"\n                            }\n                          }\n                        }\n                      },\n                      {\n                        \"node\": {\n                          \"lineItem\": {\n                            \"id\": \"gid://shopify/LineItem/9641853814604\"\n                          },\n                          \"quantity\": 2,\n                          \"totalTaxSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"1.11\"\n                            }\n                          },\n                          \"subtotalSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"22.27\"\n                            }\n                          }\n                        }\n                      },\n                      {\n                        \"node\": {\n                          \"lineItem\": {\n                            \"id\": \"gid://shopify/LineItem/9641853945676\"\n                          },\n                          \"quantity\": 3,\n                          \"totalTaxSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"4.18\"\n                            }\n                          },\n                          \"subtotalSet\": {\n                            \"shopMoney\": {\n                              \"amount\": \"83.52\"\n                            }\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          {% endcapture %}\n\n          {% assign result = result_json | parse_json %}\n        {% endif %}\n\n        {% assign refund_line_items = result.data.refund.refundLineItems.edges | map: \"node\" %}\n        {% assign order_refund_line_items = order_refund_line_items | concat: refund_line_items %}\n      {% endfor %}{% comment %}-- END: order.refunds loop --{% endcomment %}\n    {% endif %}\n\n    {% assign order_line_items = line_items | where: \"__parentId\", order.id %}\n\n    {% for line_item in order_line_items %}\n      {% assign refund_line_item_quantity = 0 %}\n      {% assign refund_line_item_taxes = 0 %}\n      {% assign refund_line_item_subtotal = 0 %}\n\n      {% for refund_line_item in order_refund_line_items %}\n        {% if refund_line_item.lineItem.id == line_item.id %}\n          {% assign refund_line_item_quantity\n            = refund_line_item_quantity\n            | plus: refund_line_item.quantity\n          %}\n          {% assign refund_line_item_taxes\n            = refund_line_item_taxes\n            | plus: refund_line_item.totalTaxSet.shopMoney.amount\n          %}\n          {% assign refund_line_item_subtotal\n            = refund_line_item_subtotal\n            | plus: refund_line_item.subtotalSet.shopMoney.amount\n          %}\n        {% endif %}\n      {% endfor %}\n\n      {% assign line_item_quantity = line_item.quantity | minus: refund_line_item_quantity %}\n\n      {% assign line_item_taxes = 0 %}\n\n      {% for tax_line in line_item.taxLines %}\n        {% assign line_item_taxes\n          = line_item_taxes\n          | plus: tax_line.priceSet.shopMoney.amount\n        %}\n      {% endfor %}\n\n      {% assign line_item_taxes = line_item_taxes | minus: refund_line_item_taxes %}\n\n      {% assign line_item_discounts = 0 %}\n\n      {% for discount_allocation in line_item.discountAllocations %}\n        {% assign line_item_discounts\n          = line_item_discounts\n          | plus: discount_allocation.allocatedAmountSet.shopMoney.amount\n        %}\n      {% endfor %}\n\n      {% assign line_item_net_sales\n        = line_item.originalTotalSet.shopMoney.amount\n        | minus: line_item_discounts\n        | minus: refund_line_item_subtotal\n      %}\n      {% assign line_item_total_sales\n        = line_item_net_sales\n        | plus: line_item_taxes\n      %}\n\n      {% comment %}\n        -- aggregate by product id\n      {% endcomment %}\n\n      {% assign product_id = line_item.product.id %}\n\n      {% assign product_data_by_id[product_id]\n        = product_data_by_id[product_id]\n        | default: hash\n      %}\n      {% assign product_data_by_id[product_id][\"title\"] = line_item.product.title %}\n      {% assign product_data_by_id[product_id][\"vendor\"] = line_item.vendor %}\n      {% assign product_data_by_id[product_id][\"product_type\"] = line_item.product.productType %}\n      {% assign product_data_by_id[product_id][\"total_quantity\"]\n        = product_data_by_id[product_id][\"total_quantity\"]\n        | default: 0\n        | plus: line_item_quantity\n      %}\n      {% assign product_data_by_id[product_id][\"total_gross\"]\n        = product_data_by_id[product_id][\"total_gross\"]\n        | default: 0\n        | plus: line_item.originalTotalSet.shopMoney.amount\n      %}\n      {% assign product_data_by_id[product_id][\"total_discounted\"]\n        = product_data_by_id[product_id][\"total_discounted\"]\n        | default: 0\n        | plus: line_item.discountedTotalSet.shopMoney.amount\n      %}\n      {% assign product_data_by_id[product_id][\"total_discounts\"]\n        = product_data_by_id[product_id][\"total_discounts\"]\n        | default: 0\n        | plus: line_item_discounts\n      %}\n      {% assign product_data_by_id[product_id][\"total_returns\"]\n        = product_data_by_id[product_id][\"total_returns\"]\n        | default: 0\n        | plus: refund_line_item_subtotal\n      %}\n      {% assign product_data_by_id[product_id][\"total_taxes\"]\n        = product_data_by_id[product_id][\"total_taxes\"]\n        | default: 0\n        | plus: line_item_taxes\n      %}\n      {% assign product_data_by_id[product_id][\"net_sales\"]\n        = product_data_by_id[product_id][\"net_sales\"]\n        | default: 0\n        | plus: line_item_net_sales\n      %}\n      {% assign product_data_by_id[product_id][\"total_sales\"]\n        = product_data_by_id[product_id][\"total_sales\"]\n        | default: 0\n        | plus: line_item_total_sales\n      %}\n\n      {% comment %}\n        -- aggregate all products for summary row\n      {% endcomment %}\n\n      {% assign summary_totals[\"total_quantity\"]\n        = summary_totals[\"total_quantity\"]\n        | default: 0\n        | plus: line_item_quantity\n      %}\n      {% assign summary_totals[\"total_gross\"]\n        = summary_totals[\"total_gross\"]\n        | default: 0\n        | plus: line_item.originalTotalSet.shopMoney.amount\n      %}\n      {% assign summary_totals[\"total_discounted\"]\n        = summary_totals[\"total_discounted\"]\n        | default: 0\n        | plus: line_item.discountedTotalSet.shopMoney.amount\n      %}\n      {% assign summary_totals[\"total_discounts\"]\n        = summary_totals[\"total_discounts\"]\n        | default: 0\n        | plus: line_item_discounts\n      %}\n      {% assign summary_totals[\"total_returns\"]\n        = summary_totals[\"total_returns\"]\n        | default: 0\n        | plus: refund_line_item_subtotal\n      %}\n      {% assign summary_totals[\"total_taxes\"]\n        = summary_totals[\"total_taxes\"]\n        | default: 0\n        | plus: line_item_taxes\n      %}\n      {% assign summary_totals[\"net_sales\"]\n        = summary_totals[\"net_sales\"]\n        | default: 0\n        | plus: line_item_net_sales\n      %}\n      {% assign summary_totals[\"total_sales\"]\n        = summary_totals[\"total_sales\"]\n        | default: 0\n        | plus: line_item_total_sales\n      %}\n\n      {% comment %}\n        -- aggregate by product type\n      {% endcomment %}\n\n      {% assign product_type = line_item.product.productType %}\n\n      {% if options.group_by_product_type__boolean and product_type != blank %}\n        {% assign product_data_by_type[product_type]\n          = product_data_by_type[product_type]\n          | default: hash\n        %}\n        {% assign product_data_by_type[product_type][\"product_type\"]\n          = line_item.product.productType\n        %}\n        {% assign product_data_by_type[product_type][\"total_quantity\"]\n          = product_data_by_type[product_type][\"total_quantity\"]\n          | default: 0\n          | plus: line_item_quantity\n        %}\n        {% assign product_data_by_type[product_type][\"total_gross\"]\n          = product_data_by_type[product_type][\"total_gross\"]\n          | default: 0\n          | plus: line_item.originalTotalSet.shopMoney.amount\n        %}\n        {% assign product_data_by_type[product_type][\"total_discounted\"]\n          = product_data_by_type[product_type][\"total_discounted\"]\n          | default: 0\n          | plus: line_item.discountedTotalSet.shopMoney.amount\n        %}\n        {% assign product_data_by_type[product_type][\"total_discounts\"]\n          = product_data_by_type[product_type][\"total_discounts\"]\n          | default: 0\n          | plus: line_item_discounts\n        %}\n        {% assign product_data_by_type[product_type][\"total_returns\"]\n          = product_data_by_type[product_type][\"total_returns\"]\n          | default: 0\n          | plus: refund_line_item_subtotal\n        %}\n        {% assign product_data_by_type[product_type][\"total_taxes\"]\n          = product_data_by_type[product_type][\"total_taxes\"]\n          | default: 0\n          | plus: line_item_taxes\n        %}\n        {% assign product_data_by_type[product_type][\"net_sales\"]\n          = product_data_by_type[product_type][\"net_sales\"]\n          | default: 0\n          | plus: line_item_net_sales\n        %}\n        {% assign product_data_by_type[product_type][\"total_sales\"]\n          = product_data_by_type[product_type][\"total_sales\"]\n          | default: 0\n          | plus: line_item_total_sales\n        %}\n      {% endif %}\n\n      {% comment %}\n        -- aggregate by vendor\n      {% endcomment %}\n\n      {% assign vendor = line_item.vendor %}\n\n      {% if options.group_by_vendor__boolean and vendor != blank %}\n        {% assign product_data_by_vendor[vendor]\n          = product_data_by_vendor[vendor]\n          | default: hash\n        %}\n        {% assign product_data_by_vendor[vendor][\"vendor\"]\n          = line_item.vendor\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_quantity\"]\n          = product_data_by_vendor[vendor][\"total_quantity\"]\n          | default: 0\n          | plus: line_item_quantity\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_gross\"]\n          = product_data_by_vendor[vendor][\"total_gross\"]\n          | default: 0\n          | plus: line_item.originalTotalSet.shopMoney.amount\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_discounted\"]\n          = product_data_by_vendor[vendor][\"total_discounted\"]\n          | default: 0\n          | plus: line_item.discountedTotalSet.shopMoney.amount\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_discounts\"]\n          = product_data_by_vendor[vendor][\"total_discounts\"]\n          | default: 0\n          | plus: line_item_discounts\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_returns\"]\n          = product_data_by_vendor[vendor][\"total_returns\"]\n          | default: 0\n          | plus: refund_line_item_subtotal\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_taxes\"]\n          = product_data_by_vendor[vendor][\"total_taxes\"]\n          | default: 0\n          | plus: line_item_taxes\n        %}\n        {% assign product_data_by_vendor[vendor][\"net_sales\"]\n          = product_data_by_vendor[vendor][\"net_sales\"]\n          | default: 0\n          | plus: line_item_net_sales\n        %}\n        {% assign product_data_by_vendor[vendor][\"total_sales\"]\n          = product_data_by_vendor[vendor][\"total_sales\"]\n          | default: 0\n          | plus: line_item_total_sales\n        %}\n      {% endif %}\n    {% endfor %}{% comment %}-- END: line_items loop --{% endcomment %}\n  {% endfor %}{% comment %}-- END: orders loop --{% endcomment %}\n\n  {% comment %}\n    -- create HTML output blocks for PDF generation\n  {% endcomment %}\n\n  {% capture table_header_row_html %}\n    <tr>\n      <td>Title</td>\n      <td>Vendor</td>\n      <td>Type</td>\n      <td>Quantity</td>\n      <td>Gross</td>\n      <td>Discounts</td>\n      <td>Returns</td>\n      <td>Net</td>\n      <td>Tax</td>\n      <td>Total</td>\n    </tr>\n  {% endcapture %}\n\n  {% assign sorted_product_data_by_id\n    = product_data_by_id\n    | values\n    | sort: \"total_sales\"\n    | reverse\n  %}\n  {% assign product_id_chart_labels\n    = sorted_product_data_by_id\n    | map: \"title\"\n  %}\n  {% assign product_id_chart_data\n    = sorted_product_data_by_id\n    | map: \"total_sales\"\n  %}\n\n  {% if sorted_product_data_by_id.size > 10 %}\n    {% assign product_id_chart_labels\n      = product_id_chart_labels\n      | slice: 0, 10\n      | push: \"ALL OTHERS\"\n    %}\n    {% assign sum_all_others\n      = product_id_chart_data\n      | slice: 10, sorted_product_data_by_id.size\n      | sum\n    %}\n    {% assign product_id_chart_data\n      = product_id_chart_data\n      | slice: 0, 10\n      | push: sum_all_others\n    %}\n  {% endif %}\n\n  {% log\n    product_id_chart_labels: product_id_chart_labels,\n    product_id_chart_data: product_id_chart_data\n  %}\n\n  {% capture total_discounts_html %}\n    {% if summary_totals.total_discounts > 0 %}\n      <td nowrap>-{{ summary_totals.total_discounts | currency }}</td>\n    {% else %}\n      <td>{{ 0 | currency }}</td>\n    {% endif %}\n  {% endcapture %}\n\n  {% capture total_returns_html %}\n    {% if summary_totals.total_returns > 0 %}\n      <td nowrap>-{{ summary_totals.total_returns | currency }}</td>\n    {% else %}\n      <td>{{ 0 | currency }}</td>\n    {% endif %}\n  {% endcapture %}\n\n  {% capture summary_row_html %}\n    <tr class=\"summary-row\">\n      <td colspan=\"3\">Summary</td>\n      <td>{{ summary_totals.total_quantity }}</td>\n      <td>{{ summary_totals.total_gross | currency }}</td>\n      {{ total_discounts_html | strip }}\n      {{ total_returns_html | strip }}\n      <td>{{ summary_totals.net_sales | currency }}</td>\n      <td>{{ summary_totals.total_taxes | currency }}</td>\n      <td>{{ summary_totals.total_sales | currency }}</td>\n    </tr>\n  {% endcapture %}\n\n  {% assign report_rows = array | push: summary_row_html %}\n\n  {% for product in sorted_product_data_by_id %}\n    {% capture product_total_discounts_html %}\n      {% if product.total_discounts > 0 %}\n        <td nowrap>-{{ product.total_discounts | currency }}</td>\n      {% else %}\n        <td>{{ 0 | currency }}</td>\n      {% endif %}\n    {% endcapture %}\n\n    {% capture product_total_returns_html %}\n      {% if product.total_returns > 0 %}\n        <td nowrap>-{{ product.total_returns | currency }}</td>\n      {% else %}\n        <td>{{ 0 | currency }}</td>\n      {% endif %}\n    {% endcapture %}\n\n    {% capture product_row_html %}\n      <tr>\n        <td>{{ product.title }}</td>\n        <td>{{ product.vendor }}</td>\n        <td>{{ product.product_type }}</td>\n        <td>{{ product.total_quantity }}</td>\n        <td>{{ product.total_gross | currency }}</td>\n        {{ product_total_discounts_html | strip }}\n        {{ product_total_returns_html | strip }}\n        <td>{{ product.net_sales | currency }}</td>\n        <td>{{ product.total_taxes | currency }}</td>\n        <td>{{ product.total_sales | currency }}</td>\n      </tr>\n    {% endcapture %}\n\n    {% assign report_rows = report_rows | push: product_row_html %}\n  {% endfor %}\n\n  {% capture group_by_id_table %}\n    <table>\n      <thead>\n        {{ table_header_row_html }}\n      </thead>\n      <tbody>\n        {{ report_rows | join: newline }}\n      </tbody>\n    </table>\n  {% endcapture %}\n\n  {% if options.group_by_product_type__boolean %}\n    {% assign sorted_product_data_by_type\n      = product_data_by_type\n      | values\n      | sort: \"total_sales\"\n      | reverse\n    %}\n    {% assign product_type_chart_labels\n      = sorted_product_data_by_type\n      | map: \"product_type\"\n    %}\n    {% assign product_type_chart_data\n      = sorted_product_data_by_type\n      | map: \"total_sales\"\n    %}\n\n    {% if sorted_product_data_by_type.size > 10 %}\n      {% assign product_type_chart_labels\n        = product_type_chart_labels\n        | slice: 0, 10\n        | push: \"ALL OTHERS\"\n      %}\n      {% assign sum_all_others\n        = product_type_chart_data\n        | slice: 10, sorted_product_data_by_type.size\n        | sum\n      %}\n      {% assign product_type_chart_data\n        = product_type_chart_data\n        | slice: 0, 10\n        | push: sum_all_others\n      %}\n    {% endif %}\n\n    {% log\n      product_type_chart_labels: product_type_chart_labels,\n      product_type_chart_data: product_type_chart_data\n    %}\n\n    {% assign group_by_type_tables = array %}\n\n    {% for product_type in all_product_types_in_this_period %}\n      {% assign summary_row_data = product_data_by_type[product_type] %}\n\n      {% capture total_discounts_html %}\n        {% if summary_row_data.total_discounts > 0 %}\n          <td nowrap>-{{ summary_row_data.total_discounts | currency }}</td>\n        {% else %}\n          <td>{{ 0 | currency }}</td>\n        {% endif %}\n      {% endcapture %}\n\n      {% capture total_returns_html %}\n        {% if summary_row_data.total_returns > 0 %}\n          <td nowrap>-{{ summary_row_data.total_returns | currency }}</td>\n        {% else %}\n          <td>{{ 0 | currency }}</td>\n        {% endif %}\n      {% endcapture %}\n\n      {% capture summary_row_html %}\n        <tr class=\"summary-row\">\n          <td colspan=\"3\">Summary</td>\n          <td>{{ summary_row_data.total_quantity }}</td>\n          <td>{{ summary_row_data.total_gross | currency }}</td>\n          {{ total_discounts_html | strip }}\n          {{ total_returns_html | strip }}\n          <td>{{ summary_row_data.net_sales | currency }}</td>\n          <td>{{ summary_row_data.total_taxes | currency }}</td>\n          <td>{{ summary_row_data.total_sales | currency }}</td>\n        </tr>\n      {% endcapture %}\n\n      {% assign report_rows = array | push: summary_row_html %}\n\n      {% assign sorted_product_data_by_type\n        = sorted_product_data_by_id\n        | where: \"product_type\", product_type\n      %}\n\n      {% for product in sorted_product_data_by_type %}\n        {% capture product_total_discounts_html %}\n          {% if product.total_discounts > 0 %}\n            <td nowrap>-{{ product.total_discounts | currency }}</td>\n          {% else %}\n            <td>{{ 0 | currency }}</td>\n          {% endif %}\n        {% endcapture %}\n\n        {% capture product_total_returns_html %}\n          {% if product.total_returns > 0 %}\n            <td nowrap>-{{ product.total_returns | currency }}</td>\n          {% else %}\n            <td>{{ 0 | currency }}</td>\n          {% endif %}\n        {% endcapture %}\n\n        {% capture product_row_html %}\n          <tr>\n            <td>{{ product.title }}</td>\n            <td>{{ product.vendor }}</td>\n            <td>{{ product.product_type }}</td>\n            <td>{{ product.total_quantity }}</td>\n            <td>{{ product.total_gross | currency }}</td>\n            {{ product_total_discounts_html | strip }}\n            {{ product_total_returns_html | strip }}\n            <td>{{ product.net_sales | currency }}</td>\n            <td>{{ product.total_taxes | currency }}</td>\n            <td>{{ product.total_sales | currency }}</td>\n          </tr>\n        {% endcapture %}\n\n        {% assign report_rows = report_rows | push: product_row_html %}\n      {% endfor %}\n\n      {% capture table_html %}\n        <table>\n          <thead>\n            {{ table_header_row_html }}\n          </thead>\n          <tbody>\n            {{ report_rows | join: newline }}\n          </tbody>\n        </table>\n      {% endcapture %}\n\n      {% assign group_by_type_tables = group_by_type_tables | push: table_html %}\n    {% endfor %}{% comment %}-- END: all product types loop --{% endcomment %}\n  {% endif %}\n\n  {% if options.group_by_vendor__boolean %}\n    {% assign sorted_product_data_by_vendor\n      = product_data_by_vendor\n      | values\n      | sort: \"total_sales\"\n      | reverse\n    %}\n    {% assign product_vendor_chart_labels\n      = sorted_product_data_by_vendor\n      | map: \"vendor\"\n    %}\n    {% assign product_vendor_chart_data\n      = sorted_product_data_by_vendor\n      | map: \"total_sales\"\n    %}\n\n    {% if sorted_product_data_by_vendor.size > 10 %}\n      {% assign product_vendor_chart_labels\n        = product_vendor_chart_labels\n        | slice: 0, 10\n        | push: \"ALL OTHERS\"\n      %}\n      {% assign sum_all_others\n        = product_vendor_chart_data\n        | slice: 10, sorted_product_data_by_type.size\n        | sum\n      %}\n      {% assign product_vendor_chart_data\n        = product_vendor_chart_data\n        | slice: 0, 10\n        | push: sum_all_others\n      %}\n    {% endif %}\n\n    {% log\n      product_vendor_chart_labels: product_vendor_chart_labels,\n      product_vendor_chart_data: product_vendor_chart_data\n    %}\n\n    {% assign group_by_vendor_tables = array %}\n\n    {% for vendor in all_vendors_in_this_period %}\n      {% assign summary_data = product_data_by_vendor[vendor] %}\n\n      {% capture total_discounts_html %}\n        {% if summary_data.total_discounts > 0 %}\n          <td nowrap>-{{ summary_data.total_discounts | currency }}</td>\n        {% else %}\n          <td>{{ 0 | currency }}</td>\n        {% endif %}\n      {% endcapture %}\n\n      {% capture total_returns_html %}\n        {% if summary_data.total_returns > 0 %}\n          <td nowrap>-{{ summary_data.total_returns | currency }}</td>\n        {% else %}\n          <td>{{ 0 | currency }}</td>\n        {% endif %}\n      {% endcapture %}\n\n      {% capture summary_row_html %}\n        <tr class=\"summary-row\">\n          <td colspan=\"3\">Summary</td>\n          <td>{{ summary_data.total_quantity }}</td>\n          <td>{{ summary_data.total_gross | currency }}</td>\n          {{ total_discounts_html | strip }}\n          {{ total_returns_html | strip }}\n          <td>{{ summary_data.net_sales | currency }}</td>\n          <td>{{ summary_data.total_taxes | currency }}</td>\n          <td>{{ summary_data.total_sales | currency }}</td>\n        </tr>\n      {% endcapture %}\n\n      {% assign report_rows = array | push: summary_row_html %}\n\n      {% assign sorted_product_data_by_vendor\n        = sorted_product_data_by_id\n        | where: \"vendor\", vendor\n      %}\n\n      {% for product in sorted_product_data_by_vendor %}\n        {% capture product_total_discounts_html %}\n          {% if product.total_discounts > 0 %}\n            <td nowrap>-{{ product.total_discounts | currency }}</td>\n          {% else %}\n            <td>{{ 0 | currency }}</td>\n          {% endif %}\n        {% endcapture %}\n\n        {% capture product_total_returns_html %}\n          {% if product.total_returns > 0 %}\n            <td nowrap>-{{ product.total_returns | currency }}</td>\n          {% else %}\n            <td>{{ 0 | currency }}</td>\n          {% endif %}\n        {% endcapture %}\n\n        {% capture product_row_html %}\n          <tr>\n            <td>{{ product.title }}</td>\n            <td>{{ product.vendor }}</td>\n            <td>{{ product.product_type }}</td>\n            <td>{{ product.total_quantity }}</td>\n            <td>{{ product.total_gross | currency }}</td>\n            {{ product_total_discounts_html | strip }}\n            {{ product_total_returns_html | strip }}\n            <td>{{ product.net_sales | currency }}</td>\n            <td>{{ product.total_taxes | currency }}</td>\n            <td>{{ product.total_sales | currency }}</td>\n          </tr>\n        {% endcapture %}\n\n        {% assign report_rows = report_rows | push: product_row_html %}\n      {% endfor %}\n\n      {% capture table_html %}\n        <table>\n          <thead>\n            {{ table_header_row_html }}\n          </thead>\n          <tbody>\n            {{ report_rows | join: newline }}\n          </tbody>\n        </table>\n      {% endcapture %}\n\n      {% assign group_by_vendor_tables = group_by_vendor_tables | push: table_html %}\n    {% endfor %}{% comment %}-- END: all vendors loop --{% endcomment %}\n  {% endif %}\n\n  {% comment %}\n  -- generate PDF and send email\n  {% endcomment %}\n\n  {% assign slice_colors\n    = \"#24425C,#386890,#4682B4,#6B9BC3,#89AFCF,#A1BFD9,#B4CCE1,#C3D6E7,#D9E5F0,#E7EEF5,#F1F1F1\"\n    | split: \",\"\n  %}\n\n  {% capture html %}\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"utf-8\">\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-datalabels/1.0.0/chartjs-plugin-datalabels.min.js\"></script>\n      <style>\n        .chart-container {\n          width: 960px;\n          margin: 50px auto;\n          page-break-after: always;\n        }\n        .report-data {\n          width: 960px;\n          margin: 0 auto;\n          font-size: 15px;\n        }\n        section + section {\n          page-break-before: always;\n        }\n        table {\n          margin: 0 auto;\n          max-width: 100%;\n          width: 100%;\n          border-collapse: collapse;\n        }\n        table + table {\n          margin-top: 20px;\n        }\n        thead {\n          background-color: lightsteelblue;\n          font-weight: bold;\n        }\n        tbody > tr:nth-child(odd):not(.summary-row) {\n          background-color: rgba(176,196,222,0.15);\n        }\n        td {\n          border: 1px solid steelblue;\n          padding: 5px;\n        }\n        tr > td:nth-child(n+4) {\n          text-align: right;\n        }\n        .summary-row {\n          background-color: rgba(176,196,222,0.4);\n          font-weight: bold;\n          border-bottom: 2px solid lightsteelblue;\n        }\n        tr.summary-row > td:nth-child(n+2) {\n          text-align: right;\n        }\n      </style>\n    </head>\n    <body>\n      <section id=\"sales-by-product-id\">\n        <div class=\"chart-container\">\n          <canvas id=\"product-id-chart\"></canvas>\n        </div>\n        <div class=\"report-data\">\n          <h2>{{ report_title }}</h2>\n          {{ group_by_id_table }}\n        </div>\n      </section>\n      {% if options.group_by_product_type__boolean %}\n        <section id=\"sales-by-product-type\">\n          <div class=\"chart-container\">\n            <canvas id=\"product-type-chart\"></canvas>\n          </div>\n          <div class=\"report-data\">\n            <h2>{{ report_title }} [Grouped by Product Type]</h2>\n            {{ group_by_type_tables | join: newline }}\n          </div>\n        </section>\n      {% endif %}\n      {% if options.group_by_vendor__boolean %}\n        <section id=\"sales-by-vendor\">\n          <div class=\"chart-container\">\n            <canvas id=\"product-vendor-chart\"></canvas>\n          </div>\n          <div class=\"report-data\">\n            <h2>{{ report_title }} [Grouped by Vendor]</h2>\n            {{ group_by_vendor_tables | join: newline }}\n          </div>\n        </section>\n      {% endif %}\n\n      <script type=\"text/javascript\">\n        function drawGraphs() {\n          Chart.helpers.merge(Chart.defaults.global.plugins.datalabels, {\n            align: 'start',\n            anchor: 'end',\n            backgroundColor: 'rgba(0,0,0,0.2)',\n            borderRadius: '5',\n            color: 'white',\n            formatter: function (value, ctx) {\n              var dataArr = ctx.chart.data.datasets[0].data;\n              var sum = dataArr.reduce(function (acc, curr) {\n                return acc + curr\n              });\n              return (value * 100 / sum).toFixed(1) + \"%\";\n            },\n            labels: {\n              title: {\n                font: {\n                  weight: 'bold'\n                }\n              },\n              value: {\n                color: 'white'\n              }\n            }\n          });\n\n          new Chart(document.getElementById(\"product-id-chart\"), {\n            type: 'pie',\n            data: {\n              labels: {{ product_id_chart_labels | json }},\n              datasets: [{\n                backgroundColor: {{ slice_colors | json }},\n                data: {{ product_id_chart_data | json }}\n              }]\n            },\n            plugins: [ChartDataLabels],\n            options: {\n              title: {\n                display: true,\n                text: '% Sales by Product'\n              },\n              animation: {\n                animateRotate: false\n              }\n            }\n          });\n\n          {% if options.group_by_product_type__boolean %}\n            new Chart(document.getElementById(\"product-type-chart\"), {\n              type: 'pie',\n              data: {\n                labels: {{ product_type_chart_labels | json }},\n                datasets: [{\n                  backgroundColor: {{ slice_colors | json }},\n                  data: {{ product_type_chart_data | json }}\n                }]\n              },\n              plugins: [ChartDataLabels],\n              options: {\n                title: {\n                  display: true,\n                  text: '% Sales by Product Type'\n                },\n                animation: {\n                  animateRotate: false\n                }\n              }\n            });\n          {% endif %}\n\n          {% if options.group_by_vendor__boolean %}\n            new Chart(document.getElementById(\"product-vendor-chart\"), {\n              type: 'pie',\n              data: {\n                labels: {{ product_vendor_chart_labels | json }},\n                datasets: [{\n                  backgroundColor: {{ slice_colors | json }},\n                  data: {{ product_vendor_chart_data | json }}\n                }]\n              },\n              plugins: [ChartDataLabels],\n              options: {\n                title: {\n                  display: true,\n                  text: '% Sales by Vendor'\n                },\n                animation: {\n                  animateRotate: false\n                }\n              }\n            });\n          {% endif  %}\n        }\n\n        window.onload = function () {\n          drawGraphs();\n        };\n      </script>\n    </body>\n    </html>\n  {% endcapture %}\n\n  {% capture header_html %}\n    <div style=\"display:flex;justify-content:space-between;\">\n      <div>{{ today }}</div>\n      <div>{{ report_title }}</div>\n      <div>Page <span class=\"pdfcrowd-page-number\"></span> of <span class=\"pdfcrowd-page-count\"></span></div>\n    </div>\n  {% endcapture %}\n\n  {% action \"email\" %}\n    {\n      \"to\": {{ options.email_report_recipients__array_required | join: \",\" | json }},\n      \"subject\": {{ report_title_with_date | json }},\n      \"body\": \"Please see the attached PDF. :)\",\n      \"reply_to\": {{ shop.customer_email | json }},\n      \"from_display_name\": {{ shop.name | json }},\n      \"attachments\": {\n        {{ report_title_with_date | handleize | append: \".pdf\" | json }}: {\n          \"pdf\": {\n            \"html\": {{ html | json }},\n            \"__force_pdfcrowd\": true,\n            \"orientation\": \"landscape\",\n            \"header_html\": {{ header_html | json }}\n          }\n        }\n      }\n    }\n  {% endaction %}\n{% endif %}",
  "docs": "This task demonstrates how a product sales report can be generated as PDF and emailed to one or more recipients. It also shows how charts can be embedded in the PDF report using a 3rd party library like [ChartJS](https://www.chartjs.org/).\n\nBy default, the report will generate sales data by product. You may also choose to have the report group sales by product type or vendor. Each group type will generate a single pie chart showing the top 10 products (or types/vendors) by total sales in the selected reporting period.\n\nFor the sales reporting period, select _only_ one of the following options:\n- Report on sales from today\n- Report on sales from yesterday\n- Report on sales in the past week\n- Report on sales in the past month\n- Report on sales in the past quarter\n- Report on sales in the past year\n\nThe task can be run manually, or optionally, set to run as a daily report by checking the “Run this task daily” option. If a less frequent schedule is desired, then you may modify the __mechanic/scheduler/daily__ subscription to another frequency. See the [scheduler](https://learn.mechanic.dev/platform/events/topics#scheduler) section in the docs for more details.\n\nNote: For shops with a high frequency of orders and/or a very large product catalog, these PDF reports can generate a large amount of pages. Consequently, this task should be considered a starting point to develop reporting tasks that work for your shop’s unique requirements.\n",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Demonstration",
    "PDF",
    "Report"
  ]
}
