{
  "docs": "This task manages tagging for products, according to whether or not they're published for the sales channel of your choice. Choose a tag to use when the product is published, and/or a tag for when the product is unpublished.\n\nRun this task manually to scan and update your entire product catalog, on demand. Otherwise, configure this task to perform this same scan on a schedule. (Note: It's not possible for a task to respond instantly to publishing or unpublishing a product. Instead, configure a run schedule.)",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag products based on their publishing status",
  "online_store_javascript": null,
  "options": {
    "tag_to_add_when_published": null,
    "tag_to_add_when_unpublished": null,
    "sales_channel_name__required": null,
    "run_every_10_minutes__boolean": null,
    "run_hourly__boolean": null,
    "run_daily__boolean": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign tag_to_add_when_published = options.tag_to_add_when_published %}\n{% assign tag_to_add_when_unpublished = options.tag_to_add_when_unpublished %}\n{% assign sales_channel_name = options.sales_channel_name__required %}\n\n{% if tag_to_add_when_published == blank and tag_to_add_when_unpublished == blank %}\n  {% error \"Fill in at least one tag option to continue. :)\" %}\n{% endif %}\n\n{% comment %}\n  -- get the ID for the configured sales channel\n  -- Note: title filter does work for app catalog titles, so have to get all publications\n{% endcomment %}\n\n{% capture query %}\n  query {\n    publications(\n      first: 250\n      catalogType:APP\n    ) {\n      nodes {\n        id\n        catalog {\n          ... on AppCatalog {\n            apps(first: 1) {\n              nodes {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"nodes\": [\n            {\n              \"id\": \"gid://shopify/Publication/1234567890\",\n              \"catalog\": {\n                \"apps\": {\n                  \"nodes\": [\n                    {\n                      \"title\": {{ sales_channel_name | json }}\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% comment %}\n  -- make sure the configured sales channel name matches a publication in this shop\n{% endcomment %}\n\n{% assign publication_id = nil %}\n{% assign available_sales_channel_names = array %}\n\n{% for publication in result.data.publications.nodes %}\n  {% assign publication_name = publication.catalog.apps.nodes.first.title %}\n\n  {% assign available_sales_channel_names = available_sales_channel_names | push: publication_name %}\n\n  {% if sales_channel_name == publication_name %}\n    {% assign publication_id = publication.id %}\n  {% endif %}\n{% endfor %}\n\n{% if publication_id == blank %}\n  {% error\n    message: \"The sales channel configured in this task must exist in the shop. Check the list of available channels.\",\n    configured_sales_channel_name: sales_channel_name,\n    available_sales_channel_names: available_sales_channel_names\n  %}\n  {% break %}\n{% endif %}\n\n{% comment %}\n  -- get all active products in the shop (up to 25K)\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign products = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      products(\n        first: 250\n        after: {{ cursor | json }}\n        query: \"status:active\"\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          tags\n          published: publishedOnPublication(\n            publicationId: {{ publication_id | json }}\n          )\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"products\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Product/1234567890\",\n                \"published\": {% if tag_to_add_when_published != blank %}true{% else %}false{% endif %}\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign products = products | concat: result.data.products.nodes %}\n\n  {% if result.data.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.products.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- check and tag/untag products as needed\n{% endcomment %}\n\n{% for product in products %}\n  {% assign tag_to_add = nil %}\n  {% assign tag_to_remove = nil %}\n\n  {% if tag_to_add_when_published != blank %}\n    {% if product.published %}\n      {% unless product.tags contains tag_to_add_when_published %}\n        {% assign tag_to_add = tag_to_add_when_published %}\n      {% endunless %}\n\n    {% elsif product.tags contains tag_to_add_when_published %}\n      {% assign tag_to_remove = tag_to_add_when_published %}\n    {% endif %}\n  {% endif %}\n\n  {% if tag_to_add_when_unpublished != blank %}\n    {% if product.published == false %}\n      {% unless product.tags contains tag_to_add_when_unpublished %}\n        {% assign tag_to_add = tag_to_add_when_unpublished %}\n      {% endunless %}\n\n    {% elsif product.tags contains tag_to_add_when_unpublished %}\n      {% assign tag_to_remove = tag_to_add_when_unpublished %}\n    {% endif %}\n  {% endif %}\n\n  {% if tag_to_add or tag_to_remove %}\n    {% log product: product %}\n\n    {% action \"shopify\" %}\n      mutation {\n        {% if tag_to_add %}\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n\n        {% if tag_to_remove %}\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.run_every_10_minutes__boolean %}\n  mechanic/scheduler/10min\n{% elsif options.run_hourly__boolean %}\n  mechanic/scheduler/hourly\n{% elsif options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}",
  "tags": [
    "Auto-Tag",
    "Products",
    "Publish"
  ]
}
