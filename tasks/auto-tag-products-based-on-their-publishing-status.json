{
  "name": "Auto-tag products based on their publishing status",
  "options": {
    "tag_to_add_when_published": null,
    "tag_to_add_when_unpublished": null,
    "sales_channel_name__required": null,
    "run_every_10_minutes__boolean": null,
    "run_hourly__boolean": null,
    "run_daily__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n\n{% if options.run_every_10_minutes__boolean %}\n  mechanic/scheduler/10min\n{% elsif options.run_hourly__boolean %}\n  mechanic/scheduler/hourly\n{% elsif options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}",
  "script": "{% if options.tag_to_add_when_published == blank and options.tag_to_add_when_unpublished == blank %}\n  {% error \"Fill in at least one tag option to continue. :)\" %}\n{% endif %}\n\n{% capture query %}\n  query {\n    publications(first: 250) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% assign publications = result.data.publications.edges | map: \"node\" | where: \"name\", options.sales_channel_name__required | first %}\n{% assign publication = publications | where: \"name\", options.sales_channel_name__required | first %}\n\n{% assign cursor = nil %}\n{% assign mutations = array %}\n\n{% for n in (0..100) %}\n  {% capture query %}\n    query {\n      products(\n        first: 250\n        after: {{ cursor | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            tags\n            published: publishedOnPublication(\n              publicationId: {{ publication.id | json }}\n            )\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"products\": {\n            \"edges\": [\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/Product/1234567890\",\n                  \"tags\": [],\n                  \"published\": {% if options.tag_to_add_when_published != blank %}true{% else %}false{% endif %}\n                }\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% for product_edge in result.data.products.edges %}\n    {% assign product = product_edge.node %}\n    {% assign tag_to_add = nil %}\n    {% assign tag_to_remove = nil %}\n\n    {% if options.tag_to_add_when_published != blank %}\n      {% if product.published %}\n        {% unless product.tags contains options.tag_to_add_when_published %}\n          {% assign tag_to_add = options.tag_to_add_when_published %}\n        {% endunless %}\n      {% elsif product.tags contains options.tag_to_add_when_published %}\n        {% assign tag_to_remove = options.tag_to_add_when_published %}\n      {% endif %}\n    {% endif %}\n\n    {% if options.tag_to_add_when_unpublished != blank %}\n      {% if product.published == false %}\n        {% unless product.tags contains options.tag_to_add_when_unpublished %}\n          {% assign tag_to_add = options.tag_to_add_when_unpublished %}\n        {% endunless %}\n      {% elsif product.tags contains options.tag_to_add_when_unpublished %}\n        {% assign tag_to_remove = options.tag_to_add_when_unpublished %}\n      {% endif %}\n    {% endif %}\n\n    {% if tag_to_add or tag_to_remove %}\n      {% log product: product %}\n\n      {% action \"shopify\" %}\n        mutation {\n          {% if tag_to_add %}\n            tagsAdd(\n              id: {{ product.id | json }}\n              tags: {{ tag_to_add | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n\n          {% if tag_to_remove %}\n            tagsRemove(\n              id: {{ product.id | json }}\n              tags: {{ tag_to_remove | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n\n  {% if result.data.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.products.edges.last.cursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}",
  "docs": null,
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
