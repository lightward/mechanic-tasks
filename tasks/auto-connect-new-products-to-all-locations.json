{
  "docs": "Using Shopify's multi-locations feature, and importing products in bulk? Use this task to automatically connect each new product to every location for your store.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-connect new products to all locations",
  "online_store_javascript": null,
  "options": {},
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% comment %}\n  -- get all locations in the shop (up to 1K); by default legacy locations (fulfillment services) and inactive locations are excluded from results\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign locations = array %}\n\n{% for n in (1..4) %}\n  {% capture query %}\n    query {\n      locations(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ search_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          name\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"locations\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Location/1234567890\"\n              },\n              {\n                \"id\": \"gid://shopify/Location/2345678901\"\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign locations = locations | concat: result.data.locations.nodes %}\n\n  {% if result.data.locations.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.locations.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- if there is only one active location configured in the shop, then there will be nothing for this task to do\n{% endcomment %}\n\n{% if locations.size == 1 %}\n  {% break %}\n{% endif %}\n\n{% comment %}\n  -- get all variants for this product (up to 2K)\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign variants = array %}\n\n{% for n in (1..8) %}\n  {% capture query %}\n    query {\n      product(id: {{ product.admin_graphql_api_id | json }}) {\n        variants(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            inventoryItem {\n              id\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"product\": {\n            \"variants\": {\n              \"nodes\": [\n                {\n                  \"id\": \"gid://shopify/ProductVariant/1234567890\",\n                  \"inventoryItem\": {\n                    \"id\": \"gid://shopify/inventoryItem/1234567890\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign product = result.data.product %}\n  {% assign variants = variants | concat: result.data.product.variants.nodes %}\n\n  {% if result.data.product.variants.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.product.variants.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- activate each variant's inventory at all active locations\n{% endcomment %}\n\n{% for variant in variants %}\n  {% action \"shopify\" %}\n    mutation {\n      inventoryBulkToggleActivation(\n        inventoryItemId: {{ variant.inventoryItem.id | json }}\n        inventoryItemUpdates: [\n          {% for location in locations %}\n            {\n              locationId: {{ location.id | json }}\n              activate: true\n            }\n          {% endfor %}\n        ]\n      ) {\n        inventoryItem {\n          id\n        }\n        inventoryLevels {\n          location {\n            id\n            name\n          }\n        }\n        userErrors {\n          field\n          message\n          code\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/products/create"
  ],
  "subscriptions_template": "shopify/products/create",
  "tags": [
    "Inventory",
    "Multi-Location",
    "Products"
  ]
}
