{
  "name": "Auto-tag orders using product tags",
  "options": {
    "only_copy_these_tags__array": null,
    "only_copy_tags_having_this_prefix": null
  },
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% assign order_ids_tags_and_product_tags = array %}\n\n{% if event.topic == \"shopify/orders/create\" %}\n  {% if event.preview %}\n    {% capture order_json %}\n      {\n        \"admin_graphql_api_id\": \"gid://shopify/Order/12345\",\n        \"line_items\": [\n          {\n            \"product\": {\n              \"tags\": {{ options.only_copy_these_tags__array | join: \", \" | default: \"preorder\" | json }}\n            }\n          },\n          {\n            \"product\": {\n              \"tags\": {{ options.only_copy_tags_having_this_prefix | default: \"important\" | append: \"-order\" | json }}\n            }\n          }\n        ]\n      }\n    {% endcapture %}\n\n    {% assign order = order_json | parse_json %}\n  {% endif %}\n\n  {% assign order_product_tags = order.line_items | map: \"product\" | map: \"tags\" | join: \", \" | split: \", \" %}\n  {% assign item = array %}\n  {% assign item[0] = order.admin_graphql_api_id %}\n  {% assign item[1] = order.tags | split: \", \" %}\n  {% assign item[2] = order_product_tags %}\n  {% assign order_ids_tags_and_product_tags[0] = item %}\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      orders {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            lineItems {\n              edges {\n                node {\n                  __typename\n                  id\n                  product {\n                    tags\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture objects_jsonl %}\n      {\"__typename\":\"Order\",\"id\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"tags\":[]}\n      {\"__typename\":\"LineItem\",\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/1234567890\",\"product\":{\"tags\":{{ options.only_copy_these_tags__array | join: \",\" | default: \"preorder\" | split: \",\" | json }}},\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n      {\"__typename\":\"LineItem\",\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/2345678901\",\"product\":{\"tags\":[{{ options.only_copy_tags_having_this_prefix | default: \"important\" | append: \"-order\" | json }}]},\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign lineItems = bulkOperation.objects | where: \"__typename\", \"LineItem\" %}\n\n  {% for order in orders %}\n    {% assign order_products = lineItems | where: \"__parentId\", order.id | map: \"product\" | compact %}\n    {% assign order_product_tags = array %}\n    {% for product in order_products %}\n      {% assign order_product_tags = order_product_tags | concat: product.tags | uniq %}\n    {% endfor %}\n\n    {% assign item = array %}\n    {% assign item[0] = order.id %}\n    {% assign item[1] = order.tags %}\n    {% assign item[2] = order_product_tags %}\n    {% assign order_ids_tags_and_product_tags[order_ids_tags_and_product_tags.size] = item %}\n  {% endfor %}\n{% endif %}\n\n{% for item in order_ids_tags_and_product_tags %}\n  {% assign order_id = item[0] %}\n  {% assign order_tags = item[1] %}\n  {% assign order_product_tags = item[2] %}\n\n  {% assign tags_to_add = array %}\n\n  {% for tag in order_product_tags %}\n    {% if order_tags contains tag %}\n      {% continue %}\n    {% endif %}\n\n    {% if options.only_copy_these_tags__array != blank %}\n      {% if options.only_copy_these_tags__array contains nil %}\n        {% error \"'Only copy these tags' must not contain any blank items. If you don't want to use this option, remove its remaining items.\" %}\n      {% endif %}\n\n      {% unless options.only_copy_these_tags__array contains tag %}\n        {% continue %}\n      {% endunless %}\n    {% endif %}\n\n    {% if options.only_copy_tags_having_this_prefix != blank %}\n      {% assign prefix_length = options.only_copy_tags_having_this_prefix.size %}\n      {% assign tag_substr = tag | slice: 0, prefix_length %}\n      {% if tag_substr != options.only_copy_tags_having_this_prefix %}\n        {% continue %}\n      {% endif %}\n    {% endif %}\n\n    {% assign tags_to_add[tags_to_add.size] = tag %}\n  {% endfor %}\n\n  {% if event.preview and tags_to_add == empty %}\n    {% error \"It looks like you have conflicting options configured. Please double-check your options, and try again. :)\" %}\n  {% endif %}\n\n  {% if tags_to_add != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order_id | json }}\n          tags: {{ tags_to_add | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": "Use this task to tag incoming orders with all the product tags in the order. Optionally, specify a specific list of tags to be copied, and/or a certain tag prefix to watch for. Can be run manually, to scan and tag historical orders.\n\nUse this task to tag incoming orders with all the product tags in the order. Optionally, specify a specific list of tags to be copied, and/or a certain tag prefix to watch for.\r\n\r\nRun this task manually to scan and tag all orders, in bulk.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Orders",
    "Products"
  ]
}
