{
  "name": "Partially auto-capture payments as orders are fulfilled",
  "options": {
  },
  "subscriptions": [
    "shopify/orders/updated"
  ],
  "subscriptions_template": "shopify/orders/updated",
  "script": "{% if event.preview %}\n  {% assign order = hash %}\n  {% assign order[\"admin_graphql_api_id\"] = \"gid://shopify/Order/1234567890\" %}\n  {% assign order[\"financial_status\"] = \"partially_paid\" %}\n\n  {% capture preview_result_json %}\n    {\n      \"data\": {\n        \"order\": {\n          \"transactions\": [\n            {\n              \"id\": \"gid://shopify/OrderTransaction/1234567890\",\n              \"amountSet\": {\n                \"shopMoney\": {\n                  \"amount\": \"16.99\",\n                  \"currencyCode\": \"USD\"\n                }\n              }\n            }\n          ],\n          \"totalPriceSet\": {\n            \"shopMoney\": {\n              \"amount\": \"16.99\"\n            }\n          },\n          \"subtotalPriceSet\": {\n            \"shopMoney\": {\n              \"amount\": \"10.0\"\n            }\n          },\n          \"totalCapturableSet\": {\n            \"shopMoney\": {\n              \"amount\": \"16.54\"\n            }\n          },\n          \"fulfillments\": [\n            {\n              \"name\": \"#1234-F1\",\n              \"fulfillmentLineItems\": {\n                \"pageInfo\": {\n                  \"hasNextPage\": false\n                },\n                \"edges\": [\n                  {\n                    \"node\": {\n                      \"discountedTotalSet\": {\n                        \"shopMoney\": {\n                          \"amount\": \"5.0\"\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n{% endif %}\n\n{% if order.financial_status != \"authorized\" and order.financial_status != \"partially_paid\" %}\n  {% log \"Order is not either authorized or partially_paid.\" %}\n{% else %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        transactions(capturable: true) {\n          id\n          amountSet {\n            shopMoney {\n              amount\n              currencyCode\n            }\n          }\n        }\n        totalPriceSet {\n          shopMoney {\n            amount\n          }\n        }\n        subtotalPriceSet {\n          shopMoney {\n            amount\n          }\n        }\n        totalCapturableSet {\n          shopMoney {\n            amount\n          }\n        }\n        fulfillments {\n          name\n          fulfillmentLineItems(first: 250) {\n            pageInfo {\n              hasNextPage\n            }\n            edges {\n              node {\n                discountedTotalSet {\n                  shopMoney {\n                    amount\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% assign result = preview_result_json | parse_json %}\n  {% endif %}\n\n  {% assign total = result.data.order.totalPriceSet.shopMoney.amount | times: 1.0 %}\n  {% assign total_captured = total | minus: result.data.order.totalCapturableSet.shopMoney.amount %}\n  {% assign subtotal = result.data.order.subtotalPriceSet.shopMoney.amount | times: 1.0 %}\n  {% assign subtotal_fulfilled = 0.0 %}\n\n  {% for fulfillment in result.data.order.fulfillments %}\n    {% if fulfillment.fulfillmentLineItems.pageInfo.hasNextPage %}\n      {% error \"This order has a fulfillment with more than 250 line items in it. This is not supported by this task.\" %}\n      {% break %}\n    {% endif %}\n\n    {% for fulfillment_line_item_edge in fulfillment.fulfillmentLineItems.edges %}\n      {% assign subtotal_fulfilled = subtotal_fulfilled | plus: fulfillment_line_item_edge.node.discountedTotalSet.shopMoney.amount %}\n    {% endfor %}\n  {% endfor %}\n\n  {% assign desired_total_captured = subtotal_fulfilled | divided_by: subtotal | times: total %}\n  {% assign amount_to_capture = desired_total_captured | minus: total_captured | times: 100 | round | divided_by: 100.0 %}\n  {% assign parent_transaction = result.data.order.transactions.first %}\n\n  {% log \n    total: total,\n    total_captured: total_captured,\n    subtotal: subtotal,\n    subtotal_fulfilled: subtotal_fulfilled,\n    desired_total_captured: desired_total_captured,\n    amount_to_capture: amount_to_capture,\n    parent_transaction: parent_transaction\n  %}\n\n  {% if result.data.order.capturable == false %}\n    {% log \"This order is not capturable.\" %}\n  {% elsif amount_to_capture == 0 %}\n    {% log \"Nothing to capture at this time.\" %}\n  {% else %}\n    {% action \"shopify\" %}\n      mutation {\n        orderCapture(\n          input: {\n            id: {{ order.admin_graphql_api_id | json }}\n            parentTransactionId: {{ parent_transaction.id | json }}\n            amount: {{ amount_to_capture | append: \"\" | json }}\n            currency: {{ parent_transaction.amountSet.shopMoney.currencyCode }}\n          }\n        ) {\n          transaction {\n            id\n            status\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n\n  {% log result %}\n{% endif %}",
  "docs": null,
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
