{
  "docs": "Use this task to generate and email a CSV of orders, including one row per line item. Filter with a search query or by tags, and auto-tag orders as they're exported. Run the export on demand, and/or nightly. This task is also useful as a template for further development.",
  "halt_action_run_sequence_on_error": false,
  "name": "Email a CSV export of orders",
  "online_store_javascript": null,
  "options": {
    "search_query_for_orders": "fulfillment_status:unshipped",
    "ignore_orders_with_this_tag": "exported",
    "add_this_tag_after_export": "exported",
    "export_email_recipient__email_required": "",
    "export_email_subject__required": "Unfulfilled orders for {{ \"now\" | date: \"%Y-%m-%d\" }}",
    "export_email_body__required_multiline": "Hello,\n\nPlease see the attachment for currently unfulfilled orders.\n\nThanks,\nMechanic, for {{ shop.name }}",
    "export_csv_filename__required": "unfulfilled-orders-{{ \"now\" | date: \"%Y-%m-%d\" }}",
    "run_export_nightly__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign search_query_for_orders = options.search_query_for_orders %}\n{% assign ignore_orders_with_this_tag = options.ignore_orders_with_this_tag %}\n{% assign add_this_tag_after_export = options.add_this_tag_after_export %}\n{% assign export_email_recipient = options.export_email_recipient__email_required %}\n{% assign export_email_subject = options.export_email_subject__required %}\n{% assign export_email_body = options.export_email_body__required_multiline %}\n{% assign export_csv_filename = options.export_csv_filename__required %}\n\n{% assign cursor = nil %}\n{% assign order_ids = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      orders(\n        first: 250\n        query: {{ search_query_for_orders | default: \"\" | json }}\n        after: {{ cursor | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          tags\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% for order in result.data.orders.nodes %}\n    {% if ignore_orders_with_this_tag != blank and order.tags contains ignore_orders_with_this_tag %}\n      {% continue %}\n    {% endif %}\n\n    {% assign order_ids = order_ids | push: order.id  %}\n  {% endfor %}\n\n  {% if result.data.orders.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.orders.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% assign csv = array %}\n{% assign csv[0] = \"Customer ID,First Order Date,Customer E-mail,Shipping First Name,Shipping Last Name,Shipping Address 1,Shipping Address 2,Shipping City,Shipping Province,Shipping Country,Shipping Zip,Shipping Phone,Billing First Name,Billing Last Name,Billing Address 1,Billing Address 2,Billing City,Billing Province,Billing Country,Billing Zip,Billing Phone,Current Purchase Date,Product ID,Product Title,Variant ID,Variant Title,Tags,Quantity,Price,SKU,Shipping Code,Shipping Name\" | split: \",\" %}\n\n{% if event.preview %}\n  {% assign order_ids[0] = \"gid://shopify/Order/1234567890\" %}\n{% endif %}\n\n{% for order_id in order_ids %}\n  {% capture query %}\n    query {\n      order(id: {{ order_id | json }}) {\n        id\n        tags\n        name\n        processedAt\n        shippingAddress {\n          firstName\n          lastName\n          address1\n          address2\n          city\n          province\n          country\n          zip\n          phone\n        }\n        billingAddress {\n          firstName\n          lastName\n          address1\n          address2\n          city\n          province\n          country\n          zip\n          phone\n        }\n        customer {\n          legacyResourceId\n          defaultEmailAddress {\n            emailAddress\n          }\n          orders(\n            first: 1\n            sortKey: PROCESSED_AT\n          ) {\n            nodes {\n              processedAt\n            }\n          }\n        }\n        lineItems(first: 250) {\n          nodes {\n            product {\n              legacyResourceId\n              title\n              tags\n            }\n            variant {\n              legacyResourceId\n              title\n            }\n            customAttributes {\n              key\n              value\n            }\n            quantity\n            discountedTotalSet {\n              shopMoney {\n                amount\n                currencyCode\n              }\n            }\n            sku\n          }\n        }\n        shippingLine {\n          title\n          shippingRateHandle\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign order = result.data.order %}\n\n  {% for line_item in order.lineItems.nodes %}\n    {% assign row = array %}\n\n    {% comment %}Customer ID{% endcomment %}\n    {% assign row[row.size] = order.customer.legacyResourceId %}\n\n    {% comment %}First Order Date{% endcomment %}\n    {% assign row[row.size] = order.customer.orders.nodes.first.processedAt %}\n\n    {% comment %}Customer E-mail{% endcomment %}\n    {% assign row[row.size] = order.customer.defaultEmailAddress.emailAddress %}\n\n    {% comment %}Shipping First Name{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.firstName %}\n\n    {% comment %}Shipping Last Name{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.lastName %}\n\n    {% comment %}Shipping Address 1{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.address1 %}\n\n    {% comment %}Shipping Address 2{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.address2 %}\n\n    {% comment %}Shipping City{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.city %}\n\n    {% comment %}Shipping Province{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.province %}\n\n    {% comment %}Shipping Country{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.country %}\n\n    {% comment %}Shipping Zip{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.zip %}\n\n    {% comment %}Shipping Phone{% endcomment %}\n    {% assign row[row.size] = order.shippingAddress.phone %}\n\n    {% comment %}Billing First Name{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.firstName %}\n\n    {% comment %}Billing Last Name{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.lastName %}\n\n    {% comment %}Billing Address 1{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.address1 %}\n\n    {% comment %}Billing Address 2{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.address2 %}\n\n    {% comment %}Billing City{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.city %}\n\n    {% comment %}Billing Province{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.province %}\n\n    {% comment %}Billing Country{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.country %}\n\n    {% comment %}Billing Zip{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.zip %}\n\n    {% comment %}Billing Phone{% endcomment %}\n    {% assign row[row.size] = order.billingAddress.phone %}\n\n    {% comment %}Current Purchase Date{% endcomment %}\n    {% assign row[row.size] = order.processedAt %}\n\n    {% comment %}Product ID{% endcomment %}\n    {% assign row[row.size] = line_item.product.legacyResourceId %}\n\n    {% comment %}Product Title{% endcomment %}\n    {% assign row[row.size] = line_item.product.title %}\n\n    {% comment %}Variant ID{% endcomment %}\n    {% assign row[row.size] = line_item.variant.legacyResourceId %}\n\n    {% comment %}Variant Title{% endcomment %}\n    {% assign row[row.size] = line_item.variant.title %}\n\n    {% comment %}Tags{% endcomment %}\n    {% assign row[row.size] = line_item.product.tags | join: \", \" %}\n\n    {% comment %}Quantity{% endcomment %}\n    {% assign row[row.size] = line_item.quantity %}\n\n    {% comment %}Price{% endcomment %}\n    {% assign row[row.size] = line_item.discountedTotalSet.shopMoney.amount %}\n\n    {% comment %}SKU{% endcomment %}\n    {% assign row[row.size] = line_item.sku %}\n\n    {% comment %}Shipping Code{% endcomment %}\n    {% assign row[row.size] = order.shippingLine.shippingRateHandle %}\n\n    {% comment %}Shipping Name{% endcomment %}\n    {% assign row[row.size] = order.shippingLine.title %}\n\n    {% assign csv[csv.size] = row %}\n  {% endfor %}\n{% endfor %}\n\n{% if add_this_tag_after_export != blank %}\n  {% for order_id in order_ids %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order_id | json }}\n          tags: {{ add_this_tag_after_export | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endfor %}\n{% endif %}\n\n{% if event.preview or csv.size > 1 %}\n  {% action \"email\" %}\n    {\n      \"from_display_name\": {{ shop.name | json }},\n      \"to\": {{ export_email_recipient | json }},\n      \"subject\": {{ export_email_subject | json }},\n      \"body\": {{ export_email_body | strip | newline_to_br | json }},\n      \"attachments\": {\n        {{ export_csv_filename | append: \".csv\" | json }}: {{ csv | csv | json }}\n      }\n    }\n  {% endaction %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.run_export_nightly__boolean %}mechanic/scheduler/daily{% endif %}",
  "tags": [
    "CSV",
    "Email",
    "Export",
    "Orders"
  ]
}
