{
  "name": "Auto-tag products by their publish date",
  "options": {
    "date_format__required": "%B %Y",
    "tag_prefix__required": "Published: "
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "shopify/products/create",
    "shopify/products/update"
  ],
  "subscriptions_template": "mechanic/user/trigger\nshopify/products/create\nshopify/products/update",
  "script": "{% if options.date_format__required contains \",\" %}\n  {% error \"Tags are not permitted to include commas (','). :)\" %}\n{% endif %}\n\n{% if event.preview %}\n  {% action \"shopify\" %}\n    mutation {\n      tagsAdd(\n        id: \"gid://shopify/Product/1234576890\"\n        tags: {{ \"now\" | date: options.date_format__required | prepend: options.tag_prefix__required | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endif %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% assign products = shop.products %}\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% assign products = array %}\n  {% assign products[0] = product %}\n{% endif %}\n\n{% for product in products %}\n  {% assign product_tags = product.tags | split: \", \" %}\n\n  {% assign calculated_published_at_tag = nil %}\n  {% assign new_published_at_tag = nil %}\n  {% assign old_published_at_tags = array %}\n\n  {% if product.published_at != blank %}\n    {% assign calculated_published_at_tag = product.published_at | date: options.date_format__required | prepend: options.tag_prefix__required %}\n  {% endif %}\n\n  {% for tag in product_tags %}\n    {% if tag == calculated_published_at_tag %}\n      {% continue %}\n    {% endif %}\n\n    {% assign potential_tag_prefix = tag | slice: 0, options.tag_prefix__required.size %}\n    {% if potential_tag_prefix == options.tag_prefix__required %}\n      {% assign old_published_at_tags[old_published_at_tags.size] = tag %}\n    {% endif %}\n  {% endfor %}\n\n  {% unless product_tags contains calculated_published_at_tag %}\n    {% assign new_published_at_tag = calculated_published_at_tag %}\n  {% endunless %}\n\n  {% if new_published_at_tag != blank or old_published_at_tags != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if new_published_at_tag != blank %}\n          tagsAdd(\n            id: {{ product.admin_graphql_api_id | json }}\n            tags: {{ new_published_at_tag | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n\n        {% if old_published_at_tags != empty %}\n          tagsRemove(\n            id: {{ product.admin_graphql_api_id | json }}\n            tags: {{ old_published_at_tags | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": "This task formats the publish date of each product (according to the format you choose), adds a prefix (also of your choosing), and applies it to each product. Run this task manually to scan your entire product catalog at once, or wait for the task to run automatically when products are created or updated.\r\n\r\nUse [strfti.me](http://www.strfti.me) to build a date format that suits you. Use the previews to the right of the task options form to verify that your date format does what you expect. If you've got any questions, use the chat button in the corner. :)",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Products",
    "Publish"
  ]
}
