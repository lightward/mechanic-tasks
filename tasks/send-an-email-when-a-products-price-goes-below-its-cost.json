{
  "name": "Send an email when a product's price goes below its cost",
  "options": {
    "recipient_email__email_required": null
  },
  "subscriptions": [
    "shopify/products/update"
  ],
  "subscriptions_template": "shopify/products/update",
  "script": "{% capture query %}\n  query {\n    product(id: {{ product.admin_graphql_api_id | json }}) {\n      variants(first: 250) {\n        edges {\n          node {\n            id\n            legacyResourceId\n            sku\n            title\n            price\n            inventoryItem {\n              unitCost {\n                amount\n              }\n            }\n            known_cost_and_price: metafield(\n              namespace: \"mechanic\"\n              key: \"known_cost_and_price\"\n            ) {\n              id\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"product\": {\n          \"variants\": {\n            \"edges\": [\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/ProductVariant/1234567890\",\n                  \"legacyResourceId\": \"1234567890\",\n                  \"sku\": \"ABC123\",\n                  \"title\": \"Default Title\",\n                  \"price\": \"5.00\",\n                  \"inventoryItem\": {\n                    \"unitCost\": {\n                      \"amount\": \"10.0\"\n                    }\n                  }\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign product = result.data.product %}\n{% assign variants = product.variants.edges | map: \"node\" %}\n\n{% assign metafields = array %}\n\n{% for variant in variants %}\n  {% assign unit_cost = variant.inventoryItem.unitCost.amount | times: 1 %}\n  {% assign price = variant.price | times: 1 %}\n  {% assign known_cost_and_price = variant.known_cost_and_price.value | default: \"{}\" | parse_json %}\n\n  {% assign current_cost_and_price = hash %}\n  {% assign current_cost_and_price[\"cost\"] = unit_cost %}\n  {% assign current_cost_and_price[\"price\"] = price %}\n\n  {% log\n    variant_id: variant.id,\n    known_cost_and_price: known_cost_and_price,\n    current_cost_and_price: current_cost_and_price\n  %}\n\n  {% if price >= unit_cost and variant.known_cost_and_price != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        metafieldDelete(\n          input: {\n            id: {{ variant.known_cost_and_price.id | json }}\n          }\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n\n  {% elsif price < unit_cost and known_cost_and_price != current_cost_and_price %}\n    {% assign variant_name = variant.sku | default: variant.title %}\n    {% if variant_name == \"Default Title\" %}\n      {% assign variant_name = product.title %}\n    {% endif %}\n\n    {% capture email_subject %}\n      {{ variant_name }} was priced lower than its cost\n    {% endcapture %}\n\n    {% capture email_body %}\n      Hello,\n\n      {{ variant_name }} was found to have a unit cost of {{ unit_cost | currency }}, while its price is set to {{ price | currency }}.\n\n      <a href=\"https://{{ shop.myshopify_domain }}/admin/products/{{ product.id }}/variants/{{ variant.legacyResourceId }}\">Manage this in Shopify</a>\n\n      Thanks,\n      Mechanic, for {{ shop.name }}\n    {% endcapture %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ options.recipient_email__email_required | json }},\n        \"subject\": {{ email_subject | strip | json }},\n        \"body\": {{ email_body | unindent | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n\n    {% capture metafield %}\n      {\n        ownerId: {{ variant.id | json }}\n        namespace: \"mechanic\"\n        key: \"known_cost_and_price\"\n        type: \"json\"\n        value: {{ current_cost_and_price | json | json }}\n      }\n    {% endcapture %}\n\n    {% assign metafields = metafields | push: metafield %}\n  {% endif %}\n{% endfor %}\n\n{% assign groups_of_metafields = metafields | in_groups_of: 25, fill_with: false %}\n\n{% for group_of_metafields in groups_of_metafields %}\n  {% action \"shopify\" %}\n    mutation {\n      metafieldsSet(\n        metafields: [\n          {{ group_of_metafields | join: newline }}\n        ]\n      ) {\n        metafields {\n          id\n          namespace\n          key\n          type\n          value\n          owner {\n            ... on ProductVariant {\n              id\n            }\n          }\n        }\n        userErrors {\n          code\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}",
  "docs": "This task watches for product updates, and sends an email (to the recipient of your choice) for each variant that's found to have a unit cost that's greater than the variant's for-sale price.\n\nIf a product is updated that the task hasn't had a chance to previously observe, emails will be sent immediately for any variants that have a unit cost greater than their price.\n\n[YouTube: Watch the development video!](https://youtu.be/LrFu6bV1f1o)",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Costs",
    "Email",
    "Metafields",
    "Price",
    "Products",
    "Variants"
  ]
}
