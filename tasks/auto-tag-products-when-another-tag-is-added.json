{
  "docs": "This task runs whenever a product is updated (which includes product creation), and it will add the configured \"tags to add\" to the product when the corresponding \"tags to watch for\" are present.\n\nConfigure this task with product tags to watch for on the left, and associated tags to add on the right. (Feel free to use a comma-delimited list on the right side, too.) Optionally, you may choose to remove the \"tags to add\" whenever its paired \"tag to watch for\" is absent.\n\nThis task also supports a manual bulk mode for scanning ALL products in the shop. Select the manual bulk mode option (and save the task) to switch to manual mode and display the \"Run task\" button.\n\n*Note*: Make sure to switch the manual bulk mode off when the full scan is complete if you want the task to resume responding to product update events.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag products when another tag is added",
  "online_store_javascript": null,
  "options": {
    "tags_to_watch_for_and_tags_to_add__keyval_required": null,
    "remove_tag_to_add_when_the_corresponding_tag_to_watch_for_is_removed__boolean": false,
    "manual_bulk_mode__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign tags_to_watch_for_and_tags_to_add = options.tags_to_watch_for_and_tags_to_add__keyval_required %}\n{% assign remove_tags_to_add = options.remove_tags_to_add_when_the_corresponding_tag_to_watch_for_is_removed__boolean %}\n\n{% assign products = array %}\n\n{% if event.topic == \"shopify/products/update\" %}\n  {% assign products[0] = hash %}\n  {% assign products[0][\"id\"] = product.admin_graphql_api_id %}\n  {% assign products[0][\"tags\"] = product.tags | split: \", \" %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% assign cursor = nil %}\n      \n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            tags\n          }\n        }\n      }\n    {% endcapture %}\n  \n    {% assign result = query | shopify %}\n  \n    {% assign products\n      = result.data.products.nodes\n      | default: array\n      | concat: products\n    %}\n  \n    {% if result.data.products.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.products.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% if event.preview %}\n  {% assign products[0] = hash %}\n  {% assign products[0][\"id\"] = \"gid://shopify/Product/1234567890\" %}\n  {% assign products[0][\"tags\"] = tags_to_watch_for_and_tags_to_add.first.first %}\n{% endif %}\n\n{% for product in products %}\n  {% assign deserved_tags = array %}\n  {% assign tags_to_add = array %}\n  {% assign tags_to_remove = array %}\n\n  {% for keyval in tags_to_watch_for_and_tags_to_add %}\n    {% assign tag_to_watch_for = keyval[0] %}\n\n    {% if product.tags contains tag_to_watch_for %}\n      {% assign tags = keyval[1] | replace: \", \", \",\" | split: \",\" %}\n      {% assign deserved_tags = deserved_tags | concat: tags %}\n\n      {% for tag in tags %}\n        {% unless product.tags contains tag %}\n          {% assign tags_to_add[tags_to_add.size] = tag %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n  {% endfor %}\n\n  {% if remove_tags_to_add %}\n    {% for keyval in tags_to_watch_for_and_tags_to_add %}\n      {% assign tag_to_watch_for = keyval[0] %}\n\n      {% if product.tags contains tag_to_watch_for %}\n        {% continue %}\n      {% endif %}\n\n      {% assign tags = keyval[1] | replace: \", \", \",\" | split: \",\" %}\n\n      {% for tag in tags %}\n        {% unless product.tags contains tag %}\n          {% continue %}\n        {% endunless %}\n\n        {% if deserved_tags contains tag %}\n          {% continue %}\n        {% endif %}\n\n        {% assign tags_to_remove[tags_to_remove.size] = tag %}\n      {% endfor %}\n    {% endfor %}\n  {% endif %}\n\n  {% if tags_to_add != empty or tags_to_remove != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tags_to_add != empty %}\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tags_to_add | json }}\n          ) {\n            node {\n              ... on Product {\n                id\n                title\n                tags_after_add: tags\n              }\n            }\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n        {% if tags_to_remove != empty %}\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tags_to_remove | json }}\n          ) {\n            node {\n              ... on Product {\n                id\n                title\n                tags_after_remove: tags\n              }\n            }\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "subscriptions": [
    "shopify/products/update"
  ],
  "subscriptions_template": "{% if options.manual_bulk_mode__boolean %}\n  mechanic/user/trigger\n{% else %}\n  shopify/products/update\n{% endif %}",
  "tags": [
    "Auto-Tag",
    "Bulk",
    "Products",
    "Tag",
    "Watch"
  ]
}
