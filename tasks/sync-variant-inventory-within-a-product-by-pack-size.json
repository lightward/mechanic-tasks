{
  "docs": "Use this task to sell a single product in different pack sizes, keeping available inventory levels synchronized appropriately, storing the \"main\" inventory level in a product tag (e.g. \"inventory:50\").\n\nNew orders for a pack-sized variant will result in the product's inventory tag being updated, and all pack-sized variants having their available inventory levels re-synced. And, manually updating a product's inventory tag will automatically re-sync variant available inventory levels as well.\n\nThe pack size for each variant can be determined by a numeric [product option](https://help.shopify.com/en/manual/products/variants) (e.g. \"Pack size: 50\"), or by [metafield](https://help.shopify.com/en/manual/custom-data/metafields).\n\nThis task will skip any products that do not have an inventory tag, and will skip any variants ordered that have no pack size information.",
  "halt_action_run_sequence_on_error": false,
  "name": "Sync variant inventory within a product by pack size",
  "online_store_javascript": null,
  "options": {
    "product_inventory_tag_prefix__required": "inventory:",
    "variant_pack_size_option_name": "Pack size",
    "variant_pack_size_metafield_namespace": "",
    "variant_pack_size_metafield_key": "",
    "run_when_orders_are_paid_instead_of_when_they_are_created__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign product_inventory_tag_prefix = options.product_inventory_tag_prefix__required %}\n{% assign product_inventory_tag_prefix_size = product_inventory_tag_prefix.size %}\n{% assign pack_size_option_name = options.variant_pack_size_option_name %}\n{% assign metafield_namespace_dot_key = options.variant_pack_size_metafield_namespace_dot_key %}\n\n{% if pack_size_option_name == blank and metafield_namespace_dot_key == blank %}\n  {% error \"Choose a method for determining variant pack size: either option name, or metafield.\" %}\n{% elsif pack_size_option_name != blank and metafield_namespace_dot_key != blank %}\n  {% error \"Choose to determine the variant pack size by *either* option name or by metafield - not both.\" %}\n{% endif %}\n\n{% if pack_size_option_name != blank %}\n  {% assign pack_size_mode = \"option\" %}\n{% else %}\n  {% assign pack_size_mode = \"metafield\" %}\n{% endif %}\n\n{% assign primary_location = shop.locations[shop.primary_location_id] %}\n\n{% assign product_considerations = array %}\n\n{% if event.topic contains \"shopify/orders/\" %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        lineItems(first: 200) {\n          nodes {\n            quantity\n            variant {\n              product {\n                id\n                tags\n              }\n              {% if pack_size_mode == \"option\" %}\n                selectedOptions {\n                  name\n                  value\n                }\n              {% else %}\n                metafield(key: {{ metafield_namespace_dot_key | json }}) {\n                  value\n                }\n              {% endif %}\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"order\": {\n            \"lineItems\": {\n              \"nodes\": [\n                {\n                  \"quantity\": 2,\n                  \"variant\": {\n                    \"product\": {\n                      \"id\": \"gid://shopify/Product/1234567890\",\n                      \"tags\": {{ product_inventory_tag_prefix | append: 80 | json }}\n                    },\n                    {% if pack_size_mode == \"option\" %}\n                      \"selectedOptions\": [{\n                        \"name\": {{ pack_size_option_name | json }},\n                        \"value\": \"25\"\n                      }]\n                    {% else %}\n                      \"metafield\": {\n                        \"value\": \"25\"\n                      }\n                    {% endif %}\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% for line_item in result.data.order.lineItems.nodes %}\n    {% assign pack_size = nil %}\n\n    {% if pack_size_mode == \"option\" %}\n      {% assign pack_size_option = line_item.variant.selectedOptions | where: \"name\", pack_size_option_name | first %}\n      {% assign pack_size = pack_size_option.value %}\n    {% else %}\n      {% assign pack_size = line_item.variant.metafield.value %}\n    {% endif %}\n\n    {% if pack_size == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% assign quantity_times_pack_size = line_item.quantity | times: pack_size %}\n    {% assign product_inventory_new = product_inventory_old | minus: quantity_times_pack_size %}\n\n    {% assign product_consideration = hash %}\n    {% assign product_consideration[\"id\"] = line_item.variant.product.id %}\n    {% assign product_consideration[\"tags\"] = line_item.variant.product.tags %}\n    {% assign product_consideration[\"inventory_difference\"] = quantity_times_pack_size %}\n    {% assign product_considerations[product_considerations.size] = product_consideration %}\n  {% endfor %}\n\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% assign product_id = product.admin_graphql_api_id %}\n  {% assign product_tags = product.tags | split: \", \" %}\n\n  {% if event.preview %}\n    {% assign product_id = \"gid://shopify/Product/1234576890\" %}\n    {% assign product_tags = product_inventory_tag_prefix | append: 80 %}\n  {% endif %}\n\n  {% assign product_consideration = hash %}\n  {% assign product_consideration[\"id\"] = product_id %}\n  {% assign product_consideration[\"tags\"] = product_tags %}\n  {% assign product_considerations[product_considerations.size] = product_consideration %}\n{% endif %}\n\n{% for product_consideration in product_considerations %}\n  {% assign product_inventory_old = nil %}\n\n  {% for product_tag in product_consideration.tags %}\n    {% assign product_tag_possible_prefix = product_tag | slice: 0, product_inventory_tag_prefix_size %}\n\n    {% if product_tag_possible_prefix == product_inventory_tag_prefix %}\n      {% assign product_inventory_old = product_tag | slice: product_inventory_tag_prefix_size, 100 | times: 1 %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if product_inventory_old == blank %}\n    {% continue %}\n  {% endif %}\n\n  {% assign product_inventory_new = product_inventory_old | minus: product_consideration.inventory_difference %}\n\n  {% capture query %}\n    query {\n      product(id: {{ product_consideration.id | json }}) {\n        variants(first: 100) {\n          nodes {\n            inventoryItem {\n              id\n              inventoryLevel(locationId: {{ primary_location.admin_graphql_api_id | json }}) {\n                quantities(names: \"available\") {\n                  name\n                  quantity\n                }\n              }\n            }\n            {% if pack_size_mode == \"option\" %}\n              selectedOptions {\n                name\n                value\n              }\n            {% else %}\n              metafield(key: {{ metafield_namespace_dot_key | json }}) {\n                value\n              }\n            {% endif %}\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"product\": {\n            \"variants\": {\n              \"nodes\":\n              [\n                {\n                  \"inventoryItem\": {\n                    \"id\": \"gid://shopify/InventoryItem/1234567890\",\n                    \"inventoryLevel\": {\n                      \"quantities\": [\n                        {\n                          \"name\": \"available\",\n                          \"quantity\": {% if event.topic contains \"shopify/orders/\" %}3{% else %}0{% endif %}\n                        }\n                      ]\n                    }\n                  },\n                  {% if pack_size_mode == \"option\" %}\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ pack_size_option_name | json }},\n                        \"value\": \"25\"\n                      }\n                    ]\n                  {% else %}\n                    \"metafield\": {\n                      \"value\": \"25\"\n                    }\n                  {% endif %}\n                },\n                {\n                  \"inventoryItem\": {\n                    \"id\": \"gid://shopify/InventoryItem/2345678901\",\n                    \"inventoryLevel\": {\n                      \"quantities\": [\n                        {\n                          \"name\": \"available\",\n                          \"quantity\": {% if event.topic contains \"shopify/orders/\" %}1{% else %}0{% endif %}\n                        }\n                      ]\n                    }\n                  },\n                  {% if pack_size_mode == \"option\" %}\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ pack_size_option_name | json }},\n                        \"value\": \"50\"\n                      }\n                    ]\n                  {% else %}\n                    \"metafield\": {\n                      \"value\": \"50\"\n                    }\n                  {% endif %}\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign variants = result.data.product.variants.nodes %}\n\n  {% assign inventory_adjustments = array %}\n\n  {% for variant in variants %}\n    {% assign pack_size = nil %}\n\n    {% if pack_size_mode == \"option\" %}\n      {% assign pack_size_option = variant.selectedOptions | where: \"name\", pack_size_option_name | first %}\n      {% assign pack_size = pack_size_option.value %}\n    {% else %}\n      {% assign pack_size = variant.metafield.value %}\n    {% endif %}\n\n    {% if pack_size == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% assign new_inventory_level = product_inventory_new | times: 1.0 | divided_by: pack_size | floor %}\n\n    {% if new_inventory_level == variant.inventoryItem.inventoryLevel.quantities.first.quantity %}\n      {% continue %}\n    {% endif %}\n\n    {% assign inventory_adjustment = hash %}\n    {% assign inventory_adjustment[\"inventoryItemId\"] = variant.inventoryItem.id %}\n    {% assign inventory_adjustment[\"locationId\"] = primary_location.admin_graphql_api_id %}\n    {% assign inventory_adjustment[\"delta\"] = new_inventory_level | minus: variant.inventoryItem.inventoryLevel.quantities.first.quantity %}\n    {% assign inventory_adjustments = inventory_adjustments | push: inventory_adjustment %}\n  {% endfor %}\n\n  {% capture mutations %}\n    {% if product_inventory_old != product_inventory_new %}\n      tagsRemove(\n        id: {{ product_consideration.id | json }}\n        tags: {{ product_inventory_tag_prefix | append: product_inventory_old | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n\n      tagsAdd(\n        id: {{ product_consideration.id | json }}\n        tags: {{ product_inventory_tag_prefix | append: product_inventory_new | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    {% endif %}\n\n    {% if inventory_adjustments != blank %}\n      inventoryAdjustQuantities(\n        input: {\n          reason: \"correction\"\n          name: \"available\"\n          changes: {{ inventory_adjustments | graphql_arguments }}\n        }\n      ) {\n        inventoryAdjustmentGroup {\n          reason\n          changes {\n            name\n            delta\n            quantityAfterChange\n            item {\n              id\n              sku\n            }\n            location {\n              name\n            }\n          }\n        }\n        userErrors {\n          code\n          field\n          message\n        }\n      }\n    {% endif %}\n  {% endcapture %}\n\n  {% if mutations != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        {{ mutations }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/create",
    "shopify/products/create",
    "shopify/products/update"
  ],
  "subscriptions_template": "{% if options.run_when_orders_are_paid_instead_of_when_they_are_created__boolean %}\n  shopify/orders/paid\n{% else %}\n  shopify/orders/create\n{% endif %}\nshopify/products/create\nshopify/products/update",
  "tags": [
    "Inventory",
    "Products",
    "Sync"
  ]
}
