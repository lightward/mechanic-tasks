{
  "name": "Sync variant inventory within a product by pack size",
  "options": {
    "product_inventory_tag_prefix__required": "inventory:",
    "variant_pack_size_option_name": "Pack size",
    "variant_pack_size_metafield_namespace": "",
    "variant_pack_size_metafield_key": "",
    "run_when_orders_are_paid_instead_of_when_they_are_created__boolean": false
  },
  "subscriptions": [
    "shopify/orders/create",
    "shopify/products/create",
    "shopify/products/update"
  ],
  "subscriptions_template": "{% if options.run_when_orders_are_paid_instead_of_when_they_are_created__boolean %}shopify/orders/paid{% else %}shopify/orders/create{% endif %}\nshopify/products/create\nshopify/products/update",
  "script": "{% assign product_inventory_tag_prefix = options.product_inventory_tag_prefix__required %}\n{% assign product_inventory_tag_prefix_size = product_inventory_tag_prefix.size %}\n{% assign pack_size_option_name = options.variant_pack_size_option_name %}\n{% assign metafield_namespace = options.variant_pack_size_metafield_namespace %}\n{% assign metafield_key = options.variant_pack_size_metafield_key %}\n\n{% if pack_size_option_name == blank and metafield_namespace == blank and metafield_key == blank %}\n  {\"error\": \"Choose a method for determining variant pack size: either option name, or metafield.\"}\n{% elsif pack_size_option_name != blank and metafield_namespace != blank %}\n  {\"error\": \"Choose to determine the variant pack size by *either* option name or by metafield - not both.\"}\n{% elsif pack_size_option_name != blank and metafield_key != blank %}\n  {\"error\": \"Choose to determine the variant pack size by *either* option name or by metafield - not both.\"}\n{% elsif pack_size_option_name != blank %}\n  {% comment %} cool {% endcomment %}\n{% elsif metafield_namespace == blank or metafield_key == blank %}\n  {\"error\": \"If using metafields to determine variant pack size, fill in both metafield namespace and key.\"}\n{% endif %}\n\n{% if pack_size_option_name != blank %}\n  {% assign pack_size_mode = \"option\" %}\n{% else %}\n  {% assign pack_size_mode = \"metafield\" %}\n{% endif %}\n\n{% assign product_considerations = array %}\n\n{% if event.topic contains \"shopify/orders/\" %}\n  {% capture order_query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        lineItems(first: 249) {\n          edges {\n            node {\n              quantity\n              variant {\n                product {\n                  id\n                  tags\n                }\n                {% if pack_size_mode == \"option\" %}\n                  selectedOptions {\n                    name\n                    value\n                  }\n                {% else %}\n                  packSizeMetafield: metafield(\n                    namespace: {{ metafield_namespace | json }}\n                    key: {{ metafield_key | json }}\n                  ) {\n                    value\n                  }\n                {% endif %}\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign order_result = order_query | shopify %}\n  {% assign lineItem_nodes = order_result.data.order.lineItems.edges | map: \"node\" %}\n\n  {% if event.preview %}\n    {% capture lineItem_node_json %}\n      {\n        \"quantity\": 2,\n        \"variant\": {\n          \"product\": {\n            \"id\": \"gid://shopify/Product/1234567890\",\n            \"tags\": {{ product_inventory_tag_prefix | append: 80 | json }}\n          },\n          {% if pack_size_mode == \"option\" %}\n            \"selectedOptions\": [{\n              \"name\": {{ pack_size_option_name | json }},\n              \"value\": \"25\"\n            }]\n          {% else %}\n            \"packSizeMetafield\": {\n              \"value\": \"25\"\n            }\n          {% endif %}\n        }\n      }\n    {% endcapture %}\n\n    {% assign lineItem_nodes = array %}\n    {% assign lineItem_nodes[0] = lineItem_node_json | parse_json %}\n  {% endif %}\n\n  {% for lineItem_node in lineItem_nodes %}\n    {% assign pack_size = nil %}\n\n    {% if pack_size_mode == \"option\" %}\n      {% assign pack_size_option = lineItem_node.variant.selectedOptions | where: \"name\", pack_size_option_name | first %}\n      {% assign pack_size = pack_size_option.value %}\n    {% else %}\n      {% assign pack_size = lineItem_node.variant.packSizeMetafield.value %}\n    {% endif %}\n\n    {% if pack_size == nil %}\n      {% continue %}\n    {% endif %}\n\n    {% assign quantity_times_pack_size = lineItem_node.quantity | times: pack_size %}\n    {% assign product_inventory_new = product_inventory_old | minus: quantity_times_pack_size %}\n\n    {% assign product_consideration = hash %}\n    {% assign product_consideration[\"id\"] = lineItem_node.variant.product.id %}\n    {% assign product_consideration[\"tags\"] = lineItem_node.variant.product.tags %}\n    {% assign product_consideration[\"inventory_difference\"] = quantity_times_pack_size %}\n    {% assign product_considerations[product_considerations.size] = product_consideration %}\n  {% endfor %}\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% assign product_id = product.admin_graphql_api_id %}\n  {% assign product_tags = product.tags | split: \", \" %}\n\n  {% if event.preview %}\n    {% assign product_id = \"gid://shopify/Product/1234576890\" %}\n    {% assign product_tags = product_inventory_tag_prefix | append: 80 %}\n  {% endif %}\n\n  {% assign product_consideration = hash %}\n  {% assign product_consideration[\"id\"] = product_id %}\n  {% assign product_consideration[\"tags\"] = product_tags %}\n  {% assign product_considerations[product_considerations.size] = product_consideration %}\n{% endif %}\n\n{% for product_consideration in product_considerations %}\n  {% assign product_inventory_old = nil %}\n\n  {% for product_tag in product_consideration.tags %}\n    {% assign product_tag_possible_prefix = product_tag | slice: 0, product_inventory_tag_prefix_size %}\n    {% if product_tag_possible_prefix == product_inventory_tag_prefix %}\n      {% assign product_inventory_old = product_tag | slice: product_inventory_tag_prefix_size, 100 | times: 1 %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if product_inventory_old == nil %}\n    {% continue %}\n  {% endif %}\n\n  {% assign product_inventory_new = product_inventory_old | minus: product_consideration.inventory_difference %}\n\n  {% capture product_query %}\n    query {\n      product(id: {{ product_consideration.id | json }}) {\n        variants(first: 250) {\n          edges {\n            node {\n              inventoryQuantity\n              inventoryItem {\n                id\n              }\n              {% if pack_size_mode == \"option\" %}\n                selectedOptions {\n                  name\n                  value\n                }\n              {% else %}\n                packSizeMetafield: metafield(\n                  namespace: {{ metafield_namespace | json }}\n                  key: {{ metafield_key | json }}\n                ) {\n                  value\n                }\n              {% endif %}\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign product_result = product_query | shopify %}\n  {% assign variant_nodes = product_result.data.product.variants.edges | map: \"node\" %}\n\n  {% if event.preview %}\n    {% capture variant_nodes_json %}\n      [\n        {\n          \"inventoryQuantity\": {% if event.topic contains \"shopify/orders/\" %}3{% else %}0{% endif %},\n          \"inventoryItem\": {\n            \"id\": \"gid://shopify/InventoryItem/1234567890\"\n          },\n          {% if pack_size_mode == \"option\" %}\n            \"selectedOptions\": [{\n              \"name\": {{ pack_size_option_name | json }},\n              \"value\": \"25\"\n            }]\n          {% else %}\n            \"packSizeMetafield\": {\n              \"value\": \"25\"\n            }\n          {% endif %}\n        },\n        {\n          \"inventoryQuantity\": {% if event.topic contains \"shopify/orders/\" %}1{% else %}0{% endif %},\n          \"inventoryItem\": {\n            \"id\": \"gid://shopify/InventoryItem/2345678901\"\n          },\n          {% if pack_size_mode == \"option\" %}\n            \"selectedOptions\": [{\n              \"name\": {{ pack_size_option_name | json }},\n              \"value\": \"50\"\n            }]\n          {% else %}\n            \"packSizeMetafield\": {\n              \"value\": \"50\"\n            }\n          {% endif %}\n        }\n      ]\n    {% endcapture %}\n\n    {% assign variant_nodes = variant_nodes_json | parse_json %}\n  {% endif %}\n\n  {% assign inventory_item_adjustments = array %}\n\n  {% for variant_node in variant_nodes %}\n    {% assign pack_size = nil %}\n\n    {% if pack_size_mode == \"option\" %}\n      {% assign pack_size_option = variant_node.selectedOptions | where: \"name\", pack_size_option_name | first %}\n      {% assign pack_size = pack_size_option.value %}\n    {% else %}\n      {% assign pack_size = variant_node.packSizeMetafield.value %}\n    {% endif %}\n\n    {% if pack_size == nil %}\n      {% continue %}\n    {% endif %}\n\n    {% assign new_inventory_level = product_inventory_new | times: 1.0 | divided_by: pack_size | floor %}\n\n    {% if variant_node.inventoryQuantity == new_inventory_level %}\n      {% continue %}\n    {% endif %}\n\n    {% capture adjustment %}\n      {\n        inventoryItemId: {{ variant_node.inventoryItem.id | json }}\n        availableDelta: {{ new_inventory_level | minus: variant_node.inventoryQuantity | json }}\n      }\n    {% endcapture %}\n\n    {% assign inventory_item_adjustments[inventory_item_adjustments.size] = adjustment %}\n  {% endfor %}\n\n  {% capture mutations %}\n    {% if product_inventory_old != product_inventory_new %}\n      tagsRemove(\n        id: {{ product_consideration.id | json }}\n        tags: {{ product_inventory_tag_prefix | append: product_inventory_old | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n\n      tagsAdd(\n        id: {{ product_consideration.id | json }}\n        tags: {{ product_inventory_tag_prefix | append: product_inventory_new | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    {% endif %}\n\n    {% if inventory_item_adjustments != empty %}\n      inventoryBulkAdjustQuantityAtLocation(\n        locationId: {{ shop.locations[shop.primary_location_id].admin_graphql_api_id | json }}\n        inventoryItemAdjustments: [\n          {{ inventory_item_adjustments | join: newline }}\n        ]\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    {% endif %}\n  {% endcapture %}\n\n  {% if mutations != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        {{ mutations }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": null,
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
