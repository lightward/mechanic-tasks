{
  "docs": "Running when a customer is updated, this task will fill empty customer names and/or phones on accounts by pulling the relevant data from any customer addresses on file. Optionally, the task may be run in manual mode to scan and update all customers.\n\nThis task is a combination of two separate merchant requests, the first desiring a way to backfill empty customer registration names once initial orders were made, and the second which noted that customer phone numbers were only set when they opted in to receive SMS updates during checkout.\n\n__Note:__ To avoid conflicts with this task running on customer updates (the default configuration), the manual run mode must be toggled by checking the \"Enable manual runs to scan all customers\" option AND saving the task. This will prevent the task from running on customer updates until this option is unchecked.",
  "halt_action_run_sequence_on_error": false,
  "name": "Update empty customer data from addresses",
  "online_store_javascript": null,
  "options": {
    "update_customer_first_and_last_name__boolean": null,
    "update_customer_phone__boolean": null,
    "enable_manual_runs_to_scan_all_customers__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign update_customer_first_and_last_name = options.update_customer_first_and_last_name__boolean %}\n{% assign update_customer_phone = options.update_customer_phone__boolean %}\n\n{% unless update_customer_first_and_last_name or update_customer_phone %}\n  {% error \"Choose at least one of the update customer options.\" %}\n{% endunless %}\n\n{% if event.topic == \"shopify/customers/update\" %}\n  {% assign customers = array %}\n\n  {% capture query %}\n    query {\n      customer(id: {{ customer.admin_graphql_api_id | json }}) {\n        id\n        firstName\n        lastName\n        phone\n        defaultAddress {\n          firstName\n          lastName\n          phone\n        }\n        addresses {\n          firstName\n          lastName\n          phone\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign customers[0] = result.data.customer %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      customers {\n        edges {\n          node {\n            id\n            firstName\n            lastName\n            phone\n            defaultAddress {\n              firstName\n              lastName\n              phone\n            }\n            addresses {\n              firstName\n              lastName\n              phone\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign customers = bulkOperation.objects %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture customers_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Customer/1234567890\",\n        \"phone\": null,\n        \"defaultAddress\": {\n          \"firstName\": \"Jean\",\n          \"lastName\": \"Deaux\"\n        },\n        \"addresses\": [\n          {\n            \"phone\": null\n          },\n          {\n            \"phone\": \"+18885559876\"\n          }\n        ]\n      }\n    ]\n  {% endcapture %}\n\n  {% assign customers = customers_json | parse_json %}\n{% endif %}\n\n{% for customer in customers %}\n  {% assign first_name = nil %}\n  {% assign last_name = nil %}\n  {% assign phone = nil %}\n\n  {% assign customer_addresses\n    = customer.addresses\n    | unshift: customer.defaultAddress\n  %}\n\n  {% if update_customer_first_and_last_name %}\n    {% if customer.firstName == blank %}\n      {% for customer_address in customer_addresses %}\n        {% unless customer_address.firstName == blank %}\n          {% assign first_name = customer_address.firstName %}\n          {% break %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n\n    {% if customer.lastName == blank %}\n      {% for customer_address in customer_addresses %}\n        {% unless customer_address.lastName == blank %}\n          {% assign last_name = customer_address.lastName %}\n          {% break %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n  {% endif %}\n\n  {% if update_customer_phone %}\n    {% if customer.phone == blank %}\n      {% for customer_address in customer_addresses %}\n        {% unless customer_address.phone == blank %}\n          {% assign phone = customer_address.phone %}\n          {% break %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n  {% endif %}\n\n  {% if first_name or last_name or phone %}\n    {% action \"shopify\" %}\n      mutation {\n        customerUpdate(\n          input: {\n            id: {{ customer.id | json }}\n            {% if first_name %}\n              firstName: {{ first_name | json }}\n            {% endif %}\n            {% if last_name %}\n              lastName: {{ last_name | json }}\n            {% endif %}\n            {% if phone %}\n              phone: {{ phone | json }}\n            {% endif %}\n          }\n        ) {\n          customer {\n            id\n            firstName\n            lastName\n            phone\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "subscriptions": [
    "shopify/customers/update"
  ],
  "subscriptions_template": "{% if options.enable_manual_runs_to_scan_all_customers__boolean %}\n  mechanic/user/trigger\n  mechanic/shopify/bulk_operation\n{% else %}\n  shopify/customers/update\n{% endif %}",
  "tags": [
    "Address",
    "Customers"
  ]
}
