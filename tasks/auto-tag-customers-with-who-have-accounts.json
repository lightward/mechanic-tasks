{
  "name": "Auto-tag customers with who have accounts",
  "options": {
    "customer_tag_to_apply__required": null,
    "test_mode__boolean": true
  },
  "subscriptions": [
    "shopify/customers/create",
    "shopify/customers/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/customers/create\nshopify/customers/update\nmechanic/user/trigger",
  "script": "{% if event.topic contains \"shopify/customers/\" %}\n  {% if event.preview %}\n    {% assign customer = hash %}\n    {% assign customer[\"state\"] = \"enabled\" %}\n    {% assign customer[\"tags\"] = \"\" %}\n    {% assign customer[\"admin_graphql_api_id\"] = \"gid://shopify/Customer/1234567890\" %}\n  {% endif %}\n\n  {% assign customer_tags = customer.tags | split: \", \" %}\n\n  {% if customer.state == \"enabled\" %}\n    {% unless customer_tags contains options.customer_tag_to_apply__required %}\n      {% if options.test_mode__boolean %}\n        {% action \"echo\", \"This customer should be tagged. (Doing nothing, because test mode is enabled.\" %}\n      {% else %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ customer.admin_graphql_api_id | json }}\n              tags: {{ options.customer_tag_to_apply__required | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endif %}\n    {% endunless %}\n  {% elsif customer_tags contains options.customer_tag_to_apply__required %}\n    {% if options.test_mode__boolean %}\n      {% action \"echo\", \"This customer should be untagged. (Doing nothing, because test mode is enabled.\" %}\n    {% else %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer.admin_graphql_api_id | json }}\n            tags: {{ options.customer_tag_to_apply__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endif %}\n{% elsif event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% assign customersToTag_cursor = nil %}\n  {% assign customersToUntag_cursor = nil %}\n\n  {% assign customer_ids_to_tag = array %}\n  {% assign customer_ids_to_untag = array %}\n\n  {% for n in (0..100) %}\n    {% if customersToTag_cursor == false and customersToUntag_cursor == false %}\n      {% break %}\n    {% endif %}\n\n    {% capture query %}\n      query {\n        {% unless customersToTag_cursor == false %}\n          customersToTag: customers(\n            first: 250\n            after: {{ customersToTag_cursor | json }}\n            query: {{ options.customer_tag_to_apply__required | json | prepend: \"-tag:\" | append: \" AND state:enabled\" | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n            }\n            edges {\n              cursor\n              node {\n                id\n              }\n            }\n          }\n        {% endunless %}\n\n        {% unless customersToUntag_cursor == false %}\n          customersToUntag: customers(\n            first: 250\n            after: {{ customersToUntag_cursor | json }}\n            query: {{ options.customer_tag_to_apply__required | json | prepend: \"tag:\" | append: \" AND -state:enabled\" | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n            }\n            edges {\n              cursor\n              node {\n                id\n              }\n            }\n          }\n        {% endunless %}\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% for customer_edge in result.data.customersToTag.edges %}\n      {% assign customer_ids_to_tag[customer_ids_to_tag.size] = customer_edge.node.id %}\n    {% endfor %}\n\n    {% for customer_edge in result.data.customersToUntag.edges %}\n      {% assign customer_ids_to_untag[customer_ids_to_untag.size] = customer_edge.node.id %}\n    {% endfor %}\n\n    {% if result.data.customersToTag.pageInfo.hasNextPage %}\n      {% assign customersToTag_cursor = result.data.customersToTag.edges.last.cursor %}\n    {% else %}\n      {% assign customersToTag_cursor = false %}\n    {% endif %}\n\n    {% if result.data.customersToUntag.pageInfo.hasNextPage %}\n      {% assign customersToUntag_cursor = result.data.customersToUntag.edges.last.cursor %}\n    {% else %}\n      {% assign customersToUntag_cursor = false %}\n    {% endif %}\n  {% endfor %}\n\n  {% if event.preview %}\n    {% assign customer_ids_to_tag[0] = \"gid://shopify/Customer/1234567890\" %}\n    {% assign customer_ids_to_untag[0] = \"gid://shopify/Customer/1234567890\" %}\n  {% endif %}\n\n  {% if options.test_mode__boolean %}\n    {% action \"echo\", customers_to_tag: customer_ids_to_tag.size, customers_to_untag: customer_ids_to_untag.size %}\n  {% else %}\n    {% for customer_id in customer_ids_to_tag %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ customer_id | json }}\n            tags: {{ options.customer_tag_to_apply__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n\n    {% for customer_id in customer_ids_to_untag %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer_id | json }}\n            tags: {{ options.customer_tag_to_apply__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n  {% endif %}\n{% endif %}",
  "docs": "This task monitors customer accounts, and applies the tag of your choice to customers that have an enabled account, with a registered email address and active password. It untags customers whose accounts are disabled. This task can be run manually to tag/untag all existing customers.\n\nThis task runs automatically for individual customers, as they are created and updated. It will tag customers when they have an enabled account (i.e. have a registered email address and active password), and it will untag customers whose accounts are disabled.\r\n\r\nRun this task manually to scan all existing customers, tagging and untagging as appropriate.\r\n\r\nUse test mode to have this task return information about what actions it would normally take.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
