{
  "docs": "Use this task to easily set the shipment status on your fulfilled orders. Just add a tag, and new fulfillment events will be created, using the corresponding shipment status. Optionally, you may have the task attempt to fulfill the order first and may choose whether to send shipment status notifications to the customer.\n\nThis task comes preconfigured with Shopify's shipment status identifiers on the right, and friendly order tags on the left. Feel free to update the tag names on the left-hand side. **Do not modify the labels on the right!** These must correspond directly to Shopify [fulfillment event statuses](https://shopify.dev/docs/api/admin-graphql/2023-04/enums/FulfillmentEventStatus).\n\n**Notes:**\n- This task will fulfill all open fulfillment orders from any location, if it has been configured to attempt to fulfill first. This includes digital items (i.e. shipping not required). However, digital items will not have a shipment status set on them.\n- When setting the shipment status, the task will use the first shipment tag it finds on the order. Be careful to remove any previous shipment tags before applying a new one, since Shopify auto-updates the order as soon as a tag is applied in admin.\n- This task has no knowledge of the typical sequence of shipment progression. It is your responsibility to not inadvertently apply a shipment status tag to an order that has previously been updated to a \"later\" tag (e.g. setting \"CONFIRMED\" on an order that was already at \"DELIVERED\").",
  "halt_action_run_sequence_on_error": false,
  "name": "Manage fulfillment shipment status using order tags",
  "online_store_javascript": null,
  "options": {
    "shipment_tags_and_status__keyval_required": {
      "shipment_attempted_delivery": "ATTEMPTED_DELIVERY",
      "shipment_confirmed": "CONFIRMED",
      "shipment_delivered": "DELIVERED",
      "shipment_failure": "FAILURE",
      "shipment_in_transit": "IN_TRANSIT",
      "shipment_label_printed": "LABEL_PRINTED",
      "shipment_label_purchased": "LABEL_PURCHASED",
      "shipment_out_for_delivery": "OUT_FOR_DELIVERY",
      "shipment_ready_for_pickup": "READY_FOR_PICKUP"
    },
    "attempt_to_fulfill_the_order_before_setting_shipment_status__boolean": false,
    "send_shipment_notifications_to_customer__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign shipment_tags_and_status = options.shipment_tags_and_status__keyval_required %}\n{% assign attempt_to_fulfill_the_order_before_setting_shipment_status = options.attempt_to_fulfill_the_order_before_setting_shipment_status__boolean %}\n{% assign send_shipment_notifications_to_customer = options.send_shipment_notifications_to_customer__boolean %}\n\n{% capture query %}\n  query {\n    order(id: {{ order.admin_graphql_api_id | json }}) {\n      id\n      name\n      tags\n      displayFulfillmentStatus\n      fulfillments(first: 10) {\n        id\n        status\n        displayStatus\n        requiresShipping\n        location {\n          name\n        }\n      }\n      fulfillmentOrders(\n        first: 20\n        query: \"status:open\"\n      ) {\n        nodes {\n          id\n          assignedLocation {\n            name\n          }\n          deliveryMethod {\n            methodType\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"order\": {\n          \"id\": \"gid://shopify/Order/1234567890\",\n          \"name\": \"#SAMPLE\",\n          \"tags\": {{ shipment_tags_and_status.first.first | json }},\n          \"displayFulfillmentStatus\": \"FULFILLED\",\n          \"fulfillments\": [\n            {\n              \"id\": \"gid://shopify/Fulfillment/1234567890\",\n              \"status\": \"SUCCESS\",\n              \"displayStatus\": null,\n              \"requiresShipping\": true,\n              \"location\": {\n                \"name\": \"Warehouse\"\n              }\n            }\n          ],\n          \"fulfillmentOrders\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/FulfillmentOrder/1234567890\",\n                \"assignedLocation\": {\n                  \"name\": \"Warehouse\"\n                },\n                \"deliveryMethod\": {\n                  \"methodType\": \"SHIPPING\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign order = result.data.order %}\n{% assign fulfillment_orders = order.fulfillmentOrders.nodes %}\n\n{% for order_tag in order.tags %}\n  {% if shipment_tags_and_status[order_tag] != blank %}\n    {% assign shipment_status_to_set = shipment_tags_and_status[order_tag] %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% unless shipment_status_to_set %}\n  {% log \"No shipment status tags found on this order; skipping\" %}\n  {% break %}\n{% endunless %}\n\n{% if attempt_to_fulfill_the_order_before_setting_shipment_status %}\n  {% if fulfillment_orders == blank %}\n    {% log \"This order has no open fulfillment orders to fulfill; proceeding to check/set shipment status.\" %}\n\n  {% else %}\n    {% comment %}\n      Note: fulfillments cannot be created with fulfillment orders at different locations or delivery types; so separate them out\n    {% endcomment %}\n\n    {% assign fulfillment_order_ids_by_location_and_type = hash %}\n\n    {% for fulfillment_order in fulfillment_orders %}\n      {% assign location_and_type\n        = fulfillment_order.assignedLocation.name\n        | append: \"|\"\n        | append: fulfillment_order.deliveryMethod.methodType\n      %}\n      {% assign fulfillment_order_ids_by_location_and_type[location_and_type]\n        = fulfillment_order_ids_by_location_and_type[location_and_type]\n        | default: array\n        | push: fulfillment_order.id\n      %}\n    {% endfor %}\n\n    {% for keyval in fulfillment_order_ids_by_location_and_type %}\n      {% action \"shopify\" %}\n        mutation {\n          fulfillmentCreateV2(\n            fulfillment: {\n              lineItemsByFulfillmentOrder: [\n                {% for fulfillment_order_id in keyval[1] %}\n                  { fulfillmentOrderId: {{ fulfillment_order_id | json }} }\n                {% endfor %}\n              ]\n              notifyCustomer: {{ send_shipment_notifications_to_customer | json }}\n            }\n          ) {\n            fulfillment {\n              id\n              status\n            }\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n\n    {% comment %}\n      -- break here so the fulfillments are complete for the next task run on order update\n    {% endcomment %}\n\n    {% unless event.preview %}\n      {% break %}\n    {% endunless %}\n  {% endif %}\n{% endif %}\n\n{% assign fulfillments\n  = order.fulfillments\n  | where: \"requiresShipping\"\n  | where: \"status\", \"SUCCESS\"\n%}\n\n{% if fulfillments == blank %}\n  {% log \"There are no successful fulfillments that require shipping available to update on this order; skipping.\" %}\n  {% break %}\n{% endif %}\n\n{% log\n  shipment_status_to_set: shipment_status_to_set,\n  fulfillments: fulfillments\n%}\n\n{% for fulfillment in fulfillments %}\n  {% if fulfillment.displayStatus != shipment_status_to_set %}\n    {% action \"shopify\" %}\n      mutation {\n        fulfillmentEventCreate(\n          fulfillmentEvent: {\n            fulfillmentId: {{ fulfillment.id | json }}\n            status: {{ shipment_status_to_set }}\n          }\n        ) {\n          fulfillmentEvent {\n            id\n            status\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "subscriptions": [
    "shopify/orders/updated"
  ],
  "subscriptions_template": "shopify/orders/updated",
  "tags": [
    "Fulfillment",
    "Orders",
    "Shipping",
    "Tag"
  ]
}
