{
  "docs": "Use this task to tag products when they reach the out of stock inventory level you configure. Optionally, fill in the email alert recipient to send an alert when a product is initally tagged for being out of stock.\n\nRun this task manually to scan and tag all active products in your store, according to their respective total inventory levels.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag out-of-stock products",
  "online_store_javascript": null,
  "options": {
    "out_of_stock_inventory_level__number_required": 0,
    "product_tag__required": "out-of-stock",
    "email_alert_recipient__email": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign out_of_stock_inventory_level = options.out_of_stock_inventory_level__number_required %}\n{% assign product_tag = options.product_tag__required %}\n{% assign email_alert_recipient = options.email_alert_recipient__email %}\n\n{% assign products = array %}\n\n{% if event.topic == \"shopify/inventory_levels/update\" %}\n  {% comment %}\n    -- get product data from the inventory level resource\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      inventoryLevel(id: {{ inventory_level.admin_graphql_api_id | json }}) {\n        item {\n          variant {\n            product {\n              id\n              legacyResourceId\n              status\n              title\n              totalInventory\n              tags\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign product = result.data.inventoryLevel.item.variant.product %}\n\n  {% comment %}\n    -- only process active products\n  {% endcomment %}\n\n  {% if product.status == \"ACTIVE\" or event.preview %}\n    {% assign products[0] = product %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get all active products in the shop\n  {% endcomment %}\n\n  {% capture bulk_operation_query %}\n    query {\n      products(\n        query: \"status:active\"\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            totalInventory\n            tags\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n  {% break %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign products = bulkOperation.objects | where: \"__typename\", \"Product\" %}\n{% endif %}\n\n{% comment %}\n  -- preview event to handle both inventory level updates and bulk product queries\n{% endcomment %}\n\n{% if event.preview %}\n  {% capture products_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Product/1234567890\",\n        \"totalInventory\": {{ out_of_stock_inventory_level | plus: 1 }},\n        \"tags\": {{ product_tag | json }}\n      },\n      {\n        \"id\": \"gid://shopify/Product/2345678901\",\n        \"title\": \"Widget\",\n        \"totalInventory\": {{ out_of_stock_inventory_level }}\n      }\n    ]\n  {% endcapture %}\n\n  {% assign products = products_json | parse_json %}\n{% endif %}\n\n{% comment %}\n  - process all of the products from bulk query, or the single active product linked to the inventory level update event\n{% endcomment %}\n\n{% for product in products %}\n  {% if product.totalInventory > out_of_stock_inventory_level %}\n    {% if product.tags contains product_tag %}\n      {% comment %}\n        -- product is above the configured out of stock level and has the out of stock tag; remove it\n      {% endcomment %}\n\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ product_tag | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n\n  {% else %}\n    {% comment %}\n      -- product is out of stock\n    {% endcomment %}\n\n    {% if product.tags contains product_tag %}\n      {% comment %}\n        -- product has already been tagged; skip it (including email notification if applicable)\n      {% endcomment %}\n\n      {% continue %}\n    {% endif %}\n\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ product.id | json }}\n          tags: {{ product_tag | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n\n    {% comment %}\n      -- send email if this is a single inventory level event and an alert recipient is configured\n    {% endcomment %}\n\n    {% if event.topic == \"shopify/inventory_levels/update\" and email_alert_recipient != blank %}\n      {% capture email_body %}\n        Hello,\n\n        {{ product.title }} is now out of stock, with a total stock level of {{ product.totalInventory }} (across all variants and locations).\n\n        <a href=\"{{ shop.admin_url }}/products/{{ product.legacyResourceId }}\">Manage this product</a>\n\n        Thanks,\n        Mechanic (for {{ shop.name }})\n      {% endcapture %}\n\n      {% action \"email\" %}\n        {\n          \"to\": {{ email_alert_recipient | json }},\n          \"subject\": {{ product.title | append: \" is now out of stock (\" | append: product.totalInventory | append: \")\" | json }},\n          \"body\": {{ email_body | unindent | strip | newline_to_br | json }},\n          \"reply_to\": {{ shop.customer_email | json }},\n          \"from_display_name\": {{ shop.name | json }}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Auto-Tag",
    "Inventory",
    "Out of Stock",
    "Products"
  ]
}
