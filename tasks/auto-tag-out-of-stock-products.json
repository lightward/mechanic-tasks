{
  "name": "Auto-tag out-of-stock products",
  "options": {
    "out_of_stock_inventory_level__number_required": 0,
    "product_tag__required": "out-of-stock",
    "email_alert_recipient__email": null
  },
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger",
  "script": "{% assign products = array %}\n\n{% if event.preview %}\n  {% assign product = '{\"title\": \"A Shoe\", \"variants\": [{\"inventory_quantity\": 5}], \"admin_graphql_api_id\": \"gid://shopify/Product/1234567890\"}' | parse_json %}\n  {% assign products[products.size] = product %}\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% assign products[products.size] = product %}\n{% elsif event.topic contains \"shopify/inventory_levels/\" %}\n  {% assign products[products.size] = inventory_level.variant.product %}\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% assign products = shop.products %}\n{% endif %}\n\n{% for product in products %}\n  {% assign product_inventory = product.variants | map: \"inventory_quantity\" | sum %}\n\n  {% assign product_tags = product.tags | split: \", \" %}\n\n  {% if event.preview or product_inventory <= options.out_of_stock_inventory_level__number_required %}\n    {% unless event.preview != true and product_tags contains options.product_tag__required %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ product.admin_graphql_api_id | json }}\n            tags: {{ options.product_tag__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n\n      {% if event.topic != \"mechanic/user/trigger\" and options.email_alert_recipient__email != blank %}\n        {% capture email_body %}\n          Hello,\n\n          {{ product.title }} is now out of stock, with a total stock level of {{ product_inventory }} (across all variants and locations).\n\n          <a href=\"https://{{ shop.domain }}/admin/products/{{ product.id }}\">Manage this product</a>\n\n          Thanks,\n          Mechanic (for {{ shop.name }})\n        {% endcapture %}\n\n        {% action \"email\" %}\n          {\n            \"to\": {{ options.email_alert_recipient__email | json }},\n            \"subject\": {{ product.title | append: \" is now out of stock (\" | append: product_inventory | append: \")\" | json }},\n            \"body\": {{ email_body | unindent | strip | newline_to_br | json }},\n            \"reply_to\": {{ shop.customer_email | json }},\n            \"from_display_name\": {{ shop.name | json }}\n          }\n        {% endaction %}\n      {% endif %}\n    {% endunless %}\n  {% else %}\n    {% if product_tags contains options.product_tag__required %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ product.admin_graphql_api_id | json }}\n            tags: {{ options.product_tag__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endif %}\n{% endfor %}",
  "docs": "Does what it says on the tin. :) Optionally, emails you an alert when a product goes out of stock.\n\nRun this task manually to scan and tag all products in your store, according to their respective total inventory levels. Fill in the email alert recipient to send an email alert when a product goes out of stock.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
