{
  "name": "Tag products as in- or out-of-stock",
  "options": {
    "in_stock_tag__required": "in-stock",
    "out_of_stock_tag__required": "out-of-stock",
    "monitor_products_for_inventory_updates__boolean": false
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation\n\n{% if options.monitor_products_for_inventory_updates__boolean %}\n  shopify/products/create\n  shopify/products/update\n{% endif %}",
  "script": "{% assign products = array %}\n\n{% if event.topic contains \"shopify/products/\" %}\n  {% if event.preview %}\n    {% capture product_json %}\n      {\n        \"tags\": \"\",\n        \"admin_graphql_api_id\": \"gid:\\/\\/shopify\\/Product\\/788032119674292922\",\n        \"variants\": [\n          {\n            \"inventory_quantity\": 6\n          },\n          {\n            \"inventory_quantity\": -5\n          }\n        ]\n      }\n\n    {% endcapture %}\n\n    {% assign product = product_json | parse_json %}\n  {% endif %}\n\n  {% assign graphql_product = hash %}\n  {% assign graphql_product[\"id\"] = product.admin_graphql_api_id %}\n  {% assign graphql_product[\"tags\"] = product.tags | split: \", \" %}\n  {% assign graphql_product[\"totalInventory\"] = product.variants | map: \"inventory_quantity\" | sum %}\n\n  {% assign products[0] = graphql_product %}\n{% elsif event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            id\n            totalInventory\n            tags\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_objects_jsonl %}\n      {\"id\":\"gid:\\/\\/shopify\\/Product\\/1234567890\",\"totalInventory\":1,\"tags\":[]}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% assign products = bulkOperation.objects %}\n{% endif %}\n\n{% for product in products %}\n  {% assign tag_to_add = nil %}\n  {% assign tag_to_remove = nil %}\n\n  {% if product.totalInventory > 0 %}\n    {% unless product.tags contains options.in_stock_tag__required %}\n      {% assign tag_to_add = options.in_stock_tag__required %}\n    {% endunless %}\n\n    {% if product.tags contains options.out_of_stock_tag__required %}\n      {% assign tag_to_remove = options.out_of_stock_tag__required %}\n    {% endif %}\n  {% else %}\n    {% unless product.tags contains options.out_of_stock_tag__required %}\n      {% assign tag_to_add = options.out_of_stock_tag__required %}\n    {% endunless %}\n\n    {% if product.tags contains options.in_stock_tag__required %}\n      {% assign tag_to_remove = options.in_stock_tag__required %}\n    {% endif %}\n  {% endif %}\n\n  {% if tag_to_add or tag_to_remove %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tag_to_add %}\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n        {% if tag_to_remove %}\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tag_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": "This task scans your products, in bulk, and tags them according to whether or not they're in stock. Optionally, configure this task to monitor products for live auto-tagging.\r\n\r\nFor the purposes of this task, \"in stock\" means \"having a total inventory of greater than zero, when added up for all variants across all locations\".",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "In stock",
    "Inventory",
    "Out of Stock",
    "Products"
  ]
}
