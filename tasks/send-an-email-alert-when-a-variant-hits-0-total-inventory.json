{
  "docs": "Use this task to receive an immediate email alert, whenever a variant's total inventory hits 0, when added up across all locations. You can limit alerts to a specific collection or publication (e.g. Online Store or Point of Sale). \n\n**Notes:**\n- You can filter by collection or publication, not both at the same time.\n- Run the task manually to get the list of publication IDs for your shop.",
  "halt_action_run_sequence_on_error": false,
  "name": "Send an email alert when a variant hits 0 total inventory",
  "online_store_javascript": null,
  "options": {
    "must_belong_to_collection_id": "",
    "must_be_published_to_publication_id": "",
    "email_subject__required": "\"VARIANT_TITLE\" has hit 0 inventory",
    "email_body__multiline_required": "Hello,\n\nThe variant \"VARIANT_TITLE\" is now at 0 inventory, totaled across all locations.\n\n<a href=\"VARIANT_ADMIN_URL\">Manage this variant in Shopify</a>\n\nThanks,\nMechanic, for  {{ shop.name }}",
    "email_recipient__email_required": ""
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign must_belong_to_collection_id = options.must_belong_to_collection_id %}\n{% assign must_be_published_to_publication_id = options.must_be_published_to_publication_id %}\n{% assign email_subject = options.email_subject__required %}\n{% assign email_body = options.email_body__multiline_required %}\n{% assign email_recipient = options.email_recipient__email_required %}\n\n{% if must_belong_to_collection_id != blank and must_be_published_to_publication_id != blank  %}\n  {% error \"You can only filter by collection or publication, not both.\" %}\n{% endif %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- run the task manually to get the list of your publications and their IDs\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      publications(\n        first: 250\n        catalogType:APP\n      ) {\n        nodes {\n          id\n          catalog {\n            ... on AppCatalog {\n              apps(first: 1) {\n                nodes {\n                  title\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"publications\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Publication/1234567890\",\n                \"catalog\": {\n                  \"apps\": {\n                    \"nodes\": [\n                      {\n                        \"title\": \"Online Store\"\n                      }\n                    ]\n                  }\n                }\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign publication_names_by_id = hash %}\n\n  {% for publication in result.data.publications.nodes %}\n    {% assign publication_id = publication.id | remove: \"gid://shopify/Publication/\" %}\n    {% assign publication_names_by_id[publication_id] = publication.catalog.apps.nodes.first.title %}\n  {% endfor %}\n\n  {% log publication_names_by_id %}\n\n{% elsif event.topic == \"shopify/inventory_levels/update\" %}\n  {% capture query %}\n    query {\n      inventoryLevel(id: {{ inventory_level.admin_graphql_api_id | json }}) {\n        item {\n          variant {\n            displayName\n            inventoryQuantity\n            legacyResourceId\n            product {\n              legacyResourceId\n              {% if must_belong_to_collection_id -%}\n                inCollection(id: \"gid://shopify/Collection/{{must_belong_to_collection_id}}\")\n              {%- elsif must_be_published_to_publication_id -%}\n                publishedOnPublication(publicationId: \"gid://shopify/Publication/{{must_be_published_to_publication_id}}\")\n              {%- endif %}\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"inventoryLevel\": {\n            \"item\": {\n              \"variant\": {\n                \"displayName\": \"Short sleeve t-shirt - L / Red\",\n                \"inventoryQuantity\": 0,\n                \"legacyResourceId\": \"1234567890\",\n                \"product\": {\n                  \"legacyResourceId\": \"1234567890\"\n                  {% if must_belong_to_collection_id -%}\n                    , \"inCollection\" : \"true\"\n                  {%- elsif options.must_be_published_to_publication_id -%}\n                    , \"publishedOnPublication\": \"true\"\n                  {%- endif %}\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign variant = result.data.inventoryLevel.item.variant %}\n\n  {% assign product_qualifies = false %}\n\n  {% if must_belong_to_collection_id == blank and must_be_published_to_publication_id == blank %}\n    {% assign product_qualifies = true %}\n\n  {% elsif must_belong_to_collection_id and variant.product.inCollection %}\n    {% assign product_qualifies = true %}\n\n  {% elsif must_be_published_to_publication_id and variant.product.publishedOnPublication %}\n    {% assign product_qualifies = true %}\n  {% endif %}\n\n  {% if variant.inventoryQuantity == 0 and product_qualifies %}\n    {% assign variant_admin_url = \"https://\" | append: shop.domain | append: \"/admin/products/\" | append: variant.product.legacyResourceId | append: \"/variants/\" | append: variant.legacyResourceId %}\n\n    {% assign email_subject = email_subject | replace: \"VARIANT_TITLE\", variant.displayName | replace: \"VARIANT_ADMIN_URL\", variant_admin_url %}\n    {% assign email_body = email_body | replace: \"VARIANT_TITLE\", variant.displayName | replace: \"VARIANT_ADMIN_URL\", variant_admin_url %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ email_recipient | json }},\n        \"subject\": {{ email_subject | json }},\n        \"body\": {{ email_body | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger",
  "tags": [
    "Alert",
    "Email",
    "Inventory",
    "Out of Stock",
    "Products"
  ]
}
