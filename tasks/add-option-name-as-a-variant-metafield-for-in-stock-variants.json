{
  "name": "Add Option Name as a Variant Metafield for In Stock Variants",
  "options": {
    "metafield_namespace__required": "mechanic",
    "metafield_keyval__required": "size_in_stock",
    "match_option_name__required": "Size"
  },
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% assign metafield_namespace = options.metafield_namespace__required | strip %}\n{% assign metafield_key = options.metafield_keyval__required | strip %}\n{% assign match_option_name = options.match_option_name__required | strip | downcase %}\n\n{% if event.topic == \"shopify/inventory_levels/updates\" %}\n    {% if event.preview %}\n        {% capture inventory_level_json %}\n        {\n        \"admin_graphql_api_id\": \"gid://shopify/InventoryLevel/1234567890?inventory_item_id=1234567890\"\n        }\n        {% endcapture %}\n        {% assign inventory_level = inventory_level_json | parse_json %}\n    {% endif %}\n\n    {% if metafield_namespace != blank and metafield_key != blank %}\n        {% capture query %}\n            query {\n                inventoryLevel(id: {{ inventory_level.admin_graphql_api_id | json }}) {\n                    item {\n                        variant {\n                            id\n                            inventoryPolicy\n                            availableForSale\n                            sellableOnlineQuantity\n                            selectedOptions {\n                                name\n                                value\n                            }\n                            metafield: metafield(\n                                namespace: {{ metafield_namespace | json }}\n                                key: {{ metafield_key | json }}\n                            ) {\n                                legacyResourceId\n                                value\n                            }\n                        }\n                    }\n                }\n            }\n        {% endcapture %}\n\n        {% assign result = query | shopify %}\n\n        {% if event.preview %}\n\n            {% capture result_json %}\n            {\n                \"data\": {\n                \"inventoryItem\": {\n                    \"variant\": {\n                    \"id\": \"gid://shopify/ProductVariant/1234567890\",\n                    \"inventoryPolicy\": \"DENY\",\n                    \"availableForSale\": true,\n                    \"sellableOnlineQuantity\": 123,\n                    \"selectedOptions\": [\n                        {\n                        \"name\": \"Size\",\n                        \"value\": \"M\"\n                        },\n                        {\n                        \"name\": \"Colour\",\n                        \"value\": \"Black\"\n                        }\n                    ],\n                    \"metafield\": {\n                        \"legacyResourceId\": \"1234567890\",\n                        \"value\": \"M\"\n                    }\n                    }\n                }\n                }\n            }\n            {% endcapture %}\n            {% assign result = result_json | parse_json %}\n        {% endif %}\n        \n        {% assign option_value = false %}\n        {% for option in result.data.inventoryLevel.item.variant.selectedOptions %}\n        {% log message: \"option: \", details: option %}\n            {% assign name_clean = option.name | downcase %}\n            {% if name_clean == match_option_name %}\n                {% assign option_value = option.value %}\n            {% endif %}\n        {% endfor %}\n\n        {% assign is_in_stock = false %} \n        {% if result.data.inventoryLevel.item.variant.inventoryPolicy == \"CONTINUE\" and result.data.inventoryLevel.item.variant.availableForSale %}\n            {% assign is_in_stock = true %}\n        {% elsif result.data.inventoryLevel.item.variant.sellableOnlineQuantity > 0 and result.data.inventoryLevel.item.variant.availableForSale %}\n            {% assign is_in_stock = true %} \n        {% endif %}\n\n        {% if result.data.inventoryLevel.item.variant.metafield == null %}\n            {% assign metafield_exists = false %}\n        {% else %}\n            {% assign metafield_exists = true %}\n            {% assign existing_metafield_id = result.data.inventoryLevel.item.variant.metafield.legacyResourceId | prepend: 'gid://shopify/Metafield/' %}\n        {% endif %}\n        \n        {% assign set_metafield = false %}\n        {% if metafield_exists == false and is_in_stock and option_value %}\n            {% assign set_metafield = true %}\n        {% elsif metafield_exists and option_value != result.data.inventoryLevel.item.variant.metafield.value %}\n            {% assign set_metafield = true %} \n        {% endif %}\n\n        {% if set_metafield or event.preview %}\n            {% action \"shopify\" %}\n                mutation {\n                    metafieldsSet(\n                        metafields: [\n                            {\n                                ownerId: {{ result.data.inventoryLevel.item.variant.id | json }}\n                                namespace: {{ metafield_namespace | json }}\n                                key: {{ metafield_key | json }}\n                                type: \"string\"\n                                value: {{ option_value | append: \"\" | json }}\n                            }\n                        ]\n                    ) {\n                        metafields {\n                            id\n                            namespace\n                            key\n                            type\n                            value\n                            owner {\n                                ... on ProductVariant {\n                                    id\n                                }\n                            }\n                        }\n                        userErrors {\n                            code\n                            field\n                            message\n                        }\n                    }\n                }\n            {% endaction %}\n\n        {% elsif metafield_exists and is_in_stock == false %}\n            {% action \"shopify\" %}\n                mutation {\n                    metafieldDelete(\n                        input: {\n                            id:  {{ existing_metafield_id | json }}\n                        }\n                    ) {\n                        userErrors {\n                            field\n                            message\n                        }\n                    }\n                }\n            {% endaction %}\n        {% endif %}\n    {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n\n    {% capture bulk_operation_query %}\n    query {\n        productVariants {\n            edges {\n                node {\n                    id\n                    inventoryPolicy\n                    availableForSale\n                    sellableOnlineQuantity\n                    selectedOptions {\n                        name\n                        value\n                    }\n                    metafield: metafield(\n                        namespace: {{ metafield_namespace | json }}\n                        key: {{ metafield_key | json }}\n                    ) {\n                        legacyResourceId\n                        value\n                    }\n                }\n            }\n        }\n    }\n    {% endcapture %}\n\n    {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n    {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n    {% if event.preview %}\n        {%- comment -%}To do - update preview jsonl_string, below is an approximation/best guess!{%- endcomment -%}\n        {% capture jsonl_string %}\n        {\"id\":\"gid:\\/\\/shopify\\/ProductVariant\\/1234567890\",\"inventoryPolicy\":\"CONTINUE\",\"availableForSale\":\"true\",\"sellableOnlineQuantity\":\"123\",\"selectedOptions\":{\"Size\":\"M\",\"Colour\":\"Black\"},\"metafield\":{\"legacyResourceId\":\"1234567890\",\"value\":\"M\"}}\n         {% endcapture %}\n        {% assign bulkOperation = hash %}\n        {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n    {% endif %}\n\n    {% assign product_variants = bulkOperation.objects %}\n    {% log message: \"bulkOperation.objects size: \", details: bulkOperation.objects | size %}\n    {% assign metafields_to_set = array %}\n    {% assign metafields_to_delete = array %}\n\n    {% for product_variant in product_variants %}\n\n    {% assign option_value = false %}\n    {% for option in product_variant.selectedOptions %}\n        {% assign name_clean = option.name | downcase %}\n        {% if name_clean == match_option_name %}\n            {% assign option_value = option.value %}\n        {% endif %}\n    {% endfor %}\n\n    {% assign is_in_stock = false %}  \n    {% if product_variant.inventoryPolicy == \"CONTINUE\" and product_variant.availableForSale %}\n        {% assign is_in_stock = true %}\n    {% elsif product_variant.sellableOnlineQuantity > 0 and product_variant.availableForSale %}\n        {% assign is_in_stock = true %} \n    {% endif %}\n\n    {% assign metafield_exists = true %}\n    {% if product_variant.metafield == null %}\n        {% assign metafield_exists = false %}\n    {% endif %}\n    \n    {% assign set_metafield = false %}\n    {% if metafield_exists == false and is_in_stock and option_value %}\n        {% assign set_metafield = true %}\n    {% elsif metafield_exists and option_value != product_variant.metafield.value %}\n        {% assign set_metafield = true %} \n    {% endif %}\n\n    {% if set_metafield or event.preview %}\n\n        {% capture metafield_to_set %}\n        {\n            ownerId: {{ product_variant.id | json }}\n            namespace: {{ metafield_namespace | json }}\n            key: {{ metafield_key | json }}\n            type: \"string\"\n            value: {{ option_value | append: \"\" | json }}\n        }\n        {% endcapture %}\n        {% assign metafields_to_set = metafields_to_set | push: metafield_to_set %}\n\n    {% elsif is_in_stock == false and metafield_exists %}\n\n        {% assign metafield_id_to_delete = product_variant.metafield.legacyResourceId | prepend: 'gid://shopify/Metafield/' %}\n        {% assign metafields_to_delete = metafields_to_delete | push: metafield_id_to_delete %}\n\n    {% endif %}\n\n  {% endfor %}\n\n  {% log message: \"Total metafields being updated: \", details: metafields_to_set | size %}\n  {% log message: \"Totla metafields being deleted: \", details: metafields_to_delete | size %}\n\n  {% assign groups_of_metafields_to_set = metafields_to_set | in_groups_of: 25, fill_with: false %}\n\n  {% for group_of_metafields_to_set in groups_of_metafields_to_set %}\n    {% action \"shopify\" %}\n      mutation {\n        metafieldsSet(\n          metafields: [\n            {{ group_of_metafields_to_set | join: newline }}\n          ]\n        ) {\n          metafields {\n            id\n            namespace\n            key\n            type\n            value\n            owner {\n              ... on ProductVariant {\n                id\n              }\n            }\n          }\n          userErrors {\n            code\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endfor %}\n\n  {% for metafield_id in metafields_to_delete %}\n    {% action \"shopify\" %}\n        mutation {\n            metafieldDelete(\n                input: {\n                    id: {{ metafield_id | json }}\n                }\n            ) {\n                userErrors {\n                    field\n                    message\n                }\n            }\n        }\n    {% endaction %}\n  {% endfor %}\n\n{% endif %}",
  "docs": "This task was originally designed to power a \"Size in Stock\" filter in Online Store 2.0 filtering. It could equally be configured for \"Colour in Stock\" or any other option name from where you want to use the values in a filter.\n2.0 filtering does include an In Stock and Size filter by default, but the combination is unintuitive.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
