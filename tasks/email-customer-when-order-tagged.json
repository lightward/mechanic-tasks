{
  "name": "Email customers when their order is tagged",
  "options": {
    "tag_to_watch_for__required": "in-production",
    "email_subject__required": "Order {{ order.name }} is in production",
    "email_body__required_multiline": "Hi {{ order.customer.first_name | default: \"there\" }},\n\nYour order is in the shop! We'll be in touch when it's been shipped.\n\nThanks,\nThe team at {{ shop.name }}",
    "ignore_orders_older_than_this_task__boolean": true,
    "ignore_orders_having_this_tag": null
  },
  "subscriptions": [
    "shopify/orders/create",
    "shopify/orders/updated"
  ],
  "subscriptions_template": "shopify/orders/create\nshopify/orders/updated",
  "script": "{% comment %}\n  Establish option order:\n\n  {{ options.tag_to_watch_for__required }}\n  {{ options.email_subject__required }}\n  {{ options.email_body__required_multiline }}\n  {{ options.ignore_orders_older_than_this_task__boolean }}\n  {{ options.ignore_orders_having_this_tag }}\n{% endcomment %}\n\n{% if event.preview %}\n  {% capture order_json %}\n    {\n      \"admin_graphql_api_id\": \"gid://shopify/Order/1234568790\",\n      \"email\": \"customer@example.com\",\n      \"tags\": {{ options.tag_to_watch_for__required | json }},\n      \"created_at\": \"2000-01-01\"\n    }\n  {% endcapture %}\n\n  {% assign order = order_json | parse_json %}\n{% endif %}\n\n{% capture email_sent_tag %}{{ options.tag_to_watch_for__required | slice: 0, 29 }}-email-sent{% endcapture %}\n{% assign order_tags = order.tags | split: \", \" %}\n\n{% assign order_qualifies = true %}\n\n{% unless order_tags contains options.tag_to_watch_for__required %}\n  {% assign order_qualifies = false %}\n  {% log message: \"The order does not have the required tag\", order_tags: order_tags, required_tag: options.tag_to_watch_for__required %}\n{% else %}\n  {% if order_tags contains email_sent_tag %}\n    {% assign order_qualifies = false %}\n    {% log message: \"Judging by the order's tags, this order appears to have already had its email sent\", order_tags: order_tags, required_tag: options.tag_to_watch_for__required, email_sent_tag: email_sent_tag %}\n  {% elsif options.ignore_orders_having_this_tag != blank and order_tags contains options.ignore_orders_having_this_tag %}\n    {% assign order_qualifies = false %}\n    {% log message: \"This order has the required tag, but it *also* has the tag we're meant to ignore\", order_tags: order_tags, required_tag: options.tag_to_watch_for__required, ignore_tag: options.ignore_orders_having_this_tag %}\n  {% endif %}\n{% endunless %}\n\n{% if order_qualifies and options.ignore_orders_older_than_this_task__boolean %}\n  {% assign order_created_at = order.created_at | date: \"%s\" %}\n  {% assign task_created_at = task.created_at | date: \"%s\" %}\n  {% if order_created_at < task_created_at %}\n    {% assign order_qualifies = false %}\n    {% log message: \"'Ignore orders older than this task' is enabled, and this order is indeed older than the task\", order_created_at: order_created_at, task_created_at: task_created_at %}\n  {% endif %}\n{% endif %}\n\n{% if order_qualifies %}\n  {% action \"email\" %}\n    {\n      \"to\": {{ order.email | json }},\n      \"subject\": {{ options.email_subject__required | json }},\n      \"body\": {{ options.email_body__required_multiline | strip | newline_to_br | json }},\n      \"reply_to\": {{ shop.customer_email | json }},\n      \"from_display_name\": {{ shop.name | json }}\n    }\n  {% endaction %}\n\n  {% action \"shopify\" %}\n    mutation {\n      tagsAdd(\n        id: {{ order.admin_graphql_api_id | json }}\n        tags: {{ email_sent_tag | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endif %}",
  "docs": "Improve your customer relationships without complicated your workflow - use this task to send automatic emails whenever your staff adds a certain tag to an order. (Mechanic will add another tag to your order when the email is sent, for visibility.)\n\nThis task monitors incoming orders, and updates to existing orders, looking for the tag of your choice. When the tag is detected, this task will send an email to the address on file for that order.\n\n**Important notes**\n\n* This task also adds a _second_ tag to the order when the email is sent, as a flag to mark the order as having had that email sent. This helps Mechanic remember what orders should _not_ have an email sent.\n* This second tag defaults to a concatenation of the tag to watch for and \"-email-sent\"; however, because Shopify has a 40 character limit on order tags, the tag to watch for will be truncated to the first 29 characters if needed to form the concatenated tag. This truncation will only affect the email sent tag, not the original tag being watched for.\n* Use the \"Ignore orders older than this task\" option to avoid a flood of unexpected email, instructing Mechanic to ignore any existing or new tags on older orders.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Customers",
    "Email",
    "Orders",
    "Tag",
    "Watch"
  ]
}
