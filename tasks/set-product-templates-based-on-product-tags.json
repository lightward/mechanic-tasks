{
  "docs": "Use this task to automatically select a specific product template for each of your products, based on how each product is tagged. Useful for a set-it-and-forget-it setup. :)\n\nTo use this task, fill in \"Product tags and template suffixes\" with a single product tag on the left, per line, and a product template suffix on the right. For example, if you'd like products tagged \"sale\" to be shown with the ```products.sale-hero.liquid``` template, add an item that has \"sale\" on the left and \"sale-hero\" on the right.\n\nIf a product qualifies for several template suffixes based on its tags and on the task configuration, then this task will go with whichever template suffix match is found first.\n\nTo apply this task to your entire catalog, use the \"Run task\" button. Otherwise, this task will run automatically whenever a product is created or updated.\n\n**Note:** If you want to reset a product to the default product template, then leave the template suffix empty for the associated tag.",
  "halt_action_run_sequence_on_error": false,
  "name": "Set product templates based on product tags",
  "online_store_javascript": null,
  "options": {
    "product_tags_and_template_suffixes__keyval_required": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign product_tags_and_template_suffixes = options.product_tags_and_template_suffixes__keyval_required %}\n\n{% assign products = array %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            templateSuffix\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic contains \"shopify/products/\" or event.preview %}\n  {% capture query %}\n    query {\n      product(id: {{ product.admin_graphql_api_id | json }} ) {\n        id\n        tags\n        templateSuffix\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign products[0] = result.data.product %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign products = bulkOperation.objects %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture products_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Product/4354268561469\",\n        \"tags\": [\"123\", {{ product_tags_and_template_suffixes.first.first | json }}],\n        \"templateSuffix\": \"preview-1234567890\"\n      }\n    ]\n  {% endcapture %}\n\n  {% assign products = products_json | parse_json %}\n{% endif %}\n\n{% for product in products %}\n  {% assign product_template_suffix_to_apply = nil %}\n\n  {% for keyval in product_tags_and_template_suffixes %}\n    {% assign product_tag_to_check = keyval[0] %}\n    {% assign product_template_to_apply = keyval[1] %}\n\n    {% if product.tags contains product_tag_to_check %}\n      {% assign product_template_suffix_to_apply = product_template_to_apply %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if product_template_suffix_to_apply != product.templateSuffix %}\n    {% action \"shopify\" %}\n      mutation {\n        productUpdate(\n          product: {\n            id: {{ product.id | json }}\n            templateSuffix: {{ product_template_suffix_to_apply | json }}\n          }\n        ) {\n          product {\n            id\n            templateSuffix\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/products/create",
    "shopify/products/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation\nshopify/products/create\nshopify/products/update\n",
  "tags": [
    "Products",
    "Tag",
    "Template"
  ]
}
