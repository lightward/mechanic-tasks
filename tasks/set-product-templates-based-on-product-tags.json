{
  "name": "Set product templates based on product tags",
  "options": {
    "product_tags_and_template_suffixes__keyval_required": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "shopify/products/create",
    "shopify/products/update"
  ],
  "subscriptions_template": "mechanic/user/trigger\r\nshopify/products/create\r\nshopify/products/update",
  "script": "{% if event.preview %}\n  {\n    \"action\": {\n      \"type\": \"shopify\",\n      \"options\": [\n        \"update\",\n        [\n          \"product\",\n          1234567890\n        ],\n        {\n          \"template_suffix\": \"special\"\n        }\n      ]\n    }\n  }\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% for product in shop.products %}\n    {% assign product_tags = product.tags | split: \", \" %}\n    {% assign product_qualifies_for_update = false %}\n    {% assign product_template_suffix_to_apply = nil %}\n\n    {% for keyval in options.product_tags_and_template_suffixes__keyval_required %}\n      {% assign product_tag_to_check = keyval[0] %}\n      {% assign product_template_to_apply = keyval[1] %}\n\n      {% if product_tags contains product_tag_to_check %}\n        {% assign product_template_suffix_to_apply = product_template_to_apply %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if product_template_suffix_to_apply == blank and product.template_suffix != blank %}\n      {% assign product_qualifies_for_update = true %}\n    {% elsif product_template_suffix_to_apply != product.template_suffix %}\n      {% assign product_qualifies_for_update = true %}\n    {% endif %}\n\n    {% if product_qualifies_for_update %}\n      {\n        \"action\": {\n          \"type\": \"shopify\",\n          \"options\": [\n            \"update\",\n            [\n              \"product\",\n              {{ product.id | json }}\n            ],\n            {\n              \"template_suffix\": {{ product_template_suffix_to_apply | json }}\n            }\n          ]\n        }\n      }\n    {% endif %}\n  {% endfor %}\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% assign product_tags = product.tags | split: \", \" %}\n  {% assign product_qualifies_for_update = false %}\n  {% assign product_template_suffix_to_apply = nil %}\n\n  {% for keyval in options.product_tags_and_template_suffixes__keyval_required %}\n    {% assign product_tag_to_check = keyval[0] %}\n    {% assign product_template_to_apply = keyval[1] %}\n\n    {% if product_tags contains product_tag_to_check %}\n      {% assign product_template_suffix_to_apply = product_template_to_apply %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if product_template_suffix_to_apply == blank and product.template_suffix != blank %}\n    {% assign product_qualifies_for_update = true %}\n  {% elsif product_template_suffix_to_apply != product.template_suffix %}\n    {% assign product_qualifies_for_update = true %}\n  {% endif %}\n\n  {% if product_qualifies_for_update %}\n    {\n      \"action\": {\n        \"type\": \"shopify\",\n        \"options\": [\n          \"update\",\n          [\n            \"product\",\n            {{ product.id | json }}\n          ],\n          {\n            \"template_suffix\": {{ product_template_suffix_to_apply | json }}\n          }\n        ]\n      }\n    }\n  {% endif %}\n{% endif %}",
  "docs": "Use this task to automatically select a specific product template for each of your products, based on how each product is tagged. Useful for a set-it-and-forget-it setup. :)\n\nTo use this task, fill in \"Product tags and template suffixes\" with a single product tag on the left, per line, and a product template suffix on the right. For example, if you'd like products tagged \"sale\" to be shown with the products.sale-hero.liquid template, add an item that has \"sale\" on the left and \"sale-hero\" on the right.\r\n\r\nIf a product qualifies for several template suffixes, based on its tags and on the task configuration, this task will go with whichever tmeplate suffix match is found first.\r\n\r\nTo apply this task to your entire catalog, use the \"Run task\" button. Otherwise, this task will run automatically, whenever a product is created or updated.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Products",
    "Tag"
  ]
}
