{
  "docs": "Use this task to schedule adding and/or removing tags for specific products, with support for scheduling by date, or by date and hour.\n\nEither use the \"Product IDs\" option to choose which products this task will tag, or enter a \"Product tag to monitor\". If you need to monitor more than 250 products, then you must use the \"Product tag to monitor\" option. [Learn how to find product IDs here.](https://learn.mechanic.dev/techniques/finding-a-resource-id)\n\nFill in the \"Dates and tags to add\" and/or \"Dates and tags to remove\" options with dates (including year, month, and day) on the left, and product tags on the right.\n\nEnable \"Use hour specificity\" to have Mechanic schedule tags by date _and_ hour, instead of only by date. When this option is enabled, fill in tag dates using an hour at the end, e.g. \"2019-01-01 2PM\". A date without an hour will be interpreted as midnight at the beginning of that date - for example, \"2019-01-01\" will be interpreted as \"2019-01-01 12AM\".\n\nWhen \"Test mode\" is enabled, use the \"Run task\" button to see a summary of Mechanic's understanding of your configuration. Mechanic will not perform any tagging or untagging when this mode is enabled.\n\nThis task will run nightly, at midnight in your store's local timezone. If \"Use hour specificity\" is enabled, the task will run hourly instead. You can also run this task manually, using the \"Run task\" button, and the task will perform the operations appropriate for the current day (or hour, if \"Use hour specificity\" is enabled).",
  "halt_action_run_sequence_on_error": false,
  "name": "Schedule product tags by date",
  "online_store_javascript": null,
  "options": {
    "dates_and_tags_to_add__keyval": {
      "2019-08-24": "saturday",
      "2019-08-23": "friday"
    },
    "dates_and_tags_to_remove__keyval": {
      "2019-08-24": "friday",
      "2019-08-23": "thursday"
    },
    "product_ids__array_number": [
      "1234567890"
    ],
    "product_tag_to_monitor": null,
    "use_hour_specificity__boolean": false,
    "test_mode__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign dates_and_tags_to_add = options.dates_and_tags_to_add__keyval %}\n{% assign dates_and_tags_to_remove = options.dates_and_tags_to_remove__keyval %}\n{% assign product_ids = options.product_ids__array_number %}\n{% assign product_tag_to_monitor = options.product_tag_to_monitor %}\n{% assign use_hour_specificity = options.use_hour_specificity__boolean %}\n{% assign test_mode = options.test_mode__boolean %}\n\n{% if dates_and_tags_to_add == blank and dates_and_tags_to_remove == blank %}\n  {% error \"Fill in at least one of 'Dates and tags to add' and 'Dates and tags to remove'. :)\" %}\n{% endif %}\n\n{% if product_ids == blank and product_tag_to_monitor == blank %}\n  {% error \"Fill in either 'Product IDs' or 'Product tag to monitor'.\" %}\n\n{% elsif product_ids != blank and product_tag_to_monitor != blank %}\n  {% error \"Fill in either 'Product IDs' or 'Product tag to monitor', but not both.\" %}\n{% endif %}\n\n{% if product_ids.size > 250 %}\n  {% log product_ids_count: product_ids.size %}\n  {% error \"If you need to enter more than 250 product IDs, use the 'Product tag to monitor' option instead.\" %}\n{% endif %}\n\n{% comment %}\n  -- determine which tags should be added and/or removed on this task run\n{% endcomment %}\n\n{% assign configured_tags_to_add = array %}\n{% assign configured_tags_to_remove = array %}\n\n{% if use_hour_specificity %}\n  {% assign time_format = \"%Y-%m-%d %I%p\" %}\n{% else %}\n  {% assign time_format = \"%Y-%m-%d\" %}\n{% endif %}\n\n{% assign now_time = \"now\" | date: time_format %}\n{% assign full_schedule = hash %}\n\n{% for keyval in dates_and_tags_to_add %}\n  {% assign some_time = keyval[0] | date: time_format %}\n\n  {% if some_time == now_time %}\n    {% assign configured_tags_to_add = configured_tags_to_add | push: keyval[1] %}\n  {% endif %}\n\n  {% if full_schedule[some_time] == nil %}\n    {% assign full_schedule[some_time] = array %}\n  {% endif %}\n\n  {% assign n = full_schedule[some_time].size %}\n  {% assign full_schedule[some_time][n] = \"add: \" | append: keyval[1] %}\n{% endfor %}\n\n{% for keyval in dates_and_tags_to_remove %}\n  {% assign some_time = keyval[0] | date: time_format %}\n\n  {% if some_time == now_time %}\n    {% assign configured_tags_to_remove = configured_tags_to_remove | push: keyval[1] %}\n  {% endif %}\n\n  {% if full_schedule[some_time] == nil %}\n    {% assign full_schedule[some_time] = array %}\n  {% endif %}\n\n  {% assign n = full_schedule[some_time].size %}\n  {% assign full_schedule[some_time][n] = \"remove: \" | append: keyval[1] %}\n{% endfor %}\n\n{% if event.preview %}\n  {% comment %}\n    -- add preview values for tags since configured dates are unlikely to align when task is previewed\n  {% endcomment %}\n\n  {% assign configured_tags_to_add[0] = \"preview-add\" %}\n  {% assign configured_tags_to_remove[0] = \"preview-remove\" %}\n{% endif %}\n\n{% if configured_tags_to_add == blank and configured_tags_to_remove == blank %}\n  {% log\n    message: \"No tags to add or remove on this task run based on configured schedule.\",\n    now: now_time,\n    schedule: full_schedule\n  %}\n  {% break %}\n{% endif %}\n\n{% if product_ids != blank %}\n  {% assign search_query_parts = array %}\n\n  {% for product_id in product_ids %}\n    {% assign search_query_parts[search_query_parts.size] = product_id | prepend: \"id:\" %}\n  {% endfor %}\n\n  {% assign search_query = search_query_parts | join: \" OR \" %}\n\n{% else %}\n  {% assign search_query = product_tag_to_monitor | json | prepend: \"tag:\" %}\n{% endif %}\n\n{% comment %}\n  -- get data for the products (up to 25K)\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign products = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      products(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ search_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          handle\n          tags\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"products\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Product/1234567890\",\n                \"handle\": \"preview-product\"\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign products = products | concat: result.data.products.nodes %}\n\n  {% if result.data.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.products.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% assign product_handles = products | map: \"handle\" | sort %}\n\n{% log\n  now: now_time,\n  schedule: full_schedule,\n  product_tag_to_monitor: product_tag_to_monitor,\n  configured_product_ids: product_ids,\n  matched_product_handles: product_handles\n%}\n\n{% if test_mode %}\n  {% break %}\n{% endif %}\n\n{% for product in products %}\n  {% assign tags_to_add = array %}\n  {% assign tags_to_remove = array %}\n\n  {% for tag in configured_tags_to_add %}\n    {% unless product.tags contains tag %}\n      {% assign tags_to_add = tags_to_add | push: tag %}\n    {% endunless %}\n  {% endfor %}\n\n  {% for tag in configured_tags_to_remove %}\n    {% if product.tags contains tag %}\n      {% assign tags_to_remove = tags_to_remove | push: tag %}\n    {% endif %}\n  {% endfor %}\n\n  {% if tags_to_add != blank or tags_to_remove != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tags_to_add != blank %}\n          tagsAdd(\n            id: {{ product.id | json }}\n            tags: {{ tags_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n        {% if tags_to_remove != blank %}\n          tagsRemove(\n            id: {{ product.id | json }}\n            tags: {{ tags_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "mechanic/scheduler/daily",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "{% unless options.test_mode__boolean %}\n  {% if options.use_hour_specificity__boolean %}\n    mechanic/scheduler/hourly\n  {% else %}\n    mechanic/scheduler/daily\n  {% endif %}\n{% endunless %}\nmechanic/user/trigger",
  "tags": [
    "Auto-Tag",
    "Products",
    "Schedule"
  ]
}
