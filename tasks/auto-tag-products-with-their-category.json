{
  "docs": "Use this task to tag products with their category from [Shopify's standard product taxonomy](https://shopify.github.io/product-taxonomy/releases/latest/). Run this task manually to scan every active product in your store. Optionally, set it to run daily to scan active products updated in the last day.\n\nNote: A tag prefix must be configured so the task will know which category tag(s) to remove from a product if applicable.",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag products with their category",
  "online_store_javascript": null,
  "options": {
    "apply_this_prefix_to_tags__required": "category: ",
    "run_task_daily__boolean": false
  },
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign tag_prefix = options.apply_this_prefix_to_tags__required %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic == \"mechanic/scheduler/daily\" %}\n  {% assign search_query = \"status:active\" %}\n\n  {% comment %}\n    -- if this is a daily scheduled run, then create a search query filter to only get active products updated since previous day\n  {% endcomment %}\n\n  {% if event.topic contains \"mechanic/scheduler/daily\" %}\n    {% assign search_query\n      = event.data\n      | date: \"%FT%TZ\", tz: \"UTC\", advance: \"-1 day\"\n      | json\n      | prepend: \"status:active updated_at:>=\"\n    %}\n  {% endif %}\n\n  {% unless event.preview %}\n    {% log search_query: search_query %}\n  {% endunless %}\n\n  {% comment %}\n    -- get all or recently updated active products in the shop, depending upon event topic\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign products = array %}\n\n  {% for n in (1..200) %}\n    {% capture query %}\n      query {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n          query: {{ search_query | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            title\n            category {\n              name\n              isArchived\n            }\n            tags\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"products\": {\n              \"nodes\": [\n                {\n                  \"id\": \"gid://shopify/Product/1234567890\",\n                  \"category\": {\n                    \"name\": \"Shoes\",\n                    \"isArchived\": false\n                  }\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign products = products | concat: result.data.products.nodes %}\n\n    {% if result.data.products.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.products.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% comment %}\n    -- process products to see which category tag to add, and which to remove\n  {% endcomment %}\n\n  {% for product in products %}\n    {% assign tag_should_have = nil %}\n    {% assign tag_to_add = nil %}\n    {% assign tags_to_remove = array %}\n\n    {% unless product.category == blank or product.category.isArchived %}\n      {% assign tag_should_have = product.category.name | prepend: tag_prefix %}\n    {% endunless %}\n\n    {% unless product.tags contains tag_should_have %}\n      {% assign tag_to_add = tag_should_have %}\n    {% endunless %}\n\n    {% for tag in product.tags %}\n      {% if tag == tag_should_have %}\n        {% continue %}\n      {% endif %}\n\n      {% if tag contains tag_prefix %}\n        {% assign tag_prefix_check = tag | slice: 0, tag_prefix.size %}\n\n        {% if tag_prefix_check == tag_prefix and tag.size > tag_prefix.size %}\n          {% assign tags_to_remove = tags_to_remove | push: tag %}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n\n    {% if tag_to_add != blank or tags_to_remove != blank %}\n      {% action \"shopify\" %}\n        mutation {\n          {% if tag_to_add != blank %}\n            tagsAdd(\n              id: {{ product.id | json }}\n              tags: {{ tag_to_add | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n          {% if tags_to_remove != blank %}\n            tagsRemove(\n              id: {{ product.id | json }}\n              tags: {{ tags_to_remove | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "{% if options.run_task_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}\nmechanic/user/trigger",
  "tags": [
    "Auto-Tag",
    "Category",
    "Products"
  ]
}
