{
  "docs": "With no configuration, this task will delete all customer metafields in bulk. Configure it with a metafield namespace to only delete metafields with that namespace, or add both a namespace and key to get even more specific. Run this task with the test mode option enabled, the first time, to make sure you're deleting the right material.",
  "halt_action_run_sequence_on_error": false,
  "name": "Delete customer metafields in bulk",
  "online_store_javascript": null,
  "options": {
    "metafield_namespace": "",
    "metafield_key": "",
    "test_mode__boolean": true
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% if options.metafield_namespace == blank and options.metafield_key != blank %}\n  {% error \"If you provide a metafield key, you must also provide a metafield namespace.\" %}\n{% endif %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n      query {\n        customers {\n          edges {\n            node {\n              __typename\n              id\n              {% if options.metafield_key != blank %}\n                metafield(\n                  namespace: {{ options.metafield_namespace | json }}\n                  key: {{ options.metafield_key | json }}\n                ) {\n                  __typename\n                  id\n                  description\n                  namespace\n                  key\n                  value\n                  type\n                }\n              {% else %}\n                metafields\n                  {% if options.metafield_namespace != blank %}\n                    (\n                    namespace: {{ options.metafield_namespace | json }}\n                    ) \n                  {% endif %}\n                  {\n                  edges {\n                    node {\n                      __typename\n                      id\n                      description\n                      namespace\n                      key\n                      value\n                      type\n                    }\n                  }\n                }\n              {% endif %}\n            }\n          }\n        }\n      }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture objects_jsonl %}\n      {% if options.metafield_key != blank %}\n        {\"__typename\":\"Customer\",\"id\":\"gid:\\/\\/shopify\\/Customer\\/1234567890\",\"metafield\":{\"__typename\":\"Metafield\",\"id\":\"gid:\\/\\/shopify\\/Metafield\\/1234567890\"}}\n      {% else %}\n        {\"__typename\":\"Metafield\",\"id\":\"gid:\\/\\/shopify\\/Metafield\\/0987654321\",\"__parentId\":\"gid:\\/\\/shopify\\/Customer\\/0987654321\"}\n      {% endif %}\n    {% endcapture %}        \n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = objects_jsonl | parse_jsonl %}\n\n  {% endif %}\n\n  \n  {% assign metafield_ids = bulkOperation.objects | where: \"__typename\", \"Metafield\" | map: \"id\" %}\n  \n  {% assign metafield_ids = bulkOperation.objects | where: \"__typename\", \"Customer\" | where: \"metafield\" | map: \"metafield\" | map: \"id\" | concat: metafield_ids %}\n  {% assign customer_ids = bulkOperation.objects | where: \"__typename\", \"Metafield\" | map: \"__parentId\" | uniq %}\n  {% assign customer_ids = bulkOperation.objects | where: \"__typename\", \"Customer\" | where: \"metafield\" | map: \"id\" | concat: customer_ids %}\n\n\n  {% if options.test_mode__boolean %}\n    {% action \"echo\" metafields_found: metafield_ids.size, customers_with_metafields_found: customer_ids.size, metafield_ids: metafield_ids, customer_with_metafields_ids: customer_ids %}\n  {% else %}\n    {% log metafields_found: metafield_ids.size, customers_with_metafields_found: customer_ids.size, metafield_ids: metafield_ids, customer_with_metafields_ids: customer_ids %}  \n\n    {% for metafield_id in metafield_ids %}\n      {% action \"shopify\" %}\n        mutation {\n          metafieldDelete(\n            input: {\n              id: {{ metafield_id | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n\n    {% if event.preview %}\n      {% comment %}\n        As a rule, preview events should render realistic\n        action definitions. However, because Mechanic derives\n        a task's required permissions from these definitions,\n        and because a metafieldDelete mutation doesn't include\n        anything indicating what kind of resource the\n        metafield belongs to, we have to render an additional\n        spurious preview-only mutation to nudge Mechanic into\n        giving us write access to customers.\n      {% endcomment %}\n\n      {% action \"shopify\" %}\n        mutation {\n          customerUpdate(\n            id: \"gid://requesting/write_customers\"\n          ) {\n            thisMutationWillNotRunForLiveEvents\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endif %}\n{% endif %}",
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Bulk",
    "Customers",
    "Metafields"
  ]
}
