{
  "docs": "Use this task to send yourself a quick tally of everything currently waiting in your order list. Super simple: just a list of products, and how many of each were ordered.\n\nConfigure the task to only look at open, and/or fully paid, and/or fully unshipped orders. This task does not filter orders by when they were placed - only by their status.",
  "halt_action_run_sequence_on_error": false,
  "name": "Email a summary of all products and quantities ordered",
  "online_store_javascript": null,
  "options": {
    "only_include_open_orders__boolean": true,
    "only_include_fully_paid_orders__boolean": false,
    "only_include_fully_unfulfilled_orders__boolean": false,
    "count_quantities_by_variant_instead_of_by_product__boolean": false,
    "email_recipient__email_required": "",
    "email_subject__required": "Orders as of {{ \"now\" | date: \"%Y-%m-%d\" }}",
    "day_of_week_to_send_email__required": "Monday",
    "allow_sending_manually__boolean": true
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign only_include_open_orders = options.only_include_open_orders__boolean %}\n{% assign only_include_fully_paid_orders = options.only_include_fully_paid_orders__boolean %}\n{% assign only_include_fully_unfulfilled_orders = options.only_include_fully_unfulfilled_orders__boolean %}\n{% assign count_quantities_by_variant = options.count_quantities_by_variant_instead_of_by_product__boolean %}\n{% assign email_recipient = options.email_recipient__email_required %}\n{% assign email_subject = options.email_subject__required %}\n\n{% assign order_constraint_texts = array %}\n{% assign search_query_parts = array %}\n\n{% if only_include_open_orders %}\n  {% assign search_query_parts = search_query_parts | push: \"status:open\" %}\n\n  {% assign order_constraint_texts[order_constraint_texts.size] = \"open\" %}\n{% endif %}\n\n{% if only_include_fully_paid_orders %}\n  {% assign search_query_parts = search_query_parts | push: \"financial_status:paid\" %}\n  {% assign order_constraint_texts[order_constraint_texts.size] = \"fully paid\" %}\n{% endif %}\n\n{% if only_include_fully_unfulfilled_orders %}\n  {% assign search_query_parts = search_query_parts | push: \"fulfillment_status:unshipped\" %}\n  {% assign order_constraint_texts[order_constraint_texts.size] = \"fully unshipped\" %}\n{% endif %}\n\n{% assign search_query = search_query_parts | join: \" \" %}\n\n{% log search_query: search_query %}\n\n{% comment %}\n  -- get up to 25K orders filtered by task options (and potentially limited to last 60 days if read_all_orders scope not requested)\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign orders = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      orders(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ search_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        nodes {\n          id\n          lineItems(first: 100) {\n            nodes {\n              name\n              title\n              currentQuantity\n              product {\n                legacyResourceId\n              }\n              variant {\n                legacyResourceId\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"orders\": {\n            \"nodes\": [\n              {\n                \"id\": \"gid://shopify/Order/1234567890\",\n                \"lineItems\": {\n                  \"nodes\": [\n                    {\n                      \"name\": \"Widget - Red\",\n                      \"title\": \"Widget\",\n                      \"currentQuantity\": 2,\n                      \"product\": {\n                        \"legacyResourceId\": \"1234567890\"\n                      },\n                      \"variant\": {\n                        \"legacyResourceId\": \"9876543210\"\n                      }\n                    },\n                    {\n                      \"name\": \"Sprocket - Large\",\n                      \"title\": \"Sprocket\",\n                      \"currentQuantity\": 3,\n                      \"product\": {\n                        \"legacyResourceId\": \"2345678901\"\n                      },\n                      \"variant\": {\n                        \"legacyResourceId\": \"8765432109\"\n                      }\n                    },\n                    {\n                      \"title\": \"Test Product\",\n                      \"currentQuantity\": 4\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign orders = orders | concat: result.data.orders.nodes %}\n\n  {% if result.data.orders.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.orders.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- group and tally line items by ID or title (in cases where product does not exist)\n{% endcomment %}\n\n{% assign grouped_line_items = hash %}\n\n{% for order in orders %}\n  {% for line_item in order.lineItems.nodes %}\n    {% if line_item.product != blank %}\n      {% if count_quantities_by_variant %}\n        {% assign line_item_key = line_item.variant.legacyResourceId %}\n        {% assign line_item_title = line_item.name %}\n\n        {%- capture line_item_link_or_text -%}\n          <a href=\"https://{{ shop.domain }}/admin/products/{{ line_item.product.legacyResourceId }}/variants/{{ line_item.variant.legacyResourceId }}\">{{ line_item_title }}</a>\n        {%- endcapture -%}\n\n      {% else %}\n        {% assign line_item_key = line_item.product.legacyResourceId %}\n        {% assign line_item_title = line_item.title %}\n\n        {%- capture line_item_link_or_text -%}\n          <a href=\"https://{{ shop.domain }}/admin/products/{{ line_item.product.legacyResourceId }}\">{{ line_item_title }}</a>\n        {%- endcapture -%}\n      {% endif %}\n\n    {% else %}\n      {% assign line_item_key = line_item.title %}\n      {% assign line_item_title = line_item.title %}\n\n      {%- capture line_item_link_or_text -%}\n        {{ line_item_title }}\n      {%- endcapture -%}\n    {% endif %}\n\n    {% if grouped_line_items[line_item_key] == blank %}\n      {% assign grouped_line_items[line_item_key] = hash %}\n      {% assign grouped_line_items[line_item_key][\"line_item_link_or_text\"] = line_item_link_or_text %}\n      {% assign grouped_line_items[line_item_key][\"title\"] = line_item_title %}\n      {% assign grouped_line_items[line_item_key][\"quantity\"] = 0 %}\n    {% endif %}\n\n    {% assign grouped_line_items[line_item_key][\"quantity\"] = grouped_line_items[line_item_key][\"quantity\"] | plus: line_item.currentQuantity %}\n  {% endfor %}\n{% endfor %}\n\n{% comment %}\n  -- convert the grouped hash into an array so the list output may be sorted by title\n{% endcomment %}\n\n{% assign list_items = array %}\n\n{% for keyval in grouped_line_items %}\n  {% assign line_item_data = keyval[1] %}\n\n  {% unless line_item_data[\"quantity\"] > 0 %}\n    {% continue %}\n  {% endunless %}\n\n  {% assign list_item = hash %}\n\n  {%- capture list_item_content -%}\n    <li>{{ line_item_data[\"line_item_link_or_text\"] }}: {{ line_item_data[\"quantity\"] }}</li>\n  {%- endcapture -%}\n  \n  {% assign list_item[\"content\"] = list_item_content %}\n  {% assign list_item[\"title\"] = line_item_data[\"title\"] %}\n  {% assign list_items = list_items | push: list_item %}\n{% endfor %}\n\n{% assign sorted_list_items = list_items | sort_naturally: \"title\" %}\n\n{% capture email_body %}\n  Hi there,\n\n  These are the products and ordered quantities, for all {{ order_constraint_texts | join: \", \" }} orders:\n\n  {% for list_item in sorted_list_items -%}\n    {{ list_item.content }}\n  {%- endfor %}\n\n  Thanks,\n  Mechanic (for {{ shop.name }})\n{% endcapture %}\n\n{% action \"email\" %}\n  {\n    \"to\": {{ email_recipient | json }},\n    \"subject\": {{ email_subject | json }},\n    \"body\": {{ email_body | unindent | newline_to_br | json }},\n    \"reply_to\": {{ shop.customer_email | json }},\n    \"from_display_name\": {{ shop.name | json }}\n  }\n{% endaction %}\n",
  "subscriptions": [
    "mechanic/scheduler/monday",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/scheduler/{{ options.day_of_week_to_send_email__required | default: \"monday\" | downcase }}\n{% if options.allow_sending_manually__boolean %}mechanic/user/trigger{% endif %}",
  "tags": [
    "Email",
    "Inventory",
    "Products"
  ]
}
