{
  "name": "Auto-tag products by largest available size",
  "options": {
    "largest_size_tag_prefix__required": "largest_",
    "size_option_name__required": "Size",
    "minimum_number_of_variants_in_stock_before_tagging__number_required": 2,
    "run_daily__boolean": null
  },
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation\n\n{% if options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}",
  "script": "{% if event.topic == \"mechanic/user/trigger\" or event.topic == \"mechanic/scheduler/daily\" %}\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            variants {\n              edges {\n                node {\n                  __typename\n                  id\n                  inventoryQuantity\n                  selectedOptions {\n                    name\n                    value\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = array %}\n\n    {% assign product = hash %}\n    {% assign product[\"id\"] = \"gid://shopify/Product/1234567890\" %}\n    {% assign product[\"__typename\"] = \"Product\" %}\n    {% assign product[\"tags\"] = array %}\n    {% assign product[\"tags\"][0] = options.largest_size_tag_prefix__required | append: 99 %}\n\n    {% assign bulkOperation[\"objects\"][0] = product %}\n\n    {% assign bulkOperation[\"objects\"][1] = hash %}\n    {% assign bulkOperation[\"objects\"][1][\"id\"] = \"gid://shopify/ProductVariant/1234567890\" %}\n    {% assign bulkOperation[\"objects\"][1][\"__typename\"] = \"ProductVariant\" %}\n    {% assign bulkOperation[\"objects\"][1][\"inventoryQuantity\"] = 1 %}\n    {% assign bulkOperation[\"objects\"][1][\"selectedOptions\"] = array %}\n    {% assign bulkOperation[\"objects\"][1][\"selectedOptions\"][0] = hash %}\n    {% assign bulkOperation[\"objects\"][1][\"selectedOptions\"][0][\"name\"] = options.size_option_name__required %}\n    {% assign bulkOperation[\"objects\"][1][\"selectedOptions\"][0][\"value\"] = \"10\" %}\n    {% assign bulkOperation[\"objects\"][1][\"__parentId\"] = \"gid://shopify/Product/1234567890\" %}\n    {% assign bulkOperation[\"objects\"][1][\"__parent\"] = product %}\n\n    {% assign bulkOperation[\"objects\"][2] = hash %}\n    {% assign bulkOperation[\"objects\"][2][\"id\"] = \"gid://shopify/ProductVariant/2345678901\" %}\n    {% assign bulkOperation[\"objects\"][2][\"__typename\"] = \"ProductVariant\" %}\n    {% assign bulkOperation[\"objects\"][2][\"inventoryQuantity\"] = 2 %}\n    {% assign bulkOperation[\"objects\"][2][\"selectedOptions\"] = array %}\n    {% assign bulkOperation[\"objects\"][2][\"selectedOptions\"][0] = hash %}\n    {% assign bulkOperation[\"objects\"][2][\"selectedOptions\"][0][\"name\"] = options.size_option_name__required %}\n    {% assign bulkOperation[\"objects\"][2][\"selectedOptions\"][0][\"value\"] = \"11\" %}\n    {% assign bulkOperation[\"objects\"][2][\"__parentId\"] = \"gid://shopify/Product/1234567890\" %}\n    {% assign bulkOperation[\"objects\"][2][\"__parent\"] = product %}\n\n    {% assign bulkOperation[\"objects\"][3] = hash %}\n    {% assign bulkOperation[\"objects\"][3][\"id\"] = \"gid://shopify/ProductVariant/3456789012\" %}\n    {% assign bulkOperation[\"objects\"][3][\"__typename\"] = \"ProductVariant\" %}\n    {% assign bulkOperation[\"objects\"][3][\"inventoryQuantity\"] = -3 %}\n    {% assign bulkOperation[\"objects\"][3][\"selectedOptions\"] = array %}\n    {% assign bulkOperation[\"objects\"][3][\"selectedOptions\"][0] = hash %}\n    {% assign bulkOperation[\"objects\"][3][\"selectedOptions\"][0][\"name\"] = options.size_option_name__required %}\n    {% assign bulkOperation[\"objects\"][3][\"selectedOptions\"][0][\"value\"] = \"12\" %}\n    {% assign bulkOperation[\"objects\"][3][\"__parentId\"] = \"gid://shopify/Product/1234567890\" %}\n    {% assign bulkOperation[\"objects\"][3][\"__parent\"] = product %}\n\n    {% assign bulkOperation[\"objects\"][4] = hash %}\n    {% assign bulkOperation[\"objects\"][4][\"id\"] = \"gid://shopify/ProductVariant/4567890123\" %}\n    {% assign bulkOperation[\"objects\"][4][\"__typename\"] = \"ProductVariant\" %}\n    {% assign bulkOperation[\"objects\"][4][\"inventoryQuantity\"] = 0 %}\n    {% assign bulkOperation[\"objects\"][4][\"selectedOptions\"] = array %}\n    {% assign bulkOperation[\"objects\"][4][\"selectedOptions\"][0] = hash %}\n    {% assign bulkOperation[\"objects\"][4][\"selectedOptions\"][0][\"name\"] = options.size_option_name__required %}\n    {% assign bulkOperation[\"objects\"][4][\"selectedOptions\"][0][\"value\"] = \"15\" %}\n    {% assign bulkOperation[\"objects\"][4][\"__parentId\"] = \"gid://shopify/Product/1234567890\" %}\n    {% assign bulkOperation[\"objects\"][4][\"__parent\"] = product %}\n  {% endif %}\n\n  {% assign largest_sizes_by_product_id = hash %}\n  {% assign variants_in_stock_counts_by_product_id = hash %}\n\n  {% for object in bulkOperation.objects %}\n    {% if object.__typename != \"ProductVariant\" %}\n      {% continue %}\n    {% endif %}\n\n    {% if object.inventoryQuantity <= 0 %}\n      {% continue %}\n    {% endif %}\n\n    {% assign variants_in_stock_counts_by_product_id[object.__parentId] = variants_in_stock_counts_by_product_id[object.__parentId] | plus: 1 %}\n    {% assign size_option = object.selectedOptions | where: \"name\", options.size_option_name__required | first %}\n\n    {% if size_option == nil %}\n      {% continue %}\n    {% endif %}\n\n    {% assign size = size_option.value | times: 1 %}\n\n    {% if largest_sizes_by_product_id[object.__parentId] == nil or size > largest_sizes_by_product_id[object.__parentId] %}\n      {% assign largest_sizes_by_product_id[object.__parentId] = size %}\n    {% endif %}\n  {% endfor %}\n\n  {% for object in bulkOperation.objects %}\n    {% if object.__typename != \"Product\" %}\n      {% continue %}\n    {% endif %}\n\n    {% assign variants_in_stock_count = variants_in_stock_counts_by_product_id[object.id] %}\n    {% assign largest_size = largest_sizes_by_product_id[object.id] %}\n\n    {% assign appropriate_largest_size_tag = nil %}\n    {% if variants_in_stock_count >= options.minimum_number_of_variants_in_stock_before_tagging__number_required %}\n      {% if largest_size %}\n        {% assign appropriate_largest_size_tag = options.largest_size_tag_prefix__required | append: largest_size %}\n      {% endif %}\n    {% endif %}\n\n    {% assign current_largest_size_tag = nil %}\n    {% assign prefix_length = options.largest_size_tag_prefix__required.size %}\n    {% for tag in object.tags %}\n      {% assign prefix = tag | slice: 0, prefix_length %}\n      {% if prefix == options.largest_size_tag_prefix__required %}\n        {% assign current_largest_size_tag = tag %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if appropriate_largest_size_tag != current_largest_size_tag %}\n      {% action \"shopify\" %}\n        mutation {\n          {% if appropriate_largest_size_tag %}\n            tagsAdd(\n              id: {{ object.id | json }}\n              tags: {{ appropriate_largest_size_tag | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n\n          {% if current_largest_size_tag %}\n            tagsRemove(\n              id: {{ object.id | json }}\n              tags: {{ current_largest_size_tag | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% elsif event.topic contains \"shopify/inventory_levels/\" %}\n  {% assign product = inventory_level.variant.product %}\n\n  {% capture query %}\n    query {\n      product(\n        id: {{ product.admin_graphql_api_id | json }}\n      ) {\n        id\n        tags\n        variants(first: 250) {\n          edges {\n            node {\n              inventoryQuantity\n              selectedOptions {\n                name\n                value\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"product\": {\n            \"id\": \"gid://shopify/Product/1234567890\",\n            \"tags\": [{{ options.largest_size_tag_prefix__required | append: 99 | json }}],\n            \"variants\": {\n              \"edges\": [\n                {\n                  \"node\": {\n                    \"inventoryQuantity\": 1,\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ options.size_option_name__required | json }},\n                        \"value\": \"10\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"node\": {\n                    \"inventoryQuantity\": 2,\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ options.size_option_name__required | json }},\n                        \"value\": \"11\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"node\": {\n                    \"inventoryQuantity\": -3,\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ options.size_option_name__required | json }},\n                        \"value\": \"12\"\n                      }\n                    ]\n                  }\n                },\n                {\n                  \"node\": {\n                    \"inventoryQuantity\": 0,\n                    \"selectedOptions\": [\n                      {\n                        \"name\": {{ options.size_option_name__required | json }},\n                        \"value\": \"15\"\n                      }\n                    ]\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign product_node = result.data.product %}\n  {% assign variant_nodes = product_node.variants.edges | map: \"node\" %}\n  {% assign variants_in_stock_count = 0 %}\n  {% assign largest_size = nil %}\n\n  {% for variant_node in variant_nodes %}\n    {% if variant_node.inventoryQuantity <= 0 %}\n      {% continue %}\n    {% endif %}\n\n    {% assign variants_in_stock_count = variants_in_stock_count | plus: 1 %}\n    {% assign size_option = variant_node.selectedOptions | where: \"name\", options.size_option_name__required | first %}\n\n    {% if size_option == nil %}\n      {% continue %}\n    {% endif %}\n\n    {% assign size = size_option.value | times: 1 %}\n\n    {% if largest_size == nil or size > largest_size %}\n      {% assign largest_size = size %}\n    {% endif %}\n  {% endfor %}\n\n  {% assign appropriate_largest_size_tag = nil %}\n  {% if variants_in_stock_count >= options.minimum_number_of_variants_in_stock_before_tagging__number_required %}\n    {% if largest_size %}\n      {% assign appropriate_largest_size_tag = options.largest_size_tag_prefix__required | append: largest_size %}\n    {% endif %}\n  {% endif %}\n\n  {% assign current_largest_size_tag = nil %}\n  {% assign prefix_length = options.largest_size_tag_prefix__required.size %}\n  {% for tag in product_node.tags %}\n    {% assign prefix = tag | slice: 0, prefix_length %}\n    {% if prefix == options.largest_size_tag_prefix__required %}\n      {% assign current_largest_size_tag = tag %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if appropriate_largest_size_tag != current_largest_size_tag %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if appropriate_largest_size_tag %}\n          tagsAdd(\n            id: {{ product_node.id | json }}\n            tags: {{ appropriate_largest_size_tag | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n\n        {% if current_largest_size_tag %}\n          tagsRemove(\n            id: {{ product_node.id | json }}\n            tags: {{ current_largest_size_tag | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "This task watches for incoming updates to inventory levels, and auto-tags the product according to the largest in-stock size. This task is specifically made to work with numeric variant options (e.g. \"10\", \"11\", \"12\", etc). This task can also be run manually, and can be configured to run daily.\r\n\r\nPlease note: when running in response to inventory updates, this task only works with up to 250 variants per product. This limit does not apply when running manually, or daily.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Products",
    "Variants"
  ]
}
