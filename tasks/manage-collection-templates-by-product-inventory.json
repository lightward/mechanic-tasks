{
  "name": "Manage collection templates by product inventory",
  "options": {
    "collection_template_suffix_when_all_products_are_out_of_stock__required": "out-of-stock",
    "default_collection_template_suffix": null,
    "run_every_time_an_inventory_level_is_updated__boolean": true,
    "run_daily__boolean": null,
    "run_hourly__boolean": null
  },
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "{% if options.run_every_time_an_inventory_level_is_updated__boolean %}shopify/inventory_levels/update{% endif %}\nmechanic/user/trigger\n{% if options.run_daily__boolean %}mechanic/scheduler/daily{% endif %}\n{% if options.run_hourly__boolean %}mechanic/scheduler/hourly{% endif %}\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic contains \"shopify/inventory_levels/\" %}\n  {% assign collections = inventory_level.variant.product.collections %}\n\n  {% if event.preview %}\n    {% capture collections_json %}\n      [\n        {\n          \"admin_graphql_api_id\": \"gid://shopify/Collection/1234567890\",\n          \"template_suffix\": null,\n          \"products\": [\n            {\n              \"variants\": [\n                {\n                  \"inventory_quantity\": 0\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    {% endcapture %}\n\n    {% assign collections = collections_json | parse_json %}\n  {% endif %}\n\n  {% for collection in collections %}\n    {% assign current_template_suffix = collection.template_suffix %}\n\n    {% comment %}\n      Shopify stores this as *either* an empty string or as nil. Mechanic auto-nils\n      empty strings for task options, so we coerce blanks to nils here.\n    {% endcomment %}\n    {% if current_template_suffix == blank %}\n      {% assign current_template_suffix = nil %}\n    {% endif %}\n\n    {% assign total_inventory = 0 %}\n\n    {% assign set_template_suffix = false %}\n    {% assign new_template_suffix = nil %}\n\n    {% for product in collection.products %}\n      {% assign product_total_inventory = product.variants | map: \"inventory_quantity\" | sum %}\n      {% assign total_inventory = total_inventory | plus: product_total_inventory %}\n    {% endfor %}\n\n    {% if total_inventory <= 0 %}\n      {% if current_template_suffix != options.collection_template_suffix_when_all_products_are_out_of_stock__required %}\n        {% assign set_template_suffix = true %}\n        {% assign new_template_suffix = options.collection_template_suffix_when_all_products_are_out_of_stock__required %}\n      {% endif %}\n    {% else %}\n      {% if current_template_suffix != options.default_collection_template_suffix %}\n        {% assign set_template_suffix = true %}\n        {% assign new_template_suffix = options.default_collection_template_suffix %}\n      {% endif %}\n    {% endif %}\n\n    {\n      \"log\": {\n        \"collection_id\": {{ collection.admin_graphql_api_id | json }},\n        \"total_inventory\": {{ total_inventory | json }},\n        \"current_template_suffix\": {{ current_template_suffix | json }},\n        \"set_template_suffix\": {{ set_template_suffix | json }},\n        \"new_template_suffix\": {{ new_template_suffix | json }}\n      }\n    }\n\n    {% if set_template_suffix %}\n      {% action \"shopify\" %}\n        mutation {\n          collectionUpdate(\n            input: {\n              id: {{ collection.admin_graphql_api_id | json }}\n              templateSuffix: {{ new_template_suffix | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% assign collection_object = '{\"__typename\":\"Collection\",\"id\":\"gid://shopify/Collection/1234567890\",\"templateSuffix\":null}' | parse_json %}\n    {% assign product_object = '{\"__typename\":\"Product\",\"id\":\"gid://shopify/Product/1234567890\",\"__parentId\":\"gid://shopify/Collection/1234567890\",\"totalInventory\":0}' | parse_json %}\n\n    {% assign objects = array %}\n    {% assign objects[0] = collection_object %}\n    {% assign objects[1] = product_object %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = objects %}\n  {% endif %}\n\n  {% assign collection_suffixes = hash %}\n  {% assign collection_total_inventory = hash %}\n\n  {% for object in bulkOperation.objects %}\n    {% case object.__typename %}\n    {% when \"Collection\" %}\n      {% assign collection_suffixes[object.id] = object.templateSuffix %}\n    {% when \"Product\" %}\n      {% assign collection_total_inventory[object.__parentId] = collection_total_inventory[object.__parentId] | default: 0 | plus: object.totalInventory %}\n    {% endcase %}\n  {% endfor %}\n\n  {% for keyval in collection_total_inventory %}\n    {% assign collection_id = keyval[0] %}\n    {% assign total_inventory = keyval[1] %}\n    {% assign current_template_suffix = collection_suffixes[collection_id] %}\n\n    {% comment %}\n      Shopify stores this as *either* an empty string or as nil. Mechanic auto-nils\n      empty strings for task options, so we coerce blanks to nils here.\n    {% endcomment %}\n    {% if current_template_suffix == blank %}\n      {% assign current_template_suffix = nil %}\n    {% endif %}\n\n    {% assign set_template_suffix = false %}\n    {% assign new_template_suffix = nil %}\n\n    {% if total_inventory <= 0 %}\n      {% if current_template_suffix != options.collection_template_suffix_when_all_products_are_out_of_stock__required %}\n        {% assign set_template_suffix = true %}\n        {% assign new_template_suffix = options.collection_template_suffix_when_all_products_are_out_of_stock__required %}\n      {% endif %}\n    {% else %}\n      {% if current_template_suffix != options.default_collection_template_suffix %}\n        {% assign set_template_suffix = true %}\n        {% assign new_template_suffix = options.default_collection_template_suffix %}\n      {% endif %}\n    {% endif %}\n\n    {\n      \"log\": {\n        \"collection_id\": {{ collection_id | json }},\n        \"total_inventory\": {{ total_inventory | json }},\n        \"current_template_suffix\": {{ current_template_suffix | json }},\n        \"set_template_suffix\": {{ set_template_suffix | json }},\n        \"new_template_suffix\": {{ new_template_suffix | json }}\n      }\n    }\n\n    {% if set_template_suffix %}\n      {% action \"shopify\" %}\n        mutation {\n          collectionUpdate(\n            input: {\n              id: {{ collection_id | json }}\n              templateSuffix: {{ new_template_suffix | json }}\n            }\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% else %}\n  {% capture bulk_operation_query %}\n    query {\n      collections {\n        edges {\n          node {\n            __typename\n            id\n            templateSuffix\n            products {\n              edges {\n                node {\n                  __typename\n                  id\n                  totalInventory\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endif %}",
  "docs": null,
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
