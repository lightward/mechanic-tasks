{
  "name": "Add Option Name as a Variant Metafield for In Stock Variants",
  "options": {
    "metafield_namespace__required": null,
    "option_names_and_metafield_keys__keyval_required": null
  },
  "subscriptions": [
    "shopify/inventory_levels/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/inventory_levels/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% assign metafield_namespace = options.metafield_namespace__required | strip %}\n{% assign option_names_and_metafield_keys = options.option_names_and_metafield_keys__keyval_required %}\n{% assign metafield_keys = option_names_and_metafield_keys | values %}\n\n{% capture metafields_query %}\n  {% for metafield_key in metafield_keys %}\n    metafield_{{ metafield_key | md5 }}: metafield(\n      namespace: {{ metafield_namespace | json }}\n      key: {{ metafield_key | json }}\n    ) {\n      id\n      value\n    }\n  {% endfor %}\n{% endcapture %}\n\n{% assign variants = array %}\n\n{% if event.topic == \"shopify/inventory_levels/update\" %}\n  {% capture query %}\n    query {\n      inventoryLevel(id: {{ inventory_level.admin_graphql_api_id | json }}) {\n        item {\n          variant {\n            id\n            displayName\n            inventoryPolicy\n            availableForSale\n            sellableOnlineQuantity\n            selectedOptions {\n              name\n              value\n            }\n            {{ metafields_query }}\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% assign variants[0] = result.data.inventoryLevel.item.variant %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      productVariants {\n        edges {\n          node {\n            id\n            displayName\n            inventoryPolicy\n            availableForSale\n            sellableOnlineQuantity\n            selectedOptions {\n              name\n              value\n            }\n            {{ metafields_query }}\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign variants = bulkOperation.objects %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture variants_json %}\n    [\n      {\n        \"id\": \"gid://shopify/ProductVariant/1234567890\",\n        \"displayName\": \"Duffel Bag - Pleather / Large\",\n        \"inventoryPolicy\": \"DENY\",\n        \"availableForSale\": true,\n        \"sellableOnlineQuantity\": 1,\n        \"selectedOptions\": [\n          {\n            \"name\": \"Material\",\n            \"value\": \"Pleather\"\n          },\n          {\n            \"name\": \"Size\",\n            \"value\": \"Large\"\n          }\n        ]\n      }\n    ]\n  {% endcapture %}\n\n  {% assign variants = variants_json | parse_json %}\n{% endif %}\n\n{% assign metafields_to_set = array %}\n{% assign metafields_to_delete = array %}\n\n{% for variant in variants %}\n  {% assign is_in_stock = nil %}\n\n  {% if variant.availableForSale %}\n    {% if variant.sellableOnlineQuantity > 0 or variant.inventoryPolicy == \"CONTINUE\" %}\n      {% assign is_in_stock = true %}\n    {% endif %}\n  {% endif %}\n\n  {% for selected_option in variant.selectedOptions %}\n    {% assign selected_option_name = selected_option.name | downcase %}\n\n    {% for keyval in option_names_and_metafield_keys %}\n      {% assign configured_option_name = keyval[0] | downcase %}\n\n      {% if configured_option_name == selected_option_name %}\n        {% assign set_metafield = nil %}\n        {% assign metafield_key = keyval[1] %}\n        {% assign metafield_alias = metafield_key | md5 | prepend: \"metafield_\" %}\n        {% assign metafield = variant[metafield_alias] %}\n\n        {% if metafield == blank %}\n          {% if is_in_stock %}\n            {% assign set_metafield = true %}\n          {% endif %}\n\n        {% elsif is_in_stock %}\n          {% if metafield.value != selected_option.value %}\n            {% assign set_metafield = true %}\n          {% endif %}\n\n        {% else %}\n          {% assign metafields_to_delete = metafields_to_delete | push: metafield.id %}\n        {% endif %}\n\n        {% if set_metafield %}\n          {% capture metafield_to_set %}\n            {\n              ownerId: {{ variant.id | json }}\n              namespace: {{ metafield_namespace | json }}\n              key: {{ metafield_key | json }}\n              type: \"single_line_text_field\"\n              value: {{ selected_option.value | append: \"\" | json }}\n            }\n          {% endcapture %}\n\n          {% assign metafields_to_set = metafields_to_set | push: metafield_to_set %}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n  {% endfor %}\n{% endfor %}\n\n{% log\n  total_metafields_being_set: metafields_to_set.size,\n  total_metafields_being_deleted: metafields_to_delete.size\n%}\n\n{% assign groups_of_metafields_to_set = metafields_to_set | in_groups_of: 25, fill_with: false %}\n\n{% for group_of_metafields_to_set in groups_of_metafields_to_set %}\n  {% action \"shopify\" %}\n    mutation {\n      metafieldsSet(\n        metafields: [\n          {{ group_of_metafields_to_set | join: newline }}\n        ]\n      ) {\n        metafields {\n          id\n          namespace\n          key\n          type\n          value\n          owner {\n            ... on ProductVariant {\n              id\n            }\n          }\n        }\n        userErrors {\n          code\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}\n\n{% for metafield_id in metafields_to_delete %}\n  {% action \"shopify\" %}\n    mutation {\n      metafieldDelete(\n        input: {\n          id: {{ metafield_id | json }}\n        }\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}",
  "docs": "This task populates variant metafields with your desired variant options for use by Online Store 2.0 filtering, taking into account whether or not a variant has inventory available for sale online. It runs when inventory levels are updated, and may also be run manually to scan all variants in your shop.\n\nConfigure it with a single metafield namespace (e.g. \"my_fields\") and one or more variant options (e.g. \"Size\") paired with their respective metafield key (e.g. \"size_in_stock\").\n\n__Important:__ To use OS 2.0 collection and search filtering, you must configure variant metafield definitions __prior__ to configuring and enabling this task. Read Shopify's documenation on how to [Add storefront filtering](https://help.shopify.com/en/manual/online-store/themes/customizing-themes/storefront-filters) for more info.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "In stock",
    "Metafields",
    "Online Store 2.0",
    "Variants"
  ]
}
