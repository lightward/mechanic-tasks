{
  "docs": "Use this task with the companion publishing task (see this task's documentation) to make a certain collection of products available on a schedule, and unavailable on another schedule.\n\nFor best results, pair this task with [Publish a certain collection, daily](https://tasks.mechanic.dev/publish-a-certain-collection-daily), from our task library.\n\nTo configure this task, enter the \"Collection ID\" for the collection you wish to unpublish. Refer to this [article](https://learn.mechanic.dev/techniques/finding-a-resource-id) for assistance on finding Shopify resource IDs.\n\nOut of the box, this task will unpublish everything in this collection at 6pm on weekdays, and 2pm on weekends. To adjust this, switch to \"Advanced mode\", and tweak the \"Subscriptions\" setting to taste. Each line represents midnight in your shop's local timezone, plus whatever number of offset hours you prefer. For example, `mechanic/scheduler/tuesday+13.hours` would mean Tuesday at 1pm.\n\n**Note:** This task only unpublishes products from the 'Online Store'.",
  "halt_action_run_sequence_on_error": false,
  "name": "Unpublish a certain collection, daily",
  "online_store_javascript": null,
  "options": {
    "collection_id__required": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign collection_id = options.collection_id__required %}\n\n{% comment %}\n  -- get online store publication ID\n  -- Note: title filter does work for app catalog titles, so have to get all publications\n{% endcomment %}\n\n{% capture query %}\n  query {\n    publications(\n      first: 250\n      catalogType:APP\n    ) {\n      nodes {\n        id\n        catalog {\n          ... on AppCatalog {\n            apps(first: 1) {\n              nodes {\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"publications\": {\n          \"nodes\": [\n            {\n              \"id\": \"gid://shopify/Publication/1234567890\",\n              \"catalog\": {\n                \"apps\": {\n                  \"nodes\": [\n                    {\n                      \"title\": \"Online Store\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign online_store_publication_id = nil %}\n\n{% for publication in result.data.publications.nodes %}\n  {% assign publication_name = publication.catalog.apps.nodes.first.title %}\n\n  {% if publication_name == \"Online Store\" %}\n    {% assign online_store_publication_id = publication.id %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- get IDs of published products in the collection\n{% endcomment %}\n\n{% assign cursor = nil %}\n{% assign product_ids = array %}\n\n{% for n in (1..100) %}\n  {% capture query %}\n    query {\n      collection(id: {{ collection_id | prepend: \"gid://shopify/Collection/\" | json }}) {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            publishedAt\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"collection\": {\n            \"products\": {\n              \"nodes\": [\n                {\n                  \"id\": \"gid://shopify/Product/1234567890\",\n                  \"publishedAt\": \"2020-12-12T12:00:00Z\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign product_ids\n    = result.data.collection.products.nodes\n    | where: \"publishedAt\"\n    | map: \"id\"\n    | concat: product_ids\n  %}\n\n  {% if result.data.collection.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.collection.products.pageInfo.endCursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% comment %}\n  -- unpublish qualifying products from online store\n{% endcomment %}\n\n{% for product_id in product_ids %}\n  {% action \"shopify\" %}\n    mutation {\n      publishableUnpublish(\n        id: {{ product_id | json }}\n        input: {\n          publicationId: {{ online_store_publication_id | json }}\n        }\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}\n",
  "subscriptions": [
    "mechanic/scheduler/monday+18.hours",
    "mechanic/scheduler/tuesday+18.hours",
    "mechanic/scheduler/wednesday+18.hours",
    "mechanic/scheduler/thursday+18.hours",
    "mechanic/scheduler/friday+18.hours",
    "mechanic/scheduler/saturday+14.hours",
    "mechanic/scheduler/sunday+14.hours"
  ],
  "subscriptions_template": "mechanic/scheduler/monday+18.hours\nmechanic/scheduler/tuesday+18.hours\nmechanic/scheduler/wednesday+18.hours\nmechanic/scheduler/thursday+18.hours\nmechanic/scheduler/friday+18.hours\nmechanic/scheduler/saturday+14.hours\nmechanic/scheduler/sunday+14.hours",
  "tags": [
    "Collections",
    "Schedule",
    "Unpublish"
  ]
}
