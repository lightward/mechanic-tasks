{
  "docs": "When orders come in, this task will copy tags from the order's products to the customer. Useful for automatically segmenting your customers based on attributes of their purchases. To keep things tidy, configure this task to only copy certain product tags.\n\nThis task may be run manually, to scan and tag customers based on the configured criteria. You may also configure a customer segment query, limiting the set of customers that are processed on manual runs. For example, to only include customers that have placed at least one order, use this query: `number_of_orders > 0`\n\n**Important:** The customer segment query must use the **exact** casing and syntax as a query that is run from the customer segments admin screen. More information on the the syntax for these can be found [here](https://shopify.dev/docs/api/shopifyql/segment-query-language-reference).",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag customers with product tags from their order",
  "online_store_javascript": null,
  "options": {
    "limit_to_customers_matching_this_query_for_manual_runs": "number_of_orders > 0",
    "only_copy_these_tags__array": null
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign customer_segment_query = options.limit_to_customers_matching_this_query_for_manual_runs %}\n{% assign only_copy_these_tags = options.only_copy_these_tags__array %}\n\n{% assign customer_ids = array %}\n\n{% if event.topic == \"shopify/orders/create\" %}\n  {% assign customer_ids[0] = order.customer.admin_graphql_api_id %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get IDs of all customers who match the segment query\n    -- Note: a segment query cannot be null, so if one has not been configured in the task then send an empty string\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign customer_segment_member_ids = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        customerSegmentMembers(\n          first: 1000\n          after: {{ cursor | json }}\n          query: {{ customer_segment_query | default: \"\" | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          edges {\n            node {\n              id\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign customer_segment_members = result.data.customerSegmentMembers.edges | map: \"node\" %}\n\n    {% comment %}\n      -- remove the \"SegmentMember\" portion from IDs so they can be processed with same code block for the orders/create event\n    {% endcomment %}\n\n    {% for customer_segment_member in customer_segment_members %}\n      {% assign customer_ids[customer_ids.size] = customer_segment_member.id | remove: \"SegmentMember\" %}\n    {% endfor %}\n\n    {% if result.data.customerSegmentMembers.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customerSegmentMembers.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% unless event.preview %}\n    {% log count_of_customers_matching_query: customer_ids.size %}\n  {% endunless %}\n{% endif %}\n\n{% if event.preview %}\n  {% assign customer_ids[0] = \"gid://shopify/Customer/1234567890\" %}\n{% endif %}\n\n{% for customer_id in customer_ids %}\n  {% comment %}\n    -- get all relevant order data for this customer\n  {% endcomment %}\n\n  {% assign cursor = nil %}\n  {% assign tags_to_copy = array %}\n\n  {% for n in (1..10) %}\n    {% capture query %}\n      query {\n        customer(id: {{ customer_id | json }}) {\n          id\n          tags\n          orders(\n            first: 250\n            after: {{ cursor | json }}\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              id\n              lineItems(first: 250) {\n                nodes {\n                  product {\n                    tags\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customer\": {\n              \"id\": \"gid://shopify/Customer/1234567890\",\n              \"orders\": {\n                \"nodes\": [\n                  {\n                    \"id\": \"gid://shopify/Order/1234567890\",\n                    \"lineItems\": {\n                      \"nodes\": [\n                        {\n                          \"product\": null\n                        },\n                        {\n                          \"product\": {\n                            \"tags\": [\n                              \"preview\",\n                              {{ only_copy_these_tags.first | json }}\n                            ]\n                          }\n                        }\n                      ]\n                    }\n\n                  }\n                ]\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign customer = result.data.customer %}\n\n    {% for order in customer.orders.nodes %}\n      {% for line_item in order.lineItems.nodes %}\n        {% for tag in line_item.product.tags %}\n          {% if tags_to_copy contains tag or customer.tags contains tag %}\n            {% continue %}\n          {% endif %}\n\n          {% if only_copy_these_tags != blank %}\n            {% unless only_copy_these_tags contains tag %}\n              {% continue %}\n            {% endunless %}\n          {% endif %}\n\n          {% assign tags_to_copy = tags_to_copy | push: tag %}\n        {% endfor %}\n      {% endfor %}\n    {% endfor %}\n\n    {% if result.data.customer.orders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.customer.orders.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% if tags_to_copy != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ customer.id | json }}\n          tags: {{ tags_to_copy | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger",
  "tags": [
    "Auto-Tag",
    "Customers",
    "Products"
  ]
}
