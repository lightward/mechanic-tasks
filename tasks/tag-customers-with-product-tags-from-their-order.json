{
  "name": "Auto-tag customers with product tags from their order",
  "options": {
    "limit_to_customers_matching_this_query_for_manual_runs": null,
    "only_copy_these_tags__array": null
  },
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic == \"mechanic/user/trigger\" %}\n  {% assign customers_query = nil %}\n\n  {% if options.limit_to_customers_matching_this_query_for_manual_runs != blank %}\n    {% assign customers_query = options.limit_to_customers_matching_this_query_for_manual_runs %}\n  {% endif %}\n\n  {% capture bulk_operation_query %}\n    query {\n      customers(\n        query: {{ customers_query | json }}\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            orders {\n              edges {\n                node {\n                  __typename\n                  id\n                  lineItems {\n                    edges {\n                      node {\n                        __typename\n                        id\n                        product {\n                          __typename\n                          id\n                          tags\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_objects_jsonl %}\n      {\"__typename\":\"Customer\",\"id\":\"gid:\\/\\/shopify\\/Customer\\/1234567890\",\"tags\":[\"red\"]}\n      {\"__typename\":\"Order\",\"id\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"__parentId\":\"gid:\\/\\/shopify\\/Customer\\/1234567890\"}\n      {\"__typename\":\"LineItem\",\"id\":\"gid:\\/\\/shopify\\/LineItem\\/1234567890\",\"product\":{\"__typename\":\"Product\",\"id\":\"gid:\\/\\/shopify\\/Product\\/1234567890\",\"tags\":{{ options.only_copy_these_tags__array | join: \", \" | default: \"red, green\" | split: \", \" | json }}},\"__parentId\":\"gid:\\/\\/shopify\\/Order\\/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% assign customers = bulkOperation.objects | where: \"__typename\", \"Customer\" %}\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign line_items = bulkOperation.objects | where: \"__typename\", \"LineItem\" %}\n\n  {% for customer in customers %}\n    {% assign tags_to_copy = array %}\n\n    {% assign order_ids = orders | where: \"__parentId\", customer.id | map: \"id\" %}\n\n    {% for line_item in line_items %}\n      {% unless order_ids contains line_item.__parentId %}\n        {% continue %}\n      {% endunless %}\n\n      {% for tag in line_item.product.tags %}\n        {% if tags_to_copy contains tag or customer.tags contains tag %}\n          {% continue %}\n        {% endif %}\n\n        {% if options.only_copy_these_tags__array != blank %}\n          {% unless options.only_copy_these_tags__array contains tag %}\n            {% continue %}\n          {% endunless %}\n        {% endif %}\n\n        {% assign tags_to_copy[tags_to_copy.size] = tag %}\n      {% endfor %}\n    {% endfor %}\n\n    {% if tags_to_copy != empty %}\n      {% log customer: customer %}\n\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ customer.id | json }}\n            tags: {{ tags_to_copy | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% elsif event.topic == \"shopify/orders/create\" %}\n  {% if event.preview %}\n    {% capture order_json %}\n      {\n        \"customer\": {\n          \"admin_graphql_api_id\": \"gid://shopify/Customer/1234567890\"\n        },\n        \"line_items\": [\n          {\n            \"product\": {\n              \"tags\":\n                {% if options.only_copy_these_tags__array != blank %}\n                  {{ options.only_copy_these_tags__array | json }}\n                {% else %}\n                  \"club-limited, december-sale\"\n                {% endif  %}\n            }\n          }\n        ]\n      }\n    {% endcapture %}\n\n    {% assign order = order_json | parse_json %}\n  {% endif %}\n\n  {% assign product_tags_from_order = order.line_items | map: \"product\" | map: \"tags\" | join: \", \" | split: \", \" | sort | uniq %}\n  {% log product_tags_from_order: product_tags_from_order %}\n\n  {% if options.only_copy_these_tags__array == blank %}\n    {% assign tags_to_copy = product_tags_from_order %}\n  {% else %}\n    {% assign tags_to_copy = array %}\n\n    {% assign only_copy_these_tags = options.only_copy_these_tags__array %}\n    {% log only_copy_these_tags: only_copy_these_tags %}\n\n    {% for tag in only_copy_these_tags %}\n      {% if product_tags_from_order contains tag %}\n        {% assign tags_to_copy[tags_to_copy.size] = tag %}\n      {% endif %}\n    {% endfor %}\n  {% endif %}\n\n  {% if tags_to_copy != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order.customer.admin_graphql_api_id | json }}\n          tags: {{ tags_to_copy | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "When orders come in, use this task to copy product tags from the order to the customer on file. Useful for automatically segmenting your customers based on attributes of their purchases. To keep things tidy, optionally configure this task to only look for a certain set of tags. This task supports running manually, to scan and tag all customers based on their order history, or a subset of customers by using a query filter.\n\nThis task will scan the product tags for each order, as the order is created, and copy those tags over to the customer record. Run this task manually to process all orders, for all customers. (This may take some time!)\n\nTo keep things clean, fill in the \"Only copy these tags\" option with a comma-separated list of tags you want to watch for.\n\nThe \"Limit to customers matching this query for manual runs\" option uses the same query syntax as the \"Customers\" section of the Shopify admin area. For example, to only include customers that have more than one order, use this query:\n\norders_count:>1",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Customers",
    "Products"
  ]
}
