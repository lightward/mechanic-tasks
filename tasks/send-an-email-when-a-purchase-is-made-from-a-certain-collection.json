{
  "docs": "This task will monitor incoming orders for any products that are included in the collection you choose. [Learn where to find the collection ID.](https://learn.mechanic.dev/techniques/finding-a-resource-id)\n\nPlease note: This task _does not_ determine what collection the customer may have been browsing when they added the product to the cart. This task simply checks to see which collections contain each purchased product, looking for a match with the collection you choose.",
  "halt_action_run_sequence_on_error": false,
  "name": "Send an email when a purchase is made from a certain collection",
  "online_store_javascript": null,
  "options": {
    "required_collection_id__number_required": "",
    "email_address__required": "",
    "email_subject__required": "New purchase for LINE_ITEM_TITLES, from COLLECTION_TITLE",
    "email_body__multiline_required": "Hello,\n\nOrder {{ order.name }} includes LINE_ITEM_TITLES, from COLLECTION_TITLE.\n\n<a href=\"https://{{ shop.domain }}/admin/orders/{{ order.id }}\">Manage this order in Shopify</a>\n\nThanks,\n-Mechanic, for {{ shop.name }}"
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% capture query %}\n  query {\n    collection(id: \"gid://shopify/Collection/{{ options.required_collection_id__number_required }}\") {\n      id\n      title\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"collection\": {\n          \"id\": \"gid://shopify/Collection/{{ options.required_collection_id__number_required }}\",\n          \"title\": \"[sample collection]\"\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign collection = result.data.collection %}\n\n{% unless collection %}\n  {% error message: \"Couldn't find a collection with the configured ID\", collection_id: options.required_collection_id__number_required %}\n  {% break %}\n{% endunless %}\n\n{% capture query %}\n  query {\n    order(id: {{ order.admin_graphql_api_id | json }}) {\n      lineItems(first: 250) {\n        edges {\n          node {\n            id\n            title\n            product {\n              inCollection(id: {{ collection.id | json }})\n            }\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"order\": {\n          \"lineItems\": {\n            \"edges\": [\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/LineItem/1234567890\",\n                  \"title\": \"[sample product]\",\n                  \"product\": {\n                    \"inCollection\": true\n                  }\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign qualifying_line_item_titles = array %}\n\n{% for lineItem_edge in result.data.order.lineItems.edges %}\n  {% if lineItem_edge.node.product.inCollection %}\n    {% assign qualifying_line_item_titles[qualifying_line_item_titles.size] = lineItem_edge.node.title %}\n  {% endif %}\n{% endfor %}\n\n{% if qualifying_line_item_titles == empty %}\n  {% log message: \"No line items found from the configured collection\", collection: collection, order: result.data.order %}\n  {% break %}\n{% endif %}\n\n{% assign line_item_titles = qualifying_line_item_titles | uniq | join: \", \" %}\n{% assign collection_title = collection.title %}\n\n{% action \"email\" %}\n  {\n    \"to\": {{ options.email_address__required | json }},\n    \"subject\": {{ options.email_subject__required | replace: \"COLLECTION_TITLE\", collection_title | replace: \"LINE_ITEM_TITLES\", line_item_titles | json }},\n    \"body\": {{ options.email_body__multiline_required | replace: \"COLLECTION_TITLE\", collection_title | replace: \"LINE_ITEM_TITLES\", line_item_titles | strip | newline_to_br | json }},\n    \"from_display_name\": {{ shop.name | json }}\n  }\n{% endaction %}",
  "subscriptions": [
    "shopify/orders/paid"
  ],
  "subscriptions_template": "shopify/orders/paid",
  "tags": [
    "Collections",
    "Email",
    "Orders"
  ]
}
