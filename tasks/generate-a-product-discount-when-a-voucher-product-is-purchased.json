{
  "docs": "Use this task to generate discounts for future purchases. When a customer buys a \"voucher\" product, they will be emailed a single-use discount code for a fixed amount of money off a purchase on a corresponding \"entitled\" product\".\n\nIf a customer purchases more than one voucher product, they will receive more than one email, each containing a unique discount code.\n\n### Options\n\n- **Voucher product IDs and entitled product IDs:** Enter the IDs of the voucher products you're selling on the left, and the IDs of products you want to be discounted on the right. ([Learn how to find the product IDs.](https://learn.mechanic.dev/techniques/finding-a-resource-id))\n- **Discount code prefix:** A small piece of text to add to the beginning of the generated discount code.\n- **Discount value:** The money value to be subtracted.\n- **Email subject, body:** The content to email to the customer. May use the following variables:\n  - CUSTOMER_FIRST_NAME\n  - DISCOUNT_CODE\n  - ENTITLED_PRODUCT_TITLE\n  - ORDER_NAME\n  - VOUCHER_PRODUCT_TITLE",
  "halt_action_run_sequence_on_error": false,
  "name": "Generate a product discount when a voucher product is purchased",
  "online_store_javascript": null,
  "options": {
    "voucher_product_ids_and_entitled_product_ids__keyval_number_required": {},
    "discount_code_prefix__required": "HOORAY",
    "discount_value__number_required": "5",
    "email_subject__required": "[Order ORDER_NAME] Thanks! Your discount is attached.",
    "email_body__multiline_required": "Hi CUSTOMER_FIRST_NAME,\n\nThanks for your order! Here's your discount code:\n\n<code>DISCOUNT_CODE</code>\n\nYour purchase of VOUCHER_PRODUCT_TITLE has earned you a one-time discount on a future order of ENTITLED_PRODUCT_TITLE.\n\nThanks,\nThe team at {{ shop.name }}"
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [
    {
      "description": "Discount code successfully created",
      "event_attributes": {
        "data": {
          "meta": {
            "customer_first_name": "Customer",
            "discount_code": "ABCD1234",
            "entitled_product_title": "Widget B",
            "order_email": "customer@example.com",
            "order_name": "#PREVIEW",
            "voucher_product_title": "Widget A"
          },
          "run": {
            "ok": true
          },
          "type": "shopify"
        },
        "topic": "mechanic/actions/perform"
      }
    }
  ],
  "script": "{% assign ve_product_ids_keyval = options.voucher_product_ids_and_entitled_product_ids__keyval_number_required %}\n{% assign discount_code_prefix = options.discount_code_prefix__required %}\n{% assign discount_value = options.discount_value__number_required %}\n{% assign email_subject = options.email_subject__required %}\n{% assign email_body = options.email_body__multiline_required %}\n\n{% if event.topic == \"shopify/orders/paid\" %}\n  {% if event.preview %}\n    {% capture order_json %}\n      {\n        \"email\": \"customer@example.com\",\n        \"customer\": {\n          \"id\": 1234567890,\n          \"first_name\": \"TEST\"\n        },\n        \"line_items\": [\n          {\n            \"id\": 1234567890,\n            \"product_id\": {{ ve_product_ids_keyval.first.first }},\n            \"quantity\": 1\n          }\n        ]\n      }\n    {% endcapture %}\n\n    {% assign order = order_json | parse_json %}\n  {% endif %}\n\n  {% if order.customer == blank %}\n    {% log \"This order has no related customer. Skipping\" %}\n    {% break %}\n  {% endif %}\n\n  {% if order.email == blank %}\n    {% log \"This order has no email address. Skipping\" %}\n    {% break %}\n  {% endif %}\n\n  {% assign customer_id = order.customer.id | prepend: \"gid://shopify/Customer/\" %}\n\n  {% for line_item in order.line_items %}\n    {% assign voucher_product_title = line_item.title %}\n    {% assign voucher_product_id = line_item.product_id %}\n    {% assign voucher_product_id_string = voucher_product_id | append: \"\" %}\n    {% assign entitled_product_id = ve_product_ids_keyval[voucher_product_id_string] %}\n\n    {% if entitled_product_id == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% comment %}\n      -- make sure the entitled product exists in the shop and get its title\n    {% endcomment %}\n\n    {% capture query %}\n      query {\n        product(id: {{ entitled_product_id | prepend: \"gid://shopify/Product/\" | json }}) {\n          id\n          title\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"product\": {\n              \"id\": \"gid://shopify/Product/1234567890\",\n              \"title\": \"Widget\"\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign entitled_product = result.data.product %}\n\n    {% if entitled_product == blank %}\n      {% action \"echo\"\n        __error: \"Entitled product not found in the shop. Discount code will not be created.\",\n        entitled_product_id: entitled_product_id,\n        voucher_product_id: voucher_product_id\n      %}\n      {% continue %}\n    {% endif %}\n\n    {% for line_item_n in (1..line_item.quantity) %}\n      {% assign discount_code = line_item.id | append: n | split: \"\" | reverse | join: \"\" | slice: 0, 4 | append: order.order_number | base64 | replace: \"=\", \"\" | upcase | prepend: discount_code_prefix %}\n\n      {% capture mutation %}\n        mutation {\n          discountCodeBasicCreate(\n            basicCodeDiscount: {\n              code: {{ discount_code | json }}\n              customerSelection: {\n                customers: {\n                  add: {{ array | push: customer_id | json }}\n                }\n              }\n              title: {{ discount_code | json }}\n              startsAt: {{ \"now\" | date: \"%FT%T%:z\" | json }}\n              customerGets: {\n                items: {\n                  products: {\n                    productsToAdd: {{ array | push: entitled_product.id | json }}\n                  }\n                }\n                value: {\n                  discountAmount: {\n                    amount: {{ discount_fixed_amount | abs | times: 1.0 | json }}\n                    appliesOnEachItem: false\n                  }\n                }\n              }\n              usageLimit: 1\n            }\n          ) {\n            codeDiscountNode {\n              id\n              codeDiscount {\n                ... on DiscountCodeBasic {\n                  codes(first: 1) {\n                    nodes {\n                      id\n                      code\n                    }\n                  }\n                  summary\n                }\n              }\n            }\n            userErrors {\n              code\n              extraInfo\n              field\n              message\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% action %}\n        {\n          \"type\": \"shopify\",\n          \"options\": {\n            \"query\": {{ mutation | json }}\n          },\n          \"meta\": {\n            \"customer_first_name\": {{ order.customer.first_name | default: \"there\" | json }},\n            \"order_email\": {{ order.email | json }},\n            \"order_name\": {{ order.name | json }},\n            \"discount_code\": {{ discount_code | json }},\n            \"entitled_product_title\": {{ entitled_product.title | json }},\n            \"voucher_product_title\": {{ voucher_product_title | json }}\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n  {% endfor %}\n\n{% elsif event.topic == \"mechanic/actions/perform\" %}\n  {% comment %}\n    -- only process a successful discountCodeBasicCreate shopify action; the Error reporter task should be used to respond to failures\n  {% endcomment %}\n\n  {% unless action.type == \"shopify\" and action.run.ok == true %}\n    {% break %}\n  {% endunless %}\n\n  {% assign customer_first_name = action.meta.customer_first_name %}\n  {% assign order_email = action.meta.order_email %}\n  {% assign order_name = action.meta.order_name %}\n  {% assign discount_code = action.meta.discount_code %}\n  {% assign entitled_product_title = action.meta.entitled_product_title %}\n  {% assign voucher_product_title = action.meta.voucher_product_title %}\n\n  {% comment %}\n    -- send a customer email for the created discount code\n  {% endcomment %}\n\n  {% assign email_subject = email_subject\n    | replace: 'CUSTOMER_FIRST_NAME', customer_first_name\n    | replace: 'DISCOUNT_CODE', discount_code\n    | replace: 'ENTITLED_PRODUCT_TITLE', entitled_product_title\n    | replace: 'ORDER_NAME', order_name\n    | replace: 'VOUCHER_PRODUCT_TITLE', voucher_product_title\n  %}\n  {% assign email_body = email_body\n    | replace: 'CUSTOMER_FIRST_NAME', customer_first_name\n    | replace: 'DISCOUNT_CODE', discount_code\n    | replace: 'ENTITLED_PRODUCT_TITLE', entitled_product_title\n    | replace: 'ORDER_NAME', order_name\n    | replace: 'VOUCHER_PRODUCT_TITLE', voucher_product_title\n  %}\n\n  {% action \"email\" %}\n    {\n      \"to\": {{ order_email | json }},\n      \"subject\": {{ email_subject | strip | json }},\n      \"body\": {{ email_body | strip | newline_to_br | json }},\n      \"reply_to\": {{ shop.customer_email | json }},\n      \"from_display_name\": {{ shop.name | json }}\n    }\n  {% endaction %}\n{% endif %}\n",
  "subscriptions": [
    "shopify/orders/paid"
  ],
  "subscriptions_template": "shopify/orders/paid\nmechanic/actions/perform",
  "tags": [
    "Discounts",
    "Products",
    "Watch"
  ]
}
