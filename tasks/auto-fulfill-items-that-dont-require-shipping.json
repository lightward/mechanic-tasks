{
  "docs": "Useful for digital products, memberships, or anything else that needs to be fulfilled instantly. This task watches for paid (or new) orders, and auto-fulfills all line items that don't require shipping.\n\nOptionally, choose to only process paid orders (default), to wait until other shippable items are fulfilled, and whether to include or exclude products by tag.\n\n**Note:** exclusion tags on a product will take priority over inclusion tags.\n\nThis task may also be run manually to process existing open, unfulfilled orders (checking for paid status or other shippable items as configured).",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-fulfill items that don't require shipping",
  "online_store_javascript": null,
  "options": {
    "include_products_with_any_of_these_tags__array": null,
    "exclude_products_with_any_of_these_tags__array": null,
    "only_process_paid_orders__boolean": true,
    "wait_until_any_other_shippable_items_are_fulfilled__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign inclusion_tags = options.include_products_with_any_of_these_tags__array %}\n{% assign exclusion_tags = options.exclude_products_with_any_of_these_tags__array %}\n{% assign only_process_paid_orders = options.only_process_paid_orders__boolean %}\n{% assign wait_until_any_other_shippable_items_are_fulfilled = options.wait_until_any_other_shippable_items_are_fulfilled__boolean %}\n\n{% if event.topic contains \"shopify/orders/\" %}\n  {% comment %}\n    -- get all open or in progress fulfillment orders\n  {% endcomment %}\n\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        name\n        displayFinancialStatus\n        displayFulfillmentStatus\n        fulfillmentOrders(\n          first: 10\n          query: \"status:open OR status:in_progress\"\n        ) {\n          nodes {\n            id\n            assignedLocation {\n              location {\n                id\n              }\n            }\n            lineItems(first: 50) {\n              nodes {\n                id\n                remainingQuantity\n                requiresShipping\n                variant {\n                  product {\n                    tags\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n  {% assign orders = array | push: result.data.order %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get all open, unfulfilled orders (this includes partially fulfilled)\n    -- if option enabled, restrict query to paid orders\n  {% endcomment %}\n\n  {% assign search_query = \"status:open fulfillment_status:unfulfilled\" %}\n\n  {% if only_process_paid_orders %}\n    {% assign search_query = search_query | append: \" financial_status:paid \" %}\n  {% endif %}\n\n  {% assign cursor = nil %}\n  {% assign orders = array %}\n\n  {% for n in (1..100) %}\n    {% capture query %}\n      query {\n        orders(\n          first: 25\n          after: {{ cursor | json }}\n          query: {{ search_query | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            displayFinancialStatus\n            displayFulfillmentStatus\n            fulfillmentOrders(\n              first: 10\n              query: \"status:open OR status:in_progress\"\n            ) {\n              nodes {\n                id\n                assignedLocation {\n                  location {\n                    id\n                  }\n                }\n                lineItems(first: 50) {\n                  nodes {\n                    id\n                    remainingQuantity\n                    requiresShipping\n                    variant {\n                      product {\n                        tags\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign orders\n      = result.data.orders.nodes\n      | default: array\n      | concat: orders\n    %}\n\n    {% if result.data.orders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.orders.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture orders_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Order/1234567890\",\n        \"name\": \"PREVIEW\",\n        \"displayFinancialStatus\": \"PAID\",\n        \"displayFulfillmentStatus\": \"PARTIALLY_FULFILLED\",\n        \"fulfillmentOrders\": {\n          \"nodes\": [\n            {\n              \"id\": \"gid://shopify/FulfillmentOrder/1234567890\",\n              \"assignedLocation\": {\n                \"location\": {\n                  \"id\": \"gid://shopify/Location/1234567890\"\n                }\n              },\n              \"lineItems\": {\n                \"nodes\": [\n                  {\n                    \"id\": \"gid://shopify/FulfillmentOrderLineItem/1234567890\",\n                    \"remainingQuantity\": 1,\n                    \"requiresShipping\": false,\n                    \"variant\": {\n                      \"product\": {\n                        \"tags\": {{ inclusion_tags.first | json }}\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n    ]\n  {% endcapture %}\n\n  {% assign orders = orders_json | parse_json %}\n{% endif %}\n\n{% for order in orders %}\n  {% assign fulfillment_orders = order.fulfillmentOrders.nodes %}\n\n  {% if fulfillment_orders == blank %}\n    {% log\n      message: \"There are no open fulfillment orders to fulfill on this order.\",\n      order: order\n    %}\n    {% continue %}\n  {% endif %}\n\n  {% if only_process_paid_orders and order.displayFinancialStatus != \"PAID\" %}\n    {% log\n      message: \"This order does not have a status of PAID, and the 'Only process paid orders' option is checked.\",\n      order: order\n    %}\n    {% continue %}\n  {% endif %}\n\n  {% comment %}\n    -- fulfillments can only be created for one location at a time, so need to group fulfillment orders by location\n  {% endcomment %}\n\n  {% assign fulfillment_orders_by_location = hash %}\n  {% assign has_unfulfilled_shippable_items = nil %}\n\n  {% for fulfillment_order in fulfillment_orders %}\n    {% assign fulfillment_order_data = hash %}\n    {% assign fulfillment_order_data[\"fulfillment_order_id\"] = fulfillment_order.id %}\n\n    {% for fulfillment_order_line_item in fulfillment_order.lineItems.nodes %}\n      {% comment %}\n        -- skip items that do not require shipping, but set flag if any are unfulfilled\n      {% endcomment %}\n\n      {% if fulfillment_order_line_item.requiresShipping %}\n        {% if fulfillment_order_line_item.remainingQuantity > 0 %}\n          {% assign has_unfulfilled_shippable_items = true %}\n        {% endif %}\n\n        {% continue %}\n      {% endif %}\n\n      {% if inclusion_tags != blank or exclusion_tags != blank %}\n        {% assign has_exclusion_tag = nil %}\n        {% assign has_inclusion_tag = nil %}\n\n        {% assign product_tags = fulfillment_order_line_item.variant.product.tags %}\n\n        {% for exclusion_tag in exclusion_tags %}\n          {% if product_tags contains exclusion_tag %}\n            {% assign has_exclusion_tag = true %}\n            {% break %}\n          {% endif %}\n        {% endfor %}\n\n        {% for inclusion_tag in inclusion_tags %}\n          {% if product_tags contains inclusion_tag %}\n            {% assign has_inclusion_tag = true %}\n            {% break %}\n          {% endif %}\n        {% endfor %}\n\n        {% comment %}\n          -- exclusion tags have priority over inclusion tags\n        {% endcomment %}\n\n        {% if has_exclusion_tag %}\n          {% log\n            message: \"This line item's product has at least one of the configured exclusion tags; skipping\",\n            fulfillment_order_line_item: fulfillment_order_line_item,\n            product_tags: product_tags,\n            exclusion_tags: exclusion_tags\n          %}\n          {% continue %}\n\n        {% elsif inclusion_tags != blank %}\n          {% unless has_inclusion_tag %}\n            {% log\n              message: \"This line item's product does not contain any of the configured inclusion tags; skipping\",\n              fulfillment_order_line_item: fulfillment_order_line_item,\n              product_tags: product_tags,\n              inclusion_tags: inclusion_tags\n            %}\n            {% continue %}\n          {% endunless %}\n        {% endif %}\n      {% endif %}\n\n      {% comment %}\n        -- save unfulfilled line items that do not require shipping\n      {% endcomment %}\n\n      {% if fulfillment_order_line_item.remainingQuantity > 0 %}\n        {% assign fulfillment_order_data[\"unfulfilled_line_items\"]\n          = fulfillment_order_data[\"unfulfilled_line_items\"]\n          | default: array\n          | push: fulfillment_order_line_item\n        %}\n      {% endif %}\n    {% endfor %}\n\n    {% comment %}\n      -- group unfulfilled line items by location for fulfillment\n    {% endcomment %}\n\n    {% if fulfillment_order_data.unfulfilled_line_items != blank %}\n      {% assign fulfillment_orders_by_location[fulfillment_order.assignedLocation.location.id]\n        = fulfillment_orders_by_location[fulfillment_order.assignedLocation.location.id]\n        | default: array\n        | push: fulfillment_order_data\n      %}\n    {% endif %}\n  {% endfor %}\n\n  {% if wait_until_any_other_shippable_items_are_fulfilled and has_unfulfilled_shippable_items and fulfillment_orders_by_location != blank %}\n    {% log\n      message: \"Unfulfilled shippable items exist on this order and the 'Wait until any other shippable items are fulfilled' option is checked; no auto fulfillments will be made in this task run.\",\n      order: order\n    %}\n    {% continue %}\n  {% endif %}\n\n  {% comment %}\n    -- fulfill the items that don't require shipping\n  {% endcomment %}\n\n  {% for keyval in fulfillment_orders_by_location %}\n    {% action \"shopify\" %}\n      mutation {\n        fulfillmentCreate(\n          fulfillment: {\n            lineItemsByFulfillmentOrder: [\n              {% for fulfillment_order_data in keyval[1] %}\n                {\n                  fulfillmentOrderId: {{ fulfillment_order_data.fulfillment_order_id | json }}\n                  fulfillmentOrderLineItems: [\n                    {% for unfulfilled_line_item in fulfillment_order_data.unfulfilled_line_items %}\n                      {\n                        id: {{ unfulfilled_line_item.id | json }}\n                        quantity: {{ unfulfilled_line_item.remainingQuantity }}\n                      }\n                    {% endfor %}\n                  ]\n                }\n              {% endfor %}\n            ]\n            notifyCustomer: false\n          }\n        ) {\n          fulfillment {\n            id\n            status\n          }\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endfor %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/paid",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "{% if options.only_process_paid_orders__boolean %}\n  shopify/orders/paid\n{% else %}\n  shopify/orders/create\n{% endif %}\n{% if options.wait_until_any_other_shippable_items_are_fulfilled__boolean %}\n  shopify/orders/partially_fulfilled\n{% endif %}\nmechanic/user/trigger",
  "tags": [
    "Fulfillment",
    "Orders"
  ]
}
