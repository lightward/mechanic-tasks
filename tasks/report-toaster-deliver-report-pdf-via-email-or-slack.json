{
  "name": "Report Toaster: Deliver report PDF via email or Slack",
  "options": {
    "report_id__required": null,
    "email_report_recipients__array": null,
    "slack_incoming_webhook_url": "",
    "message_body__multiline_required": "Hello,\n\nYour report is now available for download:\n\nReport Name: {{ event.data.name }}\nDownload Link: {{ event.data.file.url }}\n\nEnjoy!",
    "run_this_task_daily__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "report_toaster/reports/create"
  ],
  "subscriptions_template": "{% if options.run_this_task_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}\nmechanic/user/trigger\nreport_toaster/reports/create\n",
  "script": "{% comment %}\n  Preferred option order:\n\n  {{ options.report_id__required}}\n  {{ options.email_report_recipients__array }}\n  {{ options.slack_incoming_webhook_url }}\n  {{ options.message_body__multiline_required }}\n\n{% endcomment %}\n\n{% if options.email_report_recipients__array == blank and options.slack_incoming_webhook_url == blank %}\n  {% error \"One or more email addresses or a Slack webhook must be defined.\" %}\n{% endif %}\n\n{% if event.preview %}\n  {% assign event = hash %}\n  {% assign event[\"data\"] = hash %}\n  {% assign event[\"data\"][\"name\"] = \"A report name\" %}\n  {% assign event[\"data\"][\"meta\"] = hash %}\n  {% assign event[\"data\"][\"meta\"][\"task_id\"] = task.id %}\n  {% assign event[\"data\"][\"file\"] = hash %}\n  {% assign event[\"data\"][\"file\"][\"url\"] = \"http://www.google.com\" %}\n  {% assign event[\"preview\"] = true %}\n{% endif %}\n\n{% if event.topic contains \"mechanic/scheduler/\" or event.topic == \"mechanic/user/trigger\" or event.preview %}\n  {% action \"report_toaster\" %}\n    {\n      \"operation\": \"report\",\n      \"reports\": [\n        {\n          \"id\": {{ options.report_id__required | json }},\n          \"file\": {\n            \"format\": \"pdf\"\n          },\n          \"meta\": {\n            \"task_id\": {{ task.id | json }}\n          }\n        }\n      ]\n    }\n  {% endaction %}\n\n{% endif %}\n\n{% if event.topic == \"report_toaster/reports/create\" or event.preview %}\n\n  {% if options.email_report_recipients__array != blank and event.data.meta.task_id == task.id %}  \n\n    {% action \"email\" %}\n      {\n        \"to\": {{ options.email_report_recipients__array | join: \",\" | json }},\n        \"subject\": {{ event.data.name | append: \" Report\" | json }},\n        \"body\": {{ options.message_body__multiline_required | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n  {% endif %}\n\n  {% if options.slack_incoming_webhook_url != blank and event.data.meta.task_id == task.id %}  \n\n    {% action \"http\" %}\n      {\n        \"method\": \"post\",\n        \"url\": {{ options.slack_incoming_webhook_url | json }},\n        \"body\": {\n          \"text\": {{ options.message_body__multiline_required | strip | json }}\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "This task demonstrates how a report can be requested from Report Toaster as a PDF. Once delivered it is emailed to one or more recipients and/or sent to a Slack channel.\n\nBy default, this will use the pre-built Sales By Product report from Report Toaster. This could use any pre-built or custom report from Report Toaster by simply changing the report id.\n\nThe report can be requested via CSV or PDF by changing the file format property, in which case a file object is returned. If the file format is omitted, then the report results are returned as JSON directly within the task result.\n\nSee the [Report Toaster](https://learn.mechanic.dev/platform/integrations/report-toaster) section of the Mechanic docs for more information.\n\nThe task can be run manually, or optionally, set to run as a daily report by checking the \"Run this task daily\" option. If a less frequent schedule is desired, then you may modify the **mechanic/scheduler/daily** subscription to another frequency. See the [scheduler](https://learn.mechanic.dev/platform/events/topics#scheduler) section in the docs for more details.\",",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Email",
    "PDF",
    "Report",
    "Report Toaster",
    "Slack"
  ]
}
