{
  "name": "Auto-tag orders by product collections",
  "options": {
    "collections_and_tags__keyval_required": {
      "Summer Swimware": "summer, swimware",
      "Cold Weather Gear": "winter"
    }
  },
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger",
  "script": "{% assign orders = array %}\n\n{% if event.preview %}\n  {% action \"shopify\" %}\n    mutation {\n      tagsAdd(\n        id: \"gid://shopify/Order/1234567890\"\n        tags: {{ options.collections_and_tags__keyval_required.first.last | json }}\n      ) {\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% elsif event.topic contains \"shopify/orders/\" %}\n  {% assign orders[0] = order %}\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% assign orders = shop.orders.any %}\n{% endif %}\n\n{% for order in orders %}\n  {% assign existing_tags = order.tags | split: \", \" %}\n  {% assign tags_to_add = array %}\n\n  {% unless event.preview %}\n    {% assign order_collections = nil %}\n    {% for line_item in order.line_items %}\n      {% if line_item.product_id != blank %}\n        {% assign order_collections = order_collections | concat: line_item.product.collections %}\n      {% endif %}\n    {% endfor %}\n    {% assign order_collection_ids = order_collections | map: \"id\" | join: \",\" | split: \",\" %}\n    {% assign order_collection_titles = order_collections | map: \"title\" %}\n    {% assign order_collection_handles = order_collections | map: \"handle\" %}\n  {% endunless %}\n\n  {% for pair in options.collections_and_tags__keyval_required %}\n    {% assign required_collection = pair[0] %}\n    {% assign tags = pair[1] | split: \",\" %}\n\n    {% if order_collection_ids contains required_collection\n          or order_collection_titles contains required_collection\n          or order_collection_handles contains required_collection\n    %}\n      {% for tag in tags %}\n        {% assign stripped_tag = tag | strip %}\n        {% unless existing_tags contains stripped_tag %}\n          {% assign tags_to_add[tags_to_add.size] = stripped_tag %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n  {% endfor %}\n\n  {% if tags_to_add != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order.admin_graphql_api_id | json }}\n          tags: {{ tags_to_add | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": "Use this task to automatically tag orders based on what collection(s) the customer has ordered from. Useful for broadly classifying orders according to their contents.\n\nFill in the \"Collections and tags\" option with the collection on the left, and tags on the right. When specifying the collection, you can use the collection title (e.g. \"Summer Swimware\"), handle (\"e.g. summer-swimware\"), or ID (e.g. 27359487103). These are all case-sensitive, so double-check your work!\r\n\r\nRun this task manually to scan and tag every order in your store.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Collections",
    "Orders",
    "Products"
  ]
}
