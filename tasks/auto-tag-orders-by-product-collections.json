{
  "name": "Auto-tag orders by product collections",
  "options": {
    "collections_and_tags__keyval_required": {
      "Summer Swimware": "summer, swimware",
      "Cold Weather Gear": "winter"
    }
  },
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic contains \"shopify/orders/\" %}\n  {% assign existing_tags = order.tags | split: \", \" %}\n  {% assign tags_to_add = array %}\n  {% assign order_collections = nil %}\n\n  {% for line_item in order.line_items %}\n    {% if line_item.product != blank %}\n      {% assign order_collections = order_collections | concat: line_item.product.collections %}\n    {% endif %}\n  {% endfor %}\n\n  {% assign order_collection_ids = order_collections | map: \"id\" | join: \",\" | split: \",\" %}\n  {% assign order_collection_titles = order_collections | map: \"title\" %}\n  {% assign order_collection_handles = order_collections | map: \"handle\" %}\n\n  {% for pair in options.collections_and_tags__keyval_required %}\n    {% assign required_collection = pair[0] %}\n    {% assign tags = pair[1] | split: \",\" %}\n\n    {% if order_collection_ids contains required_collection\n          or order_collection_titles contains required_collection\n          or order_collection_handles contains required_collection\n    %}\n      {% for tag in tags %}\n        {% assign stripped_tag = tag | strip %}\n        {% unless existing_tags contains stripped_tag %}\n          {% assign tags_to_add[tags_to_add.size] = stripped_tag %}\n        {% endunless %}\n      {% endfor %}\n    {% endif %}\n  {% endfor %}\n\n  {% if event.preview %}\n    {% assign tags_to_add[0] = options.collections_and_tags__keyval_required.first.last %}\n  {% endif %}\n\n  {% if tags_to_add != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order.admin_graphql_api_id | json }}\n          tags: {{ tags_to_add | uniq | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      orders {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            lineItems {\n              edges {\n                node {\n                  __typename\n                  id\n                  product {\n                    id\n                    collections {\n                      edges {\n                        node {\n                          __typename\n                          id\n                          legacyResourceId\n                          title\n                          handle\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_objects_jsonl %}\n      {\"__typename\":\"Order\",\"id\":\"gid:\\/\\/shopify\\/Order\\/1234567890\",\"tags\":[]}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n  {% assign line_items = bulkOperation.objects | where: \"__typename\", \"LineItem\" %}\n  {% assign collections = bulkOperation.objects | where: \"__typename\", \"Collection\" %}\n\n  {% for order in orders %}\n    {% assign tags_to_add = array %}\n    {% assign order_collections = nil %}\n\n    {% assign order_line_items = line_items | where: \"__parentId\", order.id %}\n\n    {% for line_item in order_line_items %}\n      {% assign line_item_collections = collections | where: \"__parentId\", line_item.id %}\n      {% assign order_collections = order_collections | concat: line_item_collections %}\n    {% endfor %}\n\n    {% assign order_collections = order_collections | compact %}\n    {% assign order_collection_ids = order_collections | map: \"legacyResourceId\" %}\n    {% assign order_collection_titles = order_collections | map: \"title\" %}\n    {% assign order_collection_handles = order_collections | map: \"handle\" %}\n\n    {% for pair in options.collections_and_tags__keyval_required %}\n      {% assign required_collection = pair[0] %}\n      {% assign tags = pair[1] | split: \",\" %}\n\n      {% if order_collection_ids contains required_collection\n            or order_collection_titles contains required_collection\n            or order_collection_handles contains required_collection\n      %}\n        {% for tag in tags %}\n          {% assign stripped_tag = tag | strip %}\n          {% unless order.tags contains stripped_tag %}\n            {% assign tags_to_add[tags_to_add.size] = stripped_tag %}\n          {% endunless %}\n        {% endfor %}\n      {% endif %}\n    {% endfor %}\n\n    {% if event.preview %}\n      {% assign tags_to_add[0] = options.collections_and_tags__keyval_required.first.last %}\n    {% endif %}\n\n    {% if tags_to_add != empty %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsAdd(\n            id: {{ order.id | json }}\n            tags: {{ tags_to_add | uniq | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": "Use this task to automatically tag orders based on what collection(s) the customer has ordered from. Useful for broadly classifying orders according to their contents.\n\nFill in the \"Collections and tags\" option with the collection on the left, and tags on the right. When specifying the collection, you can use the collection title (e.g. \"Summer Swimware\"), handle (\"e.g. summer-swimware\"), or ID (e.g. 27359487103). These are all case-sensitive, so double-check your work!\n\nRun this task manually to scan and tag every order in your store. (To process orders older than 60 days, [enable \"read all orders\"](https://learn.mechanic.dev/platform/shopify/read-all-orders).)",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Collections",
    "Orders",
    "Products"
  ]
}
