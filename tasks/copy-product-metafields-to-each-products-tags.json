{
  "name": "Copy product metafields to each product's tags",
  "options": {
    "metafield_namespace__required": null,
    "metafield_key__required": null,
    "monitor_new_products__boolean": null,
    "test_mode__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.monitor_new_products__boolean %}\n  shopify/products/create\n{%endif%}",
  "script": "{% comment %}\n  An opinion about object order:\n\n  {{ options.metafield_namespace__required }}\n  {{ options.metafield_key__required }}\n  {{ options.monitor_new_products__boolean }}\n  {{ options.test_mode__boolean }}\n{% endcomment %}\n\n{% assign product_ids_and_tags = hash %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% assign cursor = nil %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        products(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            node {\n              id\n              tags\n              metafield(\n                namespace: {{ options.metafield_namespace__required | json }}\n                key: {{ options.metafield_key__required | json }}\n              ) {\n                value\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% for product_edge in result.data.products.edges %}\n      {% assign product = product_edge.node %}\n\n      {% if product.metafield == nil %}\n        {% continue %}\n      {% endif %}\n\n      {% if product.tags contains product.metafield.value %}\n        {% continue %}\n      {% endif %}\n\n      {% assign product_ids_and_tags[product.id] = product.metafield.value %}\n    {% endfor %}\n\n    {% if result.data.products.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.products.edges.last.cursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% elsif event.topic contains \"shopify/products/\" %}\n  {% capture query %}\n    query {\n      product(id: {{ product.admin_graphql_api_id | json }}) {\n        id\n        tags\n        metafield(\n          namespace: {{ options.metafield_namespace__required | json }}\n          key: {{ options.metafield_key__required | json }}\n        ) {\n          value\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n  {% assign product = result.data.product %}\n\n  {% if product.metafield %}\n    {% unless product.tags contains product.metafield.value %}\n      {% assign product_ids_and_tags[product.id] = product.metafield.value %}\n    {% endunless %}\n  {% endif %}\n{% endif %}\n\n{% if event.preview %}\n  {% assign product_ids_and_tags[\"gid://shopify/Product/1234567890\"] = \"Delta\" %}\n{% endif %}\n\n{% if options.test_mode__boolean %}\n  {% action \"echo\" %}\n    {\n      \"message\": \"Found {{ product_ids_and_tags.size }} tagging operations\",\n      \"product_ids_and_tags\": {{ product_ids_and_tags | json }}\n    }\n  {% endaction %}\n{% else %}\n  {% for keyval in product_ids_and_tags %}\n    {% assign product_id = keyval[0] %}\n    {% assign tag = keyval[1] %}\n\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ product_id | json }}\n          tags: {{ tag | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endfor %}\n{% endif %}",
  "docs": "This task exists to fill the gap between Shopify's admin product search, and product metafields. Use this task to copy metafield values to product tags, allowing you to filter products by tags based on those metafields.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false
}
