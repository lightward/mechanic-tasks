{
  "docs": "Use this task to automatially keep your Discounts list clean by deleting any that have been expired for a configurable amount of days. Choose whether to delete automatic or code discounts, or both. Optionally, limit the deletions to discounts created by specific apps.\n\nThis task will run every night, and may also be run manually.\n\n**Notes:**\n- If limiting deletions to certain apps, the configured values must match app names exactly (e.g. \"Shopify Web\")\n- This task cannot delete discounts created for use in Shopify Functions",
  "halt_action_run_sequence_on_error": false,
  "name": "Delete expired discounts after X days",
  "online_store_javascript": null,
  "options": {
    "days_after_expiration_to_delete__number_required": "7",
    "delete_automatic_discounts__boolean": false,
    "delete_code_discounts__boolean": true,
    "only_delete_discounts_created_by_these_apps__array": null
  },
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign days_after_expiration = options.days_after_expiration_to_delete__number_required %}\n{% assign delete_automatic_discounts = options.delete_automatic_discounts__boolean %}\n{% assign delete_code_discounts = options.delete_code_discounts__boolean %}\n{% assign qualifying_apps = options.only_delete_discounts_created_by_these_apps__array %}\n\n{% unless delete_automatic_discounts or delete_code_discounts %}\n  {% error \"Select at least one discount type to delete: automatic or code.\" %}\n{% endunless %}\n\n{%- capture lookback_period -%}\n  -{{ days_after_expiration | abs }} days\n{%- endcapture -%}\n\n{% assign cutoff_date = \"now\" | date: \"%F\", advance: lookback_period %}\n\n{% log cutoff_date: cutoff_date %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% if delete_automatic_discounts %}\n    {% comment %}\n      -- get expired automatic discounts\n      -- cannot filter by the creating app in the query, so that will be done afterwards if there are any configured\n    {% endcomment %}\n\n    {% assign cursor = nil %}\n    {% assign discount_nodes = array %}\n\n    {% for n in (1..100) %}\n      {% capture query %}\n        query {\n          discountNodes(\n            first: 250\n            sortKey: ENDS_AT\n            query: \"method:automatic status:expired\"\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              id\n              events(\n                first: 1\n                query: \"action:create\"\n              ) {\n                nodes {\n                  appTitle\n                }\n              }\n              discount {\n                __typename\n                ... on DiscountAutomaticBasic {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n                ... on DiscountAutomaticBxgy {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n                ... on DiscountAutomaticFreeShipping {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = query | shopify %}\n\n      {% if event.preview %}\n        {% capture result_json %}\n          {\n            \"data\": {\n              \"discountNodes\": {\n                \"nodes\": [\n                  {\n                    \"id\": \"gid://shopify/DiscountAutomaticNode/1234567890\",\n                    \"events\": {\n                      \"nodes\": [\n                        {\n                          \"appTitle\": {{ qualifying_apps.first | default: \"Shopify Web\"  | json }}\n                        }\n                      ]\n                    },\n                    \"discount\": {\n                      \"title\": \"ABCD\",\n                      \"summary\": \"$5.00 off Alpha Shoe • Applies to each eligible item per order • One use per customer\",\n                      \"status\": \"EXPIRED\",\n                      \"endsAt\": \"2020-02-02T12:00:00Z\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        {% endcapture %}\n\n        {% assign result = result_json | parse_json %}\n      {% endif %}\n\n      {% comment %}\n        -- verify that the code is expired and exceeds the cutoff date before marking for deletion\n      {% endcomment %}\n\n      {% for discount_node in result.data.discountNodes.nodes %}\n        {% assign discount_ends_at = discount_node.discount.endsAt | date: \"%F\" %}\n\n        {% unless discount_node.discount.status == \"EXPIRED\" and discount_ends_at <= cutoff_date %}\n          {% continue %}\n        {% endunless %}\n\n        {% if qualifying_apps == blank or qualifying_apps contains discount_node.events.nodes.first.appTitle %}\n          {% assign discount_nodes = discount_nodes | push: discount_node %}\n        {% endif %}\n      {% endfor %}\n\n      {% if result.data.discountNodes.pageInfo.hasNextPage %}\n        {% assign cursor = result.data.discountNodes.pageInfo.endCursor %}\n      {% else %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if discount_nodes == blank %}\n      {% log \"No expired automatic discounts qualified to be deleted on this task run.\" %}\n\n    {% else %}\n      {% comment %}\n        -- group discount nodes into groups of 250 for bulk deletion\n      {% endcomment %}\n\n      {% assign groups_of_discount_nodes = discount_nodes | in_groups_of: 250, fill_with: false %}\n\n      {% for group_of_discount_nodes in groups_of_discount_nodes %}\n        {% log\n          message: \"Deleting group of up to 250 automatic discounts.\",\n          count_of_discount_nodes_in_group: group_of_discount_nodes.size,\n          discount_nodes_in_group: group_of_discount_nodes\n        %}\n\n        {% action \"shopify\" %}\n          mutation {\n            discountAutomaticBulkDelete(\n              ids: {{ group_of_discount_nodes | map: \"id\" | graphql_arguments }}\n            ) {\n              job {\n                id\n              }\n              userErrors {\n                code\n                extraInfo\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endfor %}\n    {% endif %}\n  {% endif %}\n\n  {% if delete_code_discounts %}\n    {% comment %}\n      -- get expired code discounts\n      -- cannot filter by the creating app in the query, so that will be done afterwards if there are any configured\n    {% endcomment %}\n\n    {% assign cursor = nil %}\n    {% assign discount_nodes = array %}\n\n    {% for n in (1..100) %}\n      {% capture query %}\n        query {\n          discountNodes(\n            first: 250\n            sortKey: ENDS_AT\n            query: \"method:code status:expired\"\n          ) {\n            pageInfo {\n              hasNextPage\n              endCursor\n            }\n            nodes {\n              id\n              events(\n                first: 1\n                query: \"action:create\"\n              ) {\n                nodes {\n                  appTitle\n                }\n              }\n              discount {\n                __typename\n                ... on DiscountCodeBasic {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n                ... on DiscountCodeBxgy {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n                ... on DiscountCodeFreeShipping {\n                  title\n                  summary\n                  status\n                  createdAt\n                  updatedAt\n                  endsAt\n                }\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = query | shopify %}\n\n      {% if event.preview %}\n        {% capture result_json %}\n          {\n            \"data\": {\n              \"discountNodes\": {\n                \"nodes\": [\n                  {\n                    \"id\": \"gid://shopify/DiscountCodeNode/1234567890\",\n                    \"events\": {\n                      \"nodes\": [\n                        {\n                          \"appTitle\": {{ qualifying_apps.first | default: \"Shopify Web\"  | json }}\n                        }\n                      ]\n                    },\n                    \"discount\": {\n                      \"title\": \"ABCD\",\n                      \"summary\": \"$5.00 off Alpha Shoe • Applies to each eligible item per order • One use per customer\",\n                      \"status\": \"EXPIRED\",\n                      \"endsAt\": \"2020-02-02T12:00:00Z\"\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        {% endcapture %}\n\n        {% assign result = result_json | parse_json %}\n      {% endif %}\n\n      {% comment %}\n        -- verify that the code is expired and exceeds the cutoff date before marking for deletion\n      {% endcomment %}\n\n      {% for discount_node in result.data.discountNodes.nodes %}\n        {% assign discount_ends_at = discount_node.discount.endsAt | date: \"%F\" %}\n\n        {% unless discount_node.discount.status == \"EXPIRED\" and discount_ends_at <= cutoff_date %}\n          {% continue %}\n        {% endunless %}\n\n        {% if qualifying_apps == blank or qualifying_apps contains discount_node.events.nodes.first.appTitle %}\n          {% assign discount_nodes = discount_nodes | push: discount_node %}\n        {% endif %}\n      {% endfor %}\n\n      {% if result.data.discountNodes.pageInfo.hasNextPage %}\n        {% assign cursor = result.data.discountNodes.pageInfo.endCursor %}\n      {% else %}\n        {% break %}\n      {% endif %}\n    {% endfor %}\n\n    {% if discount_nodes == blank %}\n      {% log \"No expired code discounts qualified to be deleted on this task run.\" %}\n\n    {% else %}\n      {% comment %}\n        -- group discount nodes into groups of 250 for bulk deletion\n      {% endcomment %}\n\n      {% assign groups_of_discount_nodes = discount_nodes | in_groups_of: 250, fill_with: false %}\n\n      {% for group_of_discount_nodes in groups_of_discount_nodes %}\n        {% log\n          message: \"Deleting group of up to 250 code discounts.\",\n          count_of_discount_nodes_in_group: group_of_discount_nodes.size,\n          discount_nodes_in_group: group_of_discount_nodes\n        %}\n\n        {% action \"shopify\" %}\n          mutation {\n            discountCodeBulkDelete(\n              ids: {{ group_of_discount_nodes | map: \"id\" | graphql_arguments }}\n            ) {\n              job {\n                id\n              }\n              userErrors {\n                code\n                extraInfo\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endfor %}\n    {% endif %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/scheduler/daily",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/scheduler/daily\nmechanic/user/trigger",
  "tags": [
    "Bulk",
    "Delete",
    "Discounts"
  ]
}
