{
  "docs": "Removes the specified tags from all of your products, effectively deleting that tag from your store. Add multiple tags in a comma separated list. For example: sale,out of stock,promotion.",
  "halt_action_run_sequence_on_error": false,
  "name": "Remove tag from all products",
  "online_store_javascript": null,
  "options": {
    "tags_to_remove__required_array": [
      "example_tag"
    ]
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "preview_event_definitions": [],
  "script": "{% assign tags_list = options.tags_to_remove__required_array %}\n{% assign tagged_product_ids = array %}\n{% assign tags_query = array %} \n{% for tag in tags_list %} \n  {% assign tags_query[tags_query.size] = tag | json | prepend: \"tag:\" %} \n{% endfor %} \n{% assign tags_query = tags_query | join: \" OR \" %}\n\n{% for n in (0..100) %}\n  {% capture query %}\n    query {\n      products(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ tags_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"products\": {\n            \"edges\": [\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/Product/1234567890\"\n                }\n              },\n              {\n                \"node\": {\n                  \"id\": \"gid://shopify/Product/9876543210\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% assign products_result = result.data.products.edges | map: \"node\" | map: \"id\" %}\n  {% assign tagged_product_ids = tagged_product_ids | concat: products_result %}\n\n  {% if result.data.products.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.products.edges.last.cursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% for tagged_product_id in tagged_product_ids %}\n  {% action \"shopify\" %}\n    mutation {\n      tagsRemove(\n        id: {{ tagged_product_id | json }}\n        tags: {{ tags_list | json }}\n      ) {\n        node {\n          ... on Product {\n            tags\n          }\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n{% endfor %}",
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger",
  "tags": [
    "Products",
    "Tag"
  ]
}
