{
  "name": "Publish back-in-stock products",
  "options": {
    "sales_channel_names__required_array": null,
    "email_notification_recipient__email": ""
  },
  "subscriptions": [
    "shopify/inventory_levels/update"
  ],
  "subscriptions_template": "shopify/inventory_levels/update",
  "script": "{% if event.preview %}\n  {% assign inventory_level = hash %}\n  {% assign inventory_level[\"admin_graphql_api_id\"] = \"gid://shopify/InventoryLevel/14071693373?inventory_item_id=32830988484669\" %}\n{% endif %}\n\n{% capture query %}\n  query {\n    publications(first: 250) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% assign publication_ids = array %}\n\n{% for publication_edge in result.data.publications.edges %}\n  {% if options.sales_channel_names__required_array contains publication_edge.node.name %}\n    {% assign publication_ids[publication_ids.size] = publication_edge.node.id %}\n  {% endif %}\n{% endfor %}\n\n{% unless event.preview %}\n  {% assign available_channels = result.data.publications.edges | map: \"node\" | map: \"name\" %}\n  {% if publication_ids.size != options.sales_channel_names__required_array.size %}\n    {% error message: \"Didn't find all configured sales channels. Please check the list of available channels, and compare it with the list of configured channels.\", available_channels: available_channels, configured_channels: options.sales_channel_names__required_array %}\n  {% endif %}\n{% endunless %}\n\n{% if event.preview %}\n  {% assign publication_ids = array %}\n  {% assign publication_ids[0] = \"gid://shopify/Publication/1234567890\" %}\n{% endif %}\n\n{% capture query %}\n  query {\n    inventoryLevel(id: {{ inventory_level.admin_graphql_api_id | json }}) {\n      item {\n        variant {\n          product {\n            id\n            legacyResourceId\n            title\n            totalInventory\n\n            {% for publication_id in publication_ids %}\n              published{{ forloop.index }}: publishedOnPublication(publicationId: {{ publication_id | json }})\n            {% endfor %}\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"inventoryLevel\": {\n          \"item\": {\n            \"variant\": {\n              \"product\": {\n                \"id\": \"gid://shopify/Product/1234567890\",\n                \"legacyResourceId\": \"1234567890\",\n                \"title\": \"Short sleeve t-shirt\",\n                \"totalInventory\": 1,\n                \"published1\": false\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign product = result.data.inventoryLevel.item.variant.product %}\n\n{% assign mutations = array %}\n\n{% if product.totalInventory > 0 %}\n  {% for publication_id in publication_ids %}\n    {% assign published_key = \"published\" | append: forloop.index %}\n    {% if product[published_key] == false %}\n      {% capture mutation %}\n        publishablePublish{{ forloop.index}}: publishablePublish(\n          id: {{ product.id | json }}\n          input: {\n            publicationId: {{ publication_id | json }}\n          }\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      {% endcapture %}\n\n      {% assign mutations[mutations.size] = mutation %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% if mutations != empty %}\n  {% action \"shopify\" %}\n    mutation {\n      {{ mutations | join: newline }}\n    }\n  {% endaction %}\n\n  {% if options.email_notification_recipient__email != blank %}\n    {% capture email_subject %}\n      Back in stock: {{ product.title }}\n    {% endcapture %}\n\n    {% capture email_body %}\n      Visit https://{{ shop.domain }}/admin/products/{{ product.legacyResourceId }} to manage this product.\n\n      Thanks,\n      - Mechanic, for {{ shop.name }}\n    {% endcapture %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ options.email_notification_recipient__email | json }},\n        \"subject\": {{ email_subject | unindent | strip | json }},\n        \"body\": {{ email_body | unindent | strip | newline_to_br | json }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "Whenever inventory for a product is updated, this task compares its available inventory against your \"back in stock\" threshold. If the product is to be considered back in stock, this task will make sure it's published to the sales channels of your choice. Optionally, it'll send you an email when it publishes your product.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Inventory",
    "Products",
    "Publish"
  ]
}
