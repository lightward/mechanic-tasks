{
  "name": "Auto-tag products by age",
  "options": {
    "product_tags_and_age_threshold_in_days__keyval_number_required": {
      "new-this-week": "7",
      "new-this-month": "30"
    },
    "match_product_tags_by_minimum_age__boolean": false,
    "match_product_tags_by_maximum_age__boolean": true,
    "use_product_publish_times_instead_of_creation_times__boolean": true,
    "run_daily__boolean": null,
    "run_hourly__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\n{% if options.run_daily__boolean %}mechanic/scheduler/daily{% endif %}\n{% if options.run_hourly__boolean %}mechanic/scheduler/hourly{% endif %}\nmechanic/shopify/bulk_operation",
  "script": "{% comment %}\n  Preferred option order:\n\n  {{ options.product_tags_and_age_threshold_in_days__keyval_number_required }}\n  {{ options.match_product_tags_by_minimum_age__boolean }}\n  {{ options.match_product_tags_by_maximum_age__boolean }}\n  {{ options.use_product_publish_times_instead_of_creation_times__boolean }}\n{% endcomment %}\n\n{% if options.match_product_tags_by_minimum_age__boolean and options.match_product_tags_by_maximum_age__boolean %}\n  {% error \"Please choose either 'Match product tags by minimum age' or 'Match product tags by maximum age', but not both.\" %}\n{% elsif options.match_product_tags_by_minimum_age__boolean == false and options.match_product_tags_by_maximum_age__boolean == false %}\n  {% error \"Please choose either 'Match product tags by minimum age' or 'Match product tags by maximum age', but not both.\" %}\n{% endif %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% capture bulk_operation_query %}\n    query {\n      products {\n        edges {\n          node {\n            id\n            createdAt\n            publishedAt\n            tags\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign now_s = \"now\" | date: \"%s\" | times: 1 %}\n\n  {% if event.preview %}\n    {% assign preview_interval_s = options.product_tags_and_age_threshold_in_days__keyval_number_required.first.last | times: 24 | times: 60 | times: 60 %}\n\n    {% if options.match_product_tags_by_minimum_age__boolean %}\n      {% assign preview_time = now_s | minus: preview_interval_s | minus: 86400 | date: \"%Y-%m-%d\" %}\n    {% elsif options.match_product_tags_by_maximum_age__boolean %}\n      {% assign preview_time = now_s | minus: preview_interval_s | plus: 86400 | date: \"%Y-%m-%d\" %}\n    {% endif %}\n\n    {% capture bulkOperation_objects_jsonl %}\n      {\"id\":\"gid:\\/\\/shopify\\/Product\\/1234567890\",\"createdAt\":{{ preview_time | json }},\"publishedAt\":{{ preview_time | json }},\"tags\":[]}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% for product in bulkOperation.objects %}\n    {% assign product_timestamp_s = product.createdAt | date: \"%s\" | times: 1 %}\n    {% if options.use_product_publish_times_instead_of_creation_times__boolean %}\n      {% assign product_timestamp_s = product.publishedAt | date: \"%s\" | times: 1 %}\n    {% endif %}\n\n    {% assign product_age_d = now_s | minus: product_timestamp_s | divided_by: 86400 %}\n\n    {% assign tags_to_add = array %}\n    {% assign tags_to_remove = array %}\n\n    {% for keyval in options.product_tags_and_age_threshold_in_days__keyval_number_required %}\n      {% assign tag = keyval[0] %}\n      {% assign tag_age_threshold_d = keyval[1] %}\n\n      {% assign tag_age_threshold_met = false %}\n\n      {% comment %}\n        0 happens when we didn't have a valid datetime string to begin with. Happens\n        when there's no published_at value.\n      {% endcomment %}\n\n      {% if product_timestamp_s != 0 %}\n        {% if options.match_product_tags_by_minimum_age__boolean and product_age_d > tag_age_threshold_d %}\n          {% assign tag_age_threshold_met = true %}\n        {% elsif options.match_product_tags_by_maximum_age__boolean and product_age_d < tag_age_threshold_d %}\n          {% assign tag_age_threshold_met = true %}\n        {% endif %}\n      {% endif %}\n\n      {% comment %}\n        {% log product_id: product.id, product_age_d: product_age_d, tag: tag, tag_age_threshold_d: tag_age_threshold_d, tag_age_threshold_met: tag_age_threshold_met %}\n      {% endcomment %}\n\n      {% if tag_age_threshold_met %}\n        {% unless product.tags contains tag %}\n          {% assign tags_to_add[tags_to_add.size] = tag %}\n        {% endunless %}\n      {% else %}\n        {% if product.tags contains tag %}\n          {% assign tags_to_remove[tags_to_remove.size] = tag %}\n        {% endif %}\n      {% endif %}\n    {% endfor %}\n\n    {% if tags_to_add != empty or tags_to_remove != empty %}\n      {% action \"shopify\" %}\n        mutation {\n          {% if tags_to_add != empty %}\n            tagsAdd(\n              id: {{ product.id | json }}\n              tags: {{ tags_to_add | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n\n          {% if tags_to_remove != empty %}\n            tagsRemove(\n              id: {{ product.id | json }}\n              tags: {{ tags_to_remove | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          {% endif %}\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": "This task scans every product in your store, and adds or removes the tags you configure, according to how many days have passed since the product was created. (Or published, if you prefer!)\n\nEnable \"Use product publish times instead of creation times\" to have this task look at when the product was published to your online storefront, instead of when the product was created. When this option is enabled, unpublished products will have any of this task's tags removed.\n\nConfigure \"Product tags and age threshold in days\" with product tags on the left, and the product age (in days) to qualify on the right. Combine this setting with a choice between \"Match product tags by minimum age\" and \"Match product tags by maximum age\", to achieve tagging based on either minimum or maximum ages.\n\nFor example, a product tag of \"new-5\" with an age threshold of \"5\", combined with \"Match product tags by maximum age\" will be added to all products that were created/published within the last 5 days. Once a product ages beyond that threshold, running this task will remove that tag.\n\nRun this task manually to scan your store's products on demand, or configure the task to run daily or hourly.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Age",
    "Auto-Tag",
    "Products"
  ]
}
