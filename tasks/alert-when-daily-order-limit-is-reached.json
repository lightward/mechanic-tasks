{
  "docs": "Use this task to receive an alert when your store reaches a maximum number of orders per day. Unlike inventory-limiting tasks, this task only sends notifications without making any changes to your store's inventory or product availability.\n\nThe task monitors incoming orders throughout the day and sends an email alert when your daily limit is reached. It automatically resets its count at midnight in your store's timezone.\n\n### Features\n\n* Send an alert when the daily maximum is reached\n* Customizable email subject and body with placeholder variables\n* Optionally filter which orders to count using Shopify's order search syntax\n* Automatic daily reset at midnight\n* Multiple notification recipients supported\n\n### Email Template Variables\n\nYou can use these placeholder variables in your email templates:\n* `ORDERS_TODAY` - Current order count\n* `MAXIMUM_DAILY_ORDERS` - Your configured daily limit\n* `ORDER_NUMBER` - The order number that triggered the alert (e.g., #1234)\n\nYou can also use standard Liquid variables like `{{ shop.name }}` and `{{ shop.domain }}`.\n\n### Setup\n\n1. Set your maximum daily orders limit\n2. Enter email addresses for notifications (comma-separated for multiple recipients)\n3. Customize the email subject and body templates\n4. Optionally add an order query to count only specific orders\n\n### Notes\n\n* The task counts all orders by default, but you can filter using the same syntax as Shopify's order search (e.g., \"-status:cancelled\" to exclude cancelled orders)\n* The alert is sent only once per day when the limit is reached\n* The count resets at midnight in your store's timezone\n* Use the \"Run task\" button to manually check the current order count",
  "halt_action_run_sequence_on_error": false,
  "name": "Alert when daily order limit is reached",
  "online_store_javascript": null,
  "options": {
    "maximum_daily_orders__number_required": "10",
    "notification_email_recipients__email_array_required": null,
    "only_count_orders_matching_this_query": "-status:cancelled",
    "email_subject__required": "Daily order limit reached: ORDERS_TODAY orders",
    "email_body__multiline_required": "Hello,\n\nYour store has reached its daily order limit.\n\nOrders today: ORDERS_TODAY\nDaily limit: MAXIMUM_DAILY_ORDERS\nLatest order: ORDER_NUMBER\n\nThe order counter will reset at midnight.\n\nThanks,\n{{ shop.name }}"
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% comment %}\n  Options order:\n\n  {{ options.maximum_daily_orders__number_required }}\n  {{ options.notification_email_recipients__email_array_required }}\n  {{ options.only_count_orders_matching_this_query }}\n  {{ options.email_subject__required }}\n  {{ options.email_body__multiline_required }}\n{% endcomment %}\n\n{% if options.maximum_daily_orders__number_required <= 0 %}\n  {% error \"'Maximum daily orders' must be at least 1.\" %}\n{% endif %}\n\n{% if options.notification_email_recipients__email_array_required == blank %}\n  {% error \"At least one notification email recipient is required.\" %}\n{% endif %}\n\n{% comment %}\n  Cache key for tracking if alert was sent today\n{% endcomment %}\n{% assign alert_sent_cache_key = \"alert_sent:\" | append: task.id %}\n{% assign alert_already_sent = cache[alert_sent_cache_key] | default: false %}\n\n{% assign previous_midnight = \"now\" | date: \"%Y-%m-%dT00:00:00%z\" %}\n{% assign previous_midnight_s = previous_midnight | date: \"%s\" %}\n\n{% if event.topic == \"shopify/orders/create\" or event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    Count orders for today\n  {% endcomment %}\n  {% assign cursor = nil %}\n  {% assign orders_today = 0 %}\n  {% assign recent_orders = array %}\n\n  {% capture orders_query %}\n    created_at:>={{ previous_midnight | json }} {{ options.only_count_orders_matching_this_query }}\n  {% endcapture %}\n\n  {% assign orders_query = orders_query | strip %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        orders(\n          first: 250\n          after: {{ cursor | json }}\n          query: {{ orders_query | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n            endCursor\n          }\n          nodes {\n            id\n            name\n            email\n            totalPriceSet {\n              shopMoney {\n                amount\n                currencyCode\n              }\n            }\n            createdAt\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% comment %}\n        Generate preview data to simulate reaching the limit\n      {% endcomment %}\n      {% assign alert_already_sent = false %}\n      {% assign orders_today = options.maximum_daily_orders__number_required %}\n      \n      {% capture result_json %}\n        {\n          \"data\": {\n            \"orders\": {\n              \"pageInfo\": {\n                \"hasNextPage\": false\n              },\n              \"nodes\": [\n                {\n                  \"id\": \"gid://shopify/Order/1234567890\",\n                  \"name\": \"#1001\",\n                  \"email\": \"\",\n                  \"totalPriceSet\": {\n                    \"shopMoney\": {\n                      \"amount\": \"99.99\",\n                      \"currencyCode\": \"USD\"\n                    }\n                  },\n                  \"createdAt\": \"{{ previous_midnight | date: \"%Y-%m-%dT%H:%M:%S%z\" }}\"\n                }\n              ]\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n      {% break %}\n    {% endif %}\n\n    {% comment %}\n      Store the last 5 orders for inclusion in alerts if requested\n    {% endcomment %}\n    {% for order in result.data.orders.nodes %}\n      {% if recent_orders.size < 5 %}\n        {% assign recent_orders = recent_orders | push: order %}\n      {% endif %}\n    {% endfor %}\n\n    {% assign orders_today = orders_today | plus: result.data.orders.nodes.size %}\n\n    {% if result.data.orders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.orders.pageInfo.endCursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n\n  {% log \n    message: \"Daily order count check\",\n    orders_today: orders_today,\n    maximum_daily_orders: options.maximum_daily_orders__number_required,\n    percentage_of_limit: orders_today | times: 100.0 | divided_by: options.maximum_daily_orders__number_required,\n    orders_query: orders_query,\n    alert_already_sent: alert_already_sent\n  %}\n\n  {% comment %}\n    Check if we need to send the limit reached alert\n  {% endcomment %}\n  {% if orders_today >= options.maximum_daily_orders__number_required and alert_already_sent == false and event.topic == \"shopify/orders/create\" %}\n    {% comment %}\n      Get the current triggering order name (if available)\n    {% endcomment %}\n    {% assign order_number = order.name | default: recent_orders.last.name | default: \"#\" | append: orders_today %}\n    \n    {% comment %}\n      Replace placeholders in email templates\n    {% endcomment %}\n    {% assign orders_today_string = orders_today | json | remove: '\"' %}\n    {% assign maximum_daily_orders_string = options.maximum_daily_orders__number_required | json | remove: '\"' %}\n    \n    {% assign email_subject = options.email_subject__required | replace: \"ORDERS_TODAY\", orders_today_string | replace: \"MAXIMUM_DAILY_ORDERS\", maximum_daily_orders_string | replace: \"ORDER_NUMBER\", order_number %}\n    {% assign email_body = options.email_body__multiline_required | replace: \"ORDERS_TODAY\", orders_today_string | replace: \"MAXIMUM_DAILY_ORDERS\", maximum_daily_orders_string | replace: \"ORDER_NUMBER\", order_number %}\n\n    {% for email_recipient in options.notification_email_recipients__email_array_required %}\n      {% action \"email\" %}\n        {\n          \"to\": {{ email_recipient | json }},\n          \"subject\": {{ email_subject | strip | json }},\n          \"body\": {{ email_body | strip | newline_to_br | json }},\n          \"from_display_name\": {{ shop.name | json }},\n          \"reply_to\": {{ shop.customer_email | json }}\n        }\n      {% endaction %}\n    {% endfor %}\n\n    {% comment %}\n      Mark alert as sent for today\n    {% endcomment %}\n    {% action \"cache\", \"set\", alert_sent_cache_key, true %}\n  {% endif %}\n\n  {% if event.topic == \"mechanic/user/trigger\" %}\n    {% comment %}\n      Manual trigger - always send a status update\n    {% endcomment %}\n    {% assign percentage_of_limit = orders_today | times: 100.0 | divided_by: options.maximum_daily_orders__number_required %}\n    {% capture status_email_body %}\n      <h2>Current Daily Order Status</h2>\n      <p><strong>Orders today:</strong> {{ orders_today }} / {{ options.maximum_daily_orders__number_required }}</p>\n      <p><strong>Percentage:</strong> {{ percentage_of_limit | round: 1 }}%</p>\n      <p><strong>Alert sent today:</strong> {% if alert_already_sent %}Yes{% else %}No{% endif %}</p>\n      <p><strong>Time period:</strong> Since {{ previous_midnight | date: \"%Y-%m-%d %H:%M\" }}</p>\n      <p><em>Order query: {{ orders_query }}</em></p>\n    {% endcapture %}\n\n    {% for email_recipient in options.notification_email_recipients__email_array_required %}\n      {% action \"email\" %}\n        {\n          \"to\": {{ email_recipient | json }},\n          \"subject\": \"Daily Order Status Report: {{ orders_today }} of {{ options.maximum_daily_orders__number_required }}\",\n          \"body\": {{ status_email_body | json }},\n          \"from_display_name\": {{ shop.name | json }}\n        }\n      {% endaction %}\n    {% endfor %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/scheduler/daily\" %}\n  {% comment %}\n    Daily reset - clear the alert sent cache\n  {% endcomment %}\n  {% action \"cache\", \"del\", alert_sent_cache_key %}\n  {% log message: \"Daily order alert counter reset\", cache_key_cleared: alert_sent_cache_key %}\n{% endif %}",
  "subscriptions": [
    "shopify/orders/create",
    "mechanic/scheduler/daily",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/create\nmechanic/scheduler/daily\nmechanic/user/trigger",
  "tags": [
    "Alert",
    "Email",
    "Orders"
  ]
}
