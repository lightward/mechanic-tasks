{
  "docs": "A utility task, this one is useful for those one-off moments when your inventory needs a clean slate. Run this task manually to reset all of your inventory, across your entire store and for all locations, to the single level of your choice. No exceptions, no filters.",
  "halt_action_run_sequence_on_error": false,
  "name": "Reset all inventory levels to a single level, in bulk",
  "online_store_javascript": null,
  "options": {
    "reset_all_inventory_items_to_this_level__number_required": 0
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign reset_level = options.reset_all_inventory_items_to_this_level__number_required  %}\n\n{% if event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      inventoryItems {\n        edges {\n          node {\n            __typename\n            id\n            inventoryLevels {\n              edges {\n                node {\n                  __typename\n                  id\n                  location {\n                    id\n                  }\n                  quantities(names: \"available\") {\n                    name\n                    quantity\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_objects_jsonl %}\n      {\"__typename\":\"InventoryItem\",\"id\":\"gid:\\/\\/shopify\\/InventoryItem\\/1234567890\"}\n      {\"__typename\":\"InventoryLevel\",\"location\":{\"id\":\"gid:\\/\\/shopify\\/Location\\/1234567890\"},\"quantities\":[{\"name\":\"available\",\"quantity\":{{ reset_level | minus: 5 }}}],\"__parentId\":\"gid:\\/\\/shopify\\/InventoryItem\\/1234567890\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% assign bulk_inventory_items = bulkOperation.objects | where: \"__typename\", \"InventoryItem\" %}\n  {% assign bulk_inventory_levels = bulkOperation.objects | where: \"__typename\", \"InventoryLevel\" %}\n\n  {% assign inventory_adjustments = array %}\n\n  {% for inventory_item in bulk_inventory_items %}\n    {% assign inventory_levels = bulk_inventory_levels | where: \"__parentId\", inventory_item.id %}\n\n    {% for inventory_level in inventory_levels %}\n      {% if inventory_level.quantities.first.quantity != reset_level %}\n        {% assign inventory_adjustment = hash %}\n        {% assign inventory_adjustment[\"inventoryItemId\"] = inventory_item.id %}\n        {% assign inventory_adjustment[\"locationId\"] = inventory_level.location.id %}\n        {% assign inventory_adjustment[\"delta\"] = reset_level | minus: inventory_level.quantities.first.quantity %}\n        {% assign inventory_adjustments = inventory_adjustments | push: inventory_adjustment %}\n      {% endif %}\n    {% endfor %}\n  {% endfor %}\n\n  {% if inventory_adjustments != blank %}\n    {% assign groups_of_inventory_adjustments = inventory_adjustments | in_groups_of: 250, fill_with: false %}\n\n    {% for group_of_inventory_adjustments in groups_of_inventory_adjustments %}\n      {% action \"shopify\" %}\n        mutation {\n          inventoryAdjustQuantities(\n            input: {\n              reason: \"correction\"\n              name: \"available\"\n              changes: {{ group_of_inventory_adjustments | graphql_arguments }}\n            }\n          ) {\n            inventoryAdjustmentGroup {\n              reason\n              changes {\n                name\n                delta\n                quantityAfterChange\n                item {\n                  id\n                  sku\n                }\n                location {\n                  name\n                }\n              }\n            }\n            userErrors {\n              code\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endfor %}\n  {% endif %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Inventory"
  ]
}
