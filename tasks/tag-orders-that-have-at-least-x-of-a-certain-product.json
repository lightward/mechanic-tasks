{
  "name": "Tag orders that have at least x of a certain product",
  "options": {
    "minimum_quantity_threshold__number_required": null,
    "evaluate_threshold_per_line_item__boolean": false,
    "only_monitor_these_skus__array": null,
    "order_tag_to_apply": null,
    "email_notification_recipient__email": null
  },
  "subscriptions": [
    "shopify/orders/paid"
  ],
  "subscriptions_template": "shopify/orders/paid",
  "script": "{% comment %}\n  Option order:\n\n  {{ options.minimum_quantity_threshold__number_required }}\n  {{ options.evaluate_threshold_per_line_item__boolean }}\n  {{ options.only_monitor_these_skus__array }}\n  {{ options.order_tag_to_apply }}\n  {{ options.email_notification_recipient__email }}\n{% endcomment %}\n\n{% if event.preview %}\n  {% capture order_json %}\n    {\n      \"id\": 1234567890,\n      \"admin_graphql_api_id\": \"gid://shopify/Order/1234567890\",\n      \"name\": \"#1234\",\n      \"line_items\": [\n        {\n          \"sku\": {{ options.only_monitor_these_skus__array[0] | default: \"ABC123\" | json }},\n          \"quantity\": {{ options.minimum_quantity_threshold__number_required | json }},\n          \"title\": \"Short sleeve t-shirt\"\n        }\n      ]\n    }\n  {% endcapture %}\n\n  {% assign order = order_json | parse_json %}\n{% endif %}\n\n{% if options.order_tag_to_apply == blank and options.email_notification_recipient__email == blank %}\n  {% error \"Fill in at least one of 'Order tag to apply' and 'Email notification recipient'. :)\" %}\n{% endif %}\n\n{% assign line_item_summaries = array %}\n{% assign skus = array %}\n{% assign total_quantity = 0 %}\n{% assign total_line_items = 0 %}\n{% assign order_qualifies = false %}\n\n{% for line_item in order.line_items %}\n  {% if options.only_monitor_these_skus__array == blank or options.only_monitor_these_skus__array contains line_item.sku %}\n    {% assign total_quantity = total_quantity | plus: line_item.quantity %}\n\n    {% assign line_item_qualifies = false %}\n    {% if options.evaluate_threshold_per_line_item__boolean %}\n      {% if line_item.quantity >= options.minimum_quantity_threshold__number_required %}\n        {% assign line_item_qualifies = true %}\n      {% endif %}\n    {% else %}\n      {% assign line_item_qualifies = true %}\n    {% endif %}\n\n    {% if line_item_qualifies %}\n      {% assign total_line_items = total_line_items | plus: 1 %}\n\n      {% unless options.only_monitor_these_skus__array == blank %}\n        {% assign skus[skus.size] = line_item.sku %}\n      {% endunless %}\n\n      {% assign line_item_summaries[line_item_summaries.size] = line_item.quantity | append: \"x \" | append: line_item.sku | append: \" (\" | append: line_item.title | append: \")\" %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n\n{% if options.evaluate_threshold_per_line_item__boolean %}\n  {% if line_item_summaries != blank %}\n    {% assign order_qualifies = true %}\n  {% endif %}\n{% else %}\n  {% if total_quantity >= options.minimum_quantity_threshold__number_required %}\n    {% assign order_qualifies = true %}\n  {% endif %}\n{% endif %}\n\n{% if order_qualifies %}\n  {% if options.order_tag_to_apply != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        tagsAdd(\n          id: {{ order.admin_graphql_api_id | json }}\n          tags: {{ options.order_tag_to_apply | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endaction %}\n  {% endif %}\n\n  {% if options.email_notification_recipient__email != blank %}\n    {% capture at_least_x -%}\n      at least {{ options.minimum_quantity_threshold__number_required }} {% if total_line_items > 1 %}{% if options.evaluate_threshold_per_line_item__boolean %} each{% else %}total{% endif %}{% endif %}\n    {%- endcapture %}\n\n    {% capture email_body %}\n      Hi there,\n\n      Order {{ order.name }} contained {{ at_least_x }} of {{ total_line_items | pluralize: \"this item\", \"these items\" }}:\n\n      {{ line_item_summaries | join: \"<br>\" }}\n\n      See this order in Shopify:\n\n      https://{{ shop.domain }}/admin/orders/{{ order.id }}\n\n      Thanks,\n      Mechanic, for {{ shop.name }}\n    {% endcapture %}\n\n    {% if options.only_monitor_these_skus__array == blank %}\n      {% assign qualifying_items_addendum = \"items\" %}\n    {% else %}\n      {% assign qualifying_items_addendum = skus | join: \", \" | prepend: \"of \" %}\n    {% endif %}\n\n    {% action \"email\" %}\n      {\n        \"to\": {{ options.email_notification_recipient__email | json }},\n        \"subject\": {{ \"Order \" | append: order.name | append: \" contained \" | append: at_least_x | append: \" \" | append: qualifying_items_addendum | strip | json }},\n        \"body\": {{ email_body | unindent | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n  {% endif %}\n{% endif %}",
  "docs": "Use this task to monitor for orders that meet a certain quantity threshold, per line item or totaled up, optionally only looking at certain SKUs. Optionally, send yourself an email notification when such an order comes in.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Orders"
  ]
}
