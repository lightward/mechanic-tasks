{
  "name": "Auto-tag orders from recurring client IP addresses",
  "options": {
    "days_of_order_history_to_scan__number": 3,
    "threshold_order_count_per_ip_address__number_required": 2,
    "order_tag_to_apply__required": null,
    "run_every_10_minutes__boolean": false,
    "run_hourly__boolean": false,
    "run_daily__boolean": false
  },
  "subscriptions": [
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "mechanic/user/trigger\n\n{% if options.run_every_10_minutes__boolean %}\n  mechanic/scheduler/10min\n{% elsif options.run_hourly__boolean %}\n  mechanic/scheduler/hourly\n{% elsif options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}",
  "script": "{% assign orders_query = nil %}\n\n{% if options.days_of_order_history_to_scan__number != blank %}\n  {% assign days_s = 60 | times: 60 | times: 24 | times: options.days_of_order_history_to_scan__number %}\n  {% assign beginning_date = \"now\" | date: \"%s\" | minus: days_s | date: \"%FT%T%:z\" %}\n  {% assign orders_query = beginning_date | json | prepend: \"processed_at:>=\" %}\n{% endif %}\n\n{% log orders_query: orders_query %}\n\n{% assign cursor = nil %}\n{% assign orders_by_ip = hash %}\n\n{% for n in (0..100) %}\n  {% capture query %}\n    query {\n      orders(\n        first: 250\n        after: {{ cursor | json }}\n        query: {{ orders_query | json }}\n      ) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            tags\n            clientIp\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% if event.preview %}\n    {% capture result_json %}\n      {\n        \"data\": {\n          \"orders\": {\n            \"edges\": [\n              {% for n in (0..options.threshold_order_count_per_ip_address__number_required) %}\n                {\n                  \"node\": {\n                    \"id\": \"gid://shopify/Order/1234567890\",\n                    \"tags\": [],\n                    \"clientIp\": \"0.0.0.0\"\n                  }\n                }\n                {% unless forloop.last %},{% endunless %}\n              {% endfor %}\n            ]\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = result_json | parse_json %}\n  {% endif %}\n\n  {% for order_edge in result.data.orders.edges %}\n    {% assign order = order_edge.node %}\n    {% if order.clientIp == blank %}\n      {% continue %}\n    {% endif %}\n\n    {% if orders_by_ip[order.clientIp] == nil %}\n      {% assign orders_by_ip[order.clientIp] = array %}\n    {% endif %}\n\n    {% assign ip_count = orders_by_ip[order.clientIp].size %}\n\n    {% assign orders_by_ip[order.clientIp][ip_count] = order %}\n  {% endfor %}\n\n  {% if result.data.orders.pageInfo.hasNextPage %}\n    {% assign cursor = result.data.orders.edges.last.cursor %}\n  {% else %}\n    {% break %}\n  {% endif %}\n{% endfor %}\n\n{% log orders_by_ip: orders_by_ip %}\n\n{% assign order_ids_to_tag = array %}\n\n{% for pair in orders_by_ip %}\n  {% assign ip = pair[0] %}\n  {% assign orders = pair[1] %}\n\n  {% if orders.size >= options.threshold_order_count_per_ip_address__number_required %}\n    {% for order in orders %}\n      {% unless order.tags contains options.order_tag_to_apply__required %}\n        {% assign order_ids_to_tag[order_ids_to_tag.size] = order.id %}\n      {% endunless %}\n    {% endfor %}\n  {% endif %}\n{% endfor %}\n\n{% for id in order_ids_to_tag %}\n  {% action \"shopify\" %}\n    mutation {\n      tagsAdd(\n        id: {{ id | json }}\n        tags: {{ options.order_tag_to_apply__required | json }}\n      ) {\n        node {\n          ... on Order {\n            name\n            processedAt\n            clientIp\n            tags\n          }\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n  {% if event.preview %}\n    {% break %}\n  {% endif %}\n{% endfor %}",
  "docs": "Use this task to regularly scan for repeat orders from a single IP address, by tagging any orders from an IP address that's placed more than a configurable threshold of orders in the last x days of order history.\n\nThis task works via manual or scheduled scans of order history - it does not run immediately when orders are created. Instead, whenever it runs, it scans the last x days of order history, tagging orders that come from an IP address whose order count has met or exceeded your threshold.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Orders",
    "Risk"
  ]
}
