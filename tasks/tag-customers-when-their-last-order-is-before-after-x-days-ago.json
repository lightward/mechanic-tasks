{
  "docs": "Running daily or manually, this task scans all customers who have placed orders and tags them based on the date of their last order. Choose between tagging customers whose orders are before x days ago, or after x days ago.",
  "halt_action_run_sequence_on_error": false,
  "name": "Tag customers when their last order is before/after x days ago",
  "online_store_javascript": null,
  "options": {
    "days_since_last_order__required_number": 7,
    "tag_customers_when_last_order_is_after__boolean": true,
    "tag_customers_when_last_order_is_before__boolean": null,
    "customer_tag__required": "recent-customer",
    "run_daily__boolean": false
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign days_since_last_order = options.days_since_last_order__required_number %}\n{% assign tag_customers_when_last_order_is_after = options.tag_customers_when_last_order_is_after__boolean %}\n{% assign tag_customers_when_last_order_is_before = options.tag_customers_when_last_order_is_before__boolean %}\n{% assign customer_tag_to_apply = options.customer_tag_to_apply__required %}\n\n{% if tag_customers_when_last_order_is_after and tag_customers_when_last_order_is_before %}\n  {% error \"Choose only one of 'Tag customers when last order is after' or 'Tag customers when last order is before' :)\" %}\n{% endif %}\n\n{% unless tag_customers_when_last_order_is_after or tag_customers_when_last_order_is_before %}\n  {% error \"Choose either 'Tag customers when last order is after' or 'Tag customers when last order is before'\" %}\n{% endunless %}\n\n{% capture advance_period -%}\n  -{{ days_since_last_order }} days\n{%- endcapture %}\n\n{% assign order_processed_at_threshold = \"now\" | date: \"%F\", advance: advance_period %}\n\n{% if tag_customers_when_last_order_is_after %}\n  {% log %}\n    \"Threshold for tagging customers: {{ order_processed_at_threshold }} and after\"\n  {% endlog %}\n\n{% elsif tag_customers_when_last_order_is_before %}\n  {% log %}\n    \"Threshold for tagging customers: {{ order_processed_at_threshold }} and before\"\n  {% endlog %}\n{% endif %}\n\n{% if event.topic == \"mechanic/user/trigger\" or event.topic contains \"mechanic/scheduler/\" %}\n  {% comment %}\n    -- get IDs of all customers who have placed an order after or before the threshold, and/or have the configured tag\n    -- due to limited data in customer segments, the bulk op query only serves to reduce the overall count of customers being reviewed\n  {% endcomment %}\n\n  {% if tag_customers_when_last_order_is_after %}\n    {% capture customer_segment_query -%}\n      last_order_date >= {{ order_processed_at_threshold }} OR customer_tags CONTAINS '{{ customer_tag_to_apply }}'\n    {%- endcapture %}\n\n  {% elsif tag_customers_when_last_order_is_before %}\n    {% capture customer_segment_query -%}\n      last_order_date <= {{ order_processed_at_threshold }} OR customer_tags CONTAINS '{{ customer_tag_to_apply }}'\n    {%- endcapture %}\n  {% endif %}\n\n  {% capture bulk_operation_query %}\n    query {\n      customerSegmentMembers(\n        query: {{ customer_segment_query | json }}\n      ) {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"id\":\"gid:\\/\\/shopify\\/CustomerSegmentMember\\/1234567890\"}\n      {\"id\":\"gid:\\/\\/shopify\\/CustomerSegmentMember\\/2345678901\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign customer_segment_member_ids = bulkOperation.objects | map: \"id\" %}\n\n  {% comment %}\n    -- get tags and last order data from customer resource, since it's not available in customer segments\n  {% endcomment %}\n\n  {% for customer_segment_member_id in customer_segment_member_ids %}\n    {% assign customer_should_be_tagged = nil %}\n\n    {% capture query %}\n      query {\n        customer(id: {{ customer_segment_member_id | remove: \"SegmentMember\" | json }}) {\n          id\n          tags\n          lastOrder {\n            processedAt\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% if event.preview %}\n      {% capture result_json %}\n        {\n          \"data\": {\n            \"customer\": {\n              \"id\": \"gid://shopify/Customer/1234567890\",\n              \"lastOrder\": {\n                {% if tag_customers_when_last_order_is_after %}\n                  \"processedAt\": {{ \"now\" | date: \"%F\" | json }}\n                {% elsif tag_customers_when_last_order_is_before %}\n                  \"processedAt\": \"2000-01-01\"\n                {% endif %}\n              }\n            }\n          }\n        }\n      {% endcapture %}\n\n      {% assign result = result_json | parse_json %}\n    {% endif %}\n\n    {% assign customer = result.data.customer %}\n    {% assign customer_last_order_processed_at = customer.lastOrder.processedAt | date: \"%F\" %}\n\n    {% if tag_customers_when_last_order_is_after and customer_last_order_processed_at >= order_processed_at_threshold %}\n      {% assign customer_should_be_tagged = true %}\n    {% elsif tag_customers_when_last_order_is_before and customer_last_order_processed_at <= order_processed_at_threshold %}\n      {% assign customer_should_be_tagged = true %}\n    {% endif %}\n\n    {% comment %}\n      -- add and remove customer tags as needed\n    {% endcomment %}\n\n    {% if customer_should_be_tagged %}\n      {% unless customer.tags contains customer_tag_to_apply %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ customer.id | json }}\n              tags: {{ customer_tag_to_apply | json }}\n            ) {\n              node {\n                ... on Customer {\n                  id\n                  email\n                  tags\n                  lastOrder {\n                    name\n                    processedAt\n                  }\n                }\n              }\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n\n    {% else %}\n      {% if customer.tags contains customer_tag_to_apply %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsRemove(\n              id: {{ customer.id | json }}\n              tags: {{ customer_tag_to_apply | json }}\n            ) {\n              node {\n                ... on Customer {\n                  id\n                  email\n                  tags\n                  lastOrder {\n                    name\n                    processedAt\n                  }\n                }\n              }\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n",
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation\n{% if options.run_daily__boolean %}\n  mechanic/scheduler/daily\n{% endif %}",
  "tags": [
    "Auto-Tag",
    "Customers",
    "Loyalty"
  ]
}
