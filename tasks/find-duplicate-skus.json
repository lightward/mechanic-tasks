{
  "name": "Find duplicate SKUs",
  "options": {
    "exclude_products_that_do_not_track_inventory__boolean": null
  },
  "subscriptions": [
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "mechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% if event.topic == \"mechanic/user/trigger\" %}\n  {% assign search_query = \"-sku:''\" %}\n\n  {% if options.exclude_products_that_do_not_track_inventory__boolean %}\n    {% assign search_query = search_query | append: \" managed:true\" %}\n  {% endif %}\n\n  {% capture bulk_operation_query %}\n    query {\n      productVariants(\n        query: {{ search_query | json }}\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            sku\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture jsonl_string %}\n      {\"__typename\":\"ProductVariant\",\"id\":\"gid://shopify/ProductVariant/1234567890\",\"sku\":\"ABC123\"}\n      {\"__typename\":\"ProductVariant\",\"id\":\"gid://shopify/ProductVariant/2345678901\",\"sku\":\"ABC123\"}\n      {\"__typename\":\"ProductVariant\",\"id\":\"gid://shopify/ProductVariant/3456789012\",\"sku\":\"DEF456\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = jsonl_string | parse_jsonl %}\n  {% endif %}\n\n  {% assign variants = bulkOperation.objects | where: \"__typename\", \"ProductVariant\" %}\n\n  {% assign skus_by_variant_id = hash %}\n\n  {% for variant in variants %}\n    {% assign skus_by_variant_id[variant.id] = variant.sku %}\n  {% endfor %}\n\n  {% assign all_skus = skus_by_variant_id | values %}\n  {% assign unique_skus = all_skus | uniq %}\n\n  {% if all_skus.size == unique_skus.size %}\n    {% comment %}\n      No exact duplicate SKUs, so let's end execution early\n    {% endcomment %}\n    {% log message: \"No duplicate SKUs found! :)\" %}\n    {% break %}\n  {% endif %}\n\n  {% assign variant_ids_by_duplicate_sku = hash %}\n\n  {% for pair in skus_by_variant_id %}\n    {% assign variant_id = pair[0] %}\n    {% assign sku = pair[1] %}\n    {% assign sku_count = 0 %}\n\n    {% for some_sku in all_skus %}\n      {% if some_sku == sku %}\n        {% assign sku_count = sku_count | plus: 1 %}\n      {% endif %}\n    {% endfor %}\n\n    {% if sku_count == 1 %}\n      {% comment %}\n        Ignore SKUs that only occur once.\n      {% endcomment %}\n      {% continue %}\n    {% endif %}\n\n    {% assign variant_ids_by_duplicate_sku[sku] = variant_ids_by_duplicate_sku[sku] | default: array | push: variant_id %}\n  {% endfor %}\n\n  {% assign duplicate_skus = variant_ids_by_duplicate_sku | keys %}\n\n  {% log\n    message: \"Found duplicate SKU(s)\",\n    duplicate_skus_size: duplicate_skus.size,\n    duplicate_skus: duplicate_skus,\n    variant_ids_by_duplicate_sku: variant_ids_by_duplicate_sku\n  %}\n{% endif %}",
  "docs": "This task scans your entire product list, looking for duplicate SKUs using exact matching, and returning the list of duplicate SKUs (and the associated product variant IDs) if any are found.\n\nNote: SKUs that are identical apart from being uppercase/lowercase, for example, do not count as exact matches, and would not be considered duplicates by this task.\n\n\"Exclude products that do not track inventory\" will exclude any product whose inventory is not tracked in Shopify.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Products",
    "SKU"
  ]
}
