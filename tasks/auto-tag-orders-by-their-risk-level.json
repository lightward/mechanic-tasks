{
  "name": "Auto-tag orders by their risk level",
  "options": {
    "risk_levels_and_tags__keyval_required": {
      "Low": "low-risk",
      "Medium": "medium-risk",
      "High": "high-risk"
    }
  },
  "subscriptions": [
    "shopify/orders/updated",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/updated\nmechanic/user/trigger",
  "script": "{% assign valid_risk_level_keys = \"Low,Medium,High\" | split: \",\" %}\n{% for keyval in options.risk_levels_and_tags__keyval_required %}\n  {% assign some_risk_level_key = keyval[0] | capitalize %}\n  {% unless some_risk_level_key == blank or valid_risk_level_keys contains some_risk_level_key %}\n    {\"error\": {{ keyval[0] | json | prepend: \"Unknown risk level \" | append: \". Valid risk level values: low, medium, high\" | json }}}\n  {% endunless %}\n{% endfor %}\n\n{% assign order_nodes = array %}\n\n{% if event.preview %}\n  {% assign order_nodes[0] = '{\"id\":\"gid://shopify/Order/1234567890\",\"tags\":[]}' | parse_json %}\n  {% assign order_nodes[0][\"riskLevel\"] = options.risk_levels_and_tags__keyval_required.first[0] | upcase %}\n{% elsif event.topic == \"shopify/orders/updated\" %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        tags\n        riskLevel\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n  {% assign order_nodes[0] = result.data.order %}\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% assign cursor = nil %}\n\n  {% for n in (0..100) %}\n    {% capture query %}\n      query {\n        orders(\n          first: 250\n          after: {{ cursor | json }}\n        ) {\n          pageInfo {\n            hasNextPage\n          }\n          edges {\n            cursor\n            node {\n              id\n              tags\n              riskLevel\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign result = query | shopify %}\n\n    {% assign order_nodes = result.data.orders.edges | map: \"node\" | concat: order_nodes %}\n\n    {% if result.data.orders.pageInfo.hasNextPage %}\n      {% assign cursor = result.data.orders.edges.last.cursor %}\n    {% else %}\n      {% break %}\n    {% endif %}\n  {% endfor %}\n{% endif %}\n\n{% for order_node in order_nodes %}\n  {% assign tag_to_add = nil %}\n  {% assign tags_to_remove = array %}\n\n  {% assign risk_level_key = order_node.riskLevel | capitalize %}\n  {% for keyval in options.risk_levels_and_tags__keyval_required %}\n    {% assign some_risk_level_key = keyval[0] | capitalize %}\n\n    {% if risk_level_key == some_risk_level_key %}\n      {% if order_node.tags contains keyval[1] %}\n        {\"log\": {{ order_node.id | prepend: \"Order \" | append: \" is already appropriately tagged \" | append: keyval[1] | json }}}\n      {% else %}\n        {% assign tag_to_add = keyval[1] %}\n      {% endif %}\n    {% elsif order_node.tags contains keyval[1] %}\n      {% assign tags_to_remove[tags_to_remove.size] = keyval[1] %}\n    {% endif %}\n  {% endfor %}\n\n  {% if tag_to_add != blank or tags_to_remove != empty %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tag_to_add != blank %}\n          tagsAdd(\n            id: {{ order_node.id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n\n        {% if tags_to_remove != empty %}\n          tagsRemove(\n            id: {{ order_node.id | json }}\n            tags: {{ tags_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}",
  "docs": "This task applies the tag of your choice to incoming orders, based on the risk level determined for the order. Run this task manually to tag all orders in your store's records, according to their respective risk levels. Combine this task with an email task, to email customers when their order is flagged.\n\nThis task applies the tag of your choice to incoming orders, based on the risk level determined for the order.\r\n\r\nRun this task manually to tag all orders in your store's records, according to their respective risk levels.\r\n\r\nCombine this task with [\"Email customers when their order is tagged\"](https://usemechanic.com/task/email-customer-when-order-tagged) to alert customers when their order is flagged.\r\n\r\nFeel free to remove a tag from this task's options, if you don't need it. :)",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Orders",
    "Risk"
  ]
}
