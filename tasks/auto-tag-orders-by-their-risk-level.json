{
  "docs": "This task applies the tag of your choice to orders, based on the highest risk level for each order. Run this task manually to tag all open orders in your shop, according to their respective risk levels.\n\nValid risk levels: LOW, MEDIUM, HIGH.\n\nFeel free to remove a tag from this task's options, if you don't need it. :)",
  "halt_action_run_sequence_on_error": false,
  "name": "Auto-tag orders by their risk level",
  "online_store_javascript": null,
  "options": {
    "risk_levels_and_tags__keyval_required": {
      "Low": "low-risk",
      "Medium": "medium-risk",
      "High": "high-risk"
    }
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign risk_levels_and_tags = options.risk_levels_and_tags__keyval_required %}\n{% assign risk_levels = risk_levels_and_tags | keys %}\n{% assign risk_tags = risk_levels_and_tags | values %}\n\n{% comment %}\n  -- check that only valid risk levels have been configured\n{% endcomment %}\n\n{% assign valid_risk_levels = \"HIGH,MEDIUM,LOW\" | split: \",\" %}\n\n{% for risk_level in risk_levels %}\n  {% unless valid_risk_levels contains risk_level %}\n    {% error %}\n      {{ risk_level | json | prepend: \"Unknown risk level \" | append: \". Valid risk level values: HIGH, MEDIUM, LOW\" | json }}\n    {% enderror %}\n  {% endunless %}\n{% endfor %}\n\n{% if event.topic == \"shopify/orders/updated\" %}\n  {% capture query %}\n    query {\n      order(id: {{ order.admin_graphql_api_id | json }}) {\n        id\n        closed\n        tags\n        risk {\n          assessments {\n            riskLevel\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = query | shopify %}\n\n  {% comment %}\n    -- don't make tagging updates to closed orders\n  {% endcomment %}\n\n  {% if order.closed %}\n    {% break %}\n  {% endif %}\n\n  {% assign orders = array | push: result.data.order %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% comment %}\n    -- get all open orders\n  {% endcomment %}\n\n  {% capture bulk_operation_query %}\n    query {\n      orders(\n        query: \"status:open\"\n      ) {\n        edges {\n          node {\n            __typename\n            id\n            tags\n            risk {\n              assessments {\n                riskLevel\n              }\n            }\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% assign orders = bulkOperation.objects | where: \"__typename\", \"Order\" %}\n{% endif %}\n\n{% if event.preview %}\n  {% capture orders_json %}\n    [\n      {\n        \"id\": \"gid://shopify/Order/1234567890\",\n        \"risk\": {\n          \"assessments\": [\n            {\n              \"riskLevel\": {{ valid_risk_levels.first | json }}\n            }\n          ]\n        }\n      }\n    ]\n  {% endcapture %}\n\n  {% assign orders = orders_json | parse_json %}\n{% endif %}\n\n{% for order in orders %}\n  {% assign tag_should_have = nil %}\n  {% assign tag_to_add = nil %}\n  {% assign tags_to_remove = array %}\n\n  {% comment %}\n    -- get the risk level from each risk assessment\n  {% endcomment %}\n\n  {% assign order_risk_levels = order.risk.assessments | map: \"riskLevel\" %}\n\n  {% comment %}\n    -- check risk levels, highest to lowest, so the order only gets tagged with the most severe level configured\n  {% endcomment %}\n\n  {% for valid_risk_level in valid_risk_levels %}\n    {% if order_risk_levels contains valid_risk_level %}\n      {% if risk_levels contains valid_risk_level  %}\n        {% assign tag_should_have = risk_levels_and_tags[valid_risk_level] %}\n        {% break %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {% unless order.tags contains tag_should_have %}\n    {% assign tag_to_add = tag_should_have %}\n  {% endunless %}\n\n  {% comment %}\n    -- check if the order has any tags to remove\n  {% endcomment %}\n\n  {% for risk_tag in risk_tags %}\n    {% unless risk_tag == tag_should_have %}\n      {% if order.tags contains risk_tag %}\n        {% assign tags_to_remove = tags_to_remove | push: risk_tag %}\n      {% endif %}\n    {% endunless %}\n  {% endfor %}\n\n  {% comment %}\n    -- update tags as needed\n  {% endcomment %}\n\n  {% if tag_to_add != blank or tags_to_remove != blank %}\n    {% action \"shopify\" %}\n      mutation {\n        {% if tag_to_add != blank %}\n          tagsAdd(\n            id: {{ order.id | json }}\n            tags: {{ tag_to_add | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n        {% if tags_to_remove != blank %}\n          tagsRemove(\n            id: {{ order.id | json }}\n            tags: {{ tags_to_remove | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        {% endif %}\n      }\n    {% endaction %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/updated",
    "mechanic/user/trigger"
  ],
  "subscriptions_template": "shopify/orders/updated\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "tags": [
    "Auto-Tag",
    "Orders",
    "Risk"
  ]
}
