{
  "docs": "Quickly route order notifications to whichever teams need be alerted for a given order. Use product tags to mark products according to which team needs the alert, and add multiple copies of this task to alert different teams for different tags.",
  "halt_action_run_sequence_on_error": false,
  "name": "Notify a team when a tagged product is ordered",
  "online_store_javascript": null,
  "options": {
    "required_product_tag__required": "requires-art",
    "team_email__required": "art-department@example.com",
    "email_subject__required": "Order {{ order.order_number }} requires custom artwork",
    "email_body__multiline_required": "Hello,\n\nPlease see details for order {{ order.order_number }}:\n\nhttps://{{ shop.myshopify_domain }}/admin/orders/{{ order.id }}\n\nThanks,\n- Mechanic, for {{ shop.name }}"
  },
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "script": "{% assign required_product_tag = options.required_product_tag__required %}\n{% assign team_email = options.team_email__required %}\n{% assign email_subject = options.email_subject__required %}\n{% assign email_body = options.email_body__multiline_required %}\n\n{% comment %}\n  -- query the order, line items, products, and tags\n{% endcomment %}\n\n{% capture query %}\n  query {\n    order(id: {{ order.admin_graphql_api_id | json }}) {\n      id\n      tags\n      lineItems(first: 250) {\n        nodes {\n          product {\n            tags\n          }\n        }\n      }\n    }\n  }\n{% endcapture %}\n\n{% assign result = query | shopify %}\n\n{% if event.preview %}\n  {% capture result_json %}\n    {\n      \"data\": {\n        \"order\": {\n          \"id\": \"gid://shopify/Order/1234567890\",\n          \"lineItems\": {\n            \"nodes\": [\n              {\n                \"product\": {\n                  \"tags\": {{ required_product_tag | json }}\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% assign result = result_json | parse_json %}\n{% endif %}\n\n{% assign products = result.data.order.lineItems.nodes | map: \"product\" %}\n\n{% comment %}\n  -- loop through tags of products, sending the team email and breaking the loop when a match is found\n{% endcomment %}\n\n{% for product in products %}\n  {% if product.tags contains required_product_tag %}\n    {% action \"email\" %}\n      {\n        \"to\": {{ team_email | json }},\n        \"subject\": {{ email_subject | json }},\n        \"body\": {{ email_body | strip | newline_to_br | json }},\n        \"reply_to\": {{ shop.customer_email | json }},\n        \"from_display_name\": {{ shop.name | json }}\n      }\n    {% endaction %}\n\n    {% break %}\n  {% endif %}\n{% endfor %}\n",
  "subscriptions": [
    "shopify/orders/create"
  ],
  "subscriptions_template": "shopify/orders/create",
  "tags": [
    "Email",
    "Orders",
    "Products",
    "Watch"
  ]
}
