{
  "name": "Send follow-up emails after sending a draft order invoice",
  "options": {
    "send_daily_emails__boolean": true,
    "email_subject__required": "Invoice {{ shop.draft_orders[event.data.draft_order_id].name }}: Your order payment is due",
    "email_body__multiline_required": "Hello,\n\nPlease complete your order using this link:\n\n{{ shop.draft_orders[event.data.draft_order_id].invoice_url | default: \"(invoice url will be displayed here)\" }}\n\nThanks,\nThe team at {{ shop.name }}"
  },
  "subscriptions": [
    "user/draft_orders/followup+24.hours",
    "shopify/draft_orders/update"
  ],
  "subscriptions_template": "user/draft_orders/followup+24.hours\nshopify/draft_orders/update",
  "script": "{% comment %}\n  This is here to make sure that this option sits at the top of the task form. :)\n{% endcomment %}\n{% assign _ = options.send_daily_emails__boolean %}\n\n{% if event.topic == \"shopify/draft_orders/update\" %}\n  {% assign five_minutes_ago_seconds = \"now\" | date: \"%s\" | divided_by: 1 | minus: 300 %}\n  {% assign draft_order_invoice_sent_at_seconds = draft_order.invoice_sent_at | date: \"%s\" | divided_by: 1 %}\n  {% capture draft_order_followup_cache_key %}draft-order-followup-{{ draft_order.id }}{% endcapture %}\n\n  {% comment %}\n    This being the draft update event, we only want to trigger the followup\n    loop if *all* of the following are true:\n\n    1. The draft has an email on file (because shopify doesn't report to us what\n       email was actually used to send the draft previously, making the draft's\n       on-file email our only option)\n    2. The draft's status is \"invoice_sent\" (because that's the only status that\n       we care about)\n    3. If the invoice was actually sent in the last five minutes (to avoid\n       triggering the loop for super old drafts that receive an update)\n    4. If we haven't cached a flag marking the draft as having gotten follow-up\n  {% endcomment %}\n  {% assign draft_order_qualifies = false %}\n  {% if draft_order.email == blank %}\n    {% capture log_message %}No email on file; not sending followup{% endcapture %}\n  {% elsif draft_order.status != \"invoice_sent\" %}\n    {% capture log_message %}Draft status is {{ draft_order.status }}, not \"invoice_sent\"; not sending followup{% endcapture %}\n  {% elsif draft_order_invoice_sent_at_seconds <= five_minutes_ago_seconds %}\n    {% capture log_message %}Draft was sent more than 5min ago, making that event appear stale; not sending followup{% endcapture %}\n  {% elsif cache[draft_order_followup_cache_key] != blank %}\n    {% capture log_message %}Mechanic has already set up followup for this draft; not sending followup{% endcapture %}\n  {% else %}\n    {% assign draft_order_qualifies = true %}\n  {% endif %}\n\n  {% if log_message != blank %}\n    {\"log\": {{ log_message | json }}}\n  {% endif %}\n\n  {% comment %}\n    The only thing we do here is kick off the followup loop, and flag the\n    draft in our cache.\n  {% endcomment %}\n  {% if event.preview or draft_order_qualifies %}\n    {\n      \"action\": {\n        \"type\": \"event\",\n        \"options\": {\n          \"topic\": \"user/draft_orders/followup\",\n          \"data\": {\n            \"draft_order_id\": {{ draft_order.id | json }}\n          }\n        }\n      }\n    }\n\n    {\n      \"action\": {\n        \"type\": \"cache\",\n        \"options\": {\n          \"set\": {\n            \"key\": {{ draft_order_followup_cache_key | json }},\n            \"value\": true\n          }\n        }\n      }\n    }\n  {% endif %}\n{% elsif event.topic == \"user/draft_orders/followup\" %}\n  {% assign draft_order = shop.draft_orders[event.data.draft_order_id] %}\n\n  {% assign draft_order_qualifies = false %}\n  {% if draft_order and draft_order.order_id == blank %}\n    {% assign draft_order_qualifies = true %}\n  {% endif %}\n\n  {% comment %}\n    This is the loop! We send the email, and - if looping is enabled, since\n    that's actually optional - we schedule the loop's next run.\n  {% endcomment %}\n  {% if event.preview or draft_order_qualifies %}\n    {\n      \"action\": {\n        \"type\": \"email\",\n        \"options\": {\n          \"to\": {{ draft_order.email | json }},\n          \"subject\": {{ options.email_subject__required | json }},\n          \"body\": {{ options.email_body__multiline_required | strip | newline_to_br | json }},\n          \"reply_to\": {{ shop.customer_email | json }},\n          \"from_display_name\": {{ shop.name | json }}\n        }\n      }\n    }\n\n    {% if options.send_daily_emails__boolean %}\n      {\n        \"action\": {\n          \"type\": \"event\",\n          \"options\": {\n            \"topic\": \"user/draft_orders/followup\",\n            \"data\": {\n              \"draft_order_id\": {{ draft_order.id | json }}\n            }\n          }\n        }\n      }\n    {% endif %}\n  {% endif %}\n{% endif %}",
  "docs": "Use this task to send a follow-up email, 24 hours after you send out an email invoice for a draft order. Optionally, set this task to continue sending follow-up messages, every day after that.\n\nAfter you send an invoice for a draft order, this task will send a follow-up email 24 hours later, reminding the customer on file to complete the order.\r\n\r\nPlease note: Because Shopify does not share information about the invoice you send, this task uses the email address of the customer on file for the order, _even if_ this is different than the email you use to send the invoice. If the draft order does _not_ have a customer on file, the task will not be able to send a follow-up.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Customers",
    "Draft Orders",
    "Email",
    "Invoice"
  ]
}
