{
  "name": "Automatically cancel high-risk orders",
  "options": {
    "cancellation_reason": "customer",
    "ignore_unpaid_orders__boolean": null,
    "attempt_to_void_or_refund_payment_for_cancelled_orders__boolean": false,
    "email_customer_when_cancelling__boolean": false,
    "add_this_order_tag_when_cancelling": ""
  },
  "subscriptions": [
    "shopify/orders/updated"
  ],
  "subscriptions_template": "shopify/orders/updated",
  "script": "{% assign cancel_risk = order.risks | where: \"recommendation\", \"cancel\" | first %}\n\n{% assign cancellation_reason = options.cancellation_reason | default: \"other\" %}\n{% assign valid_cancellation_reasons = \"customer,inventory,fraud,declined,other\" | split: \",\" %}\n{% unless valid_cancellation_reasons contains cancellation_reason %}\n  {\"error\": {{ \"Cancellation reason \" | append: cancellation_reason | append: \" - must be one of 'customer', 'inventory', 'fraud', 'declined', or 'other'.\" | json }}}\n{% endunless %}\n\n{% assign order_qualifies = false %}\n\n{% if order.cancelled_at == blank and cancel_risk %}\n  {% assign order_qualifies = true %}\n{% endif %}\n   \n{% if options.ignore_unpaid_orders__boolean and order.financial_status == \"pending\" %}\n   {% assign order_qualifies = false %}\n{% endif %}\n\n{% if event.preview or order_qualifies %}\n  {% action \"shopify\" %}\n    [\n      \"update\",\n      [\"order\", {{ order.id | json }}, \"risk\", {{ cancel_risk.id | json }}],\n      {\n        \"cause_cancel\": true\n      }\n    ]\n  {% endaction %}\n\n  {% if options.attempt_to_void_or_refund_payment_for_cancelled_orders__boolean %}\n    {% capture suggested_refund_query %}\n      query {\n        order(id: {{ order.admin_graphql_api_id | json }}) {\n          suggestedRefund(suggestFullRefund: true, refundShipping: true) {\n            amountSet {\n              shopMoney {\n                amount\n                currencyCode\n              }\n            }\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% assign suggested_refund_result = suggested_refund_query | shopify %}\n    {% assign suggested_refund = suggested_refund_result.data.order.suggestedRefund.amountSet.shopMoney %}\n  {% endif %}\n\n  {% action \"shopify\" %}\n    [\n      \"post\",\n      \"/admin/orders/{{ order.id | json }}/cancel.json\",\n      {\n        {% if options.attempt_to_void_or_refund_payment_for_cancelled_orders__boolean %}\n          \"amount\": {{ suggested_refund.amount | json }},\n          \"currency\": {{ suggested_refund.currencyCode | json }},\n        {% endif %}\n        \"reason\": {{ cancellation_reason | json }},\n        \"email\": {{ options.email_customer_when_cancelling__boolean | json }}\n      }\n    ]\n  {% endaction %}\n\n  {% if options.add_this_order_tag_when_cancelling != blank %}\n    {% capture tag_query %}\n      mutation {\n        tagsAdd(\n          id: {{ order.admin_graphql_api_id | json }}\n          tags: {{ options.add_this_order_tag_when_cancelling | json }}\n        ) {\n          userErrors {\n            field\n            message\n          }\n        }\n      }\n    {% endcapture %}\n\n    {% action \"shopify\" tag_query %}\n  {% endif %}\n{% endif %}",
  "docs": "This task immediately cancels orders as soon as Shopify (or another risk-analysis app) determines it to be high risk. Optionally, this task can also auto-tag the order, email the customer, and attempt to void or refund payment.\n\nValid cancellation reasons:\r\n\r\n* customer: The customer canceled the order.\r\n* fraud: The order was fraudulent.\r\n* inventory: Items in the order were not in inventory.\r\n* declined: The payment was declined.\r\n* other: A reason not in this list.",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Cancel",
    "Orders",
    "Risk"
  ]
}
