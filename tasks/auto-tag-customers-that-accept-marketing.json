{
  "name": "Auto-tag customers that accept marketing",
  "options": {
    "customer_tag_to_add__required": null,
    "only_tag_confirmed_opt_ins__boolean": null,
    "tag_single_and_confirmed_opt_ins__boolean": null
  },
  "subscriptions": [
    "shopify/customers/update",
    "mechanic/user/trigger",
    "mechanic/shopify/bulk_operation"
  ],
  "subscriptions_template": "shopify/customers/update\nmechanic/user/trigger\nmechanic/shopify/bulk_operation",
  "script": "{% comment %}\n  Options ordering:\n  {{ options.customer_tag_to_add__required }}\n  {{ options.only_tag_confirmed_opt_ins__boolean }}\n  {{ options.tag_both_single_and_confirmed_opt_ins__boolean }}\n{% endcomment %}\n\n{% if options.only_tag_confirmed_opt_ins__boolean and options.tag_both_single_and_confirmed_opt_ins__boolean %}\n  {% error \"Choose either 'Only tag confirmed opt-ins' and 'Tag single and confirmed opt-ins', or neither, but not both\" %}\n{% endif %}\n\n{% if event.topic contains \"shopify/customers/\" %}\n  {% if event.preview %}\n    {% assign customer = hash %}\n    {% assign customer[\"admin_graphql_api_id\"] = \"gid://shopify/Customer/1234567890\" %}\n    {% assign customer[\"accepts_marketing\"] = true %}\n    {% assign customer[\"updated_at\"] = \"2021-01-01T12:34:56-07:00\" %}\n    {% assign customer[\"accepts_marketing_updated_at\"] = \"2021-01-01T12:34:56-07:00\" %}\n    {% assign customer[\"marketing_opt_in_level\"] = \"confirmed_opt_in\" %}\n    {% assign customer[\"tags\"] = \"\" %}\n  {% endif %}\n\n  {% assign customer_tags = customer.tags | split: \", \" %}\n\n  {% if customer.updated_at == customer.accepts_marketing_updated_at %}\n    {% assign qualifies_for_tag = false %}\n\n    {% if options.only_tag_confirmed_opt_ins__boolean %}\n      {% if customer.marketing_opt_in_level == \"confirmed_opt_in\" %}\n        {% assign qualifies_for_tag = true %}\n      {% endif %}\n    {% elsif options.tag_both_single_and_confirmed_opt_ins__boolean %}\n      {% if customer.marketing_opt_in_level == \"confirmed_opt_in\" or customer.marketing_opt_in_level == \"single_opt_in\" %}\n        {% assign qualifies_for_tag = true %}\n      {% endif %}\n    {% elsif customer.accepts_marketing %}\n      {% assign qualifies_for_tag = true %}\n    {% endif %}\n\n    {% if qualifies_for_tag %}\n      {% unless customer_tags contains options.customer_tag_to_add__required %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ customer.admin_graphql_api_id | json }}\n              tags: {{ options.customer_tag_to_add__required | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n    {% elsif customer_tags contains options.customer_tag_to_add__required %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer.admin_graphql_api_id | json }}\n            tags: {{ options.customer_tag_to_add__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n\n  {% else %}\n    {% log message: \"Customer update does not appear to be marketing preference related by timestamp; skipping\", customer_updated_at: customer.updated_at, accepts_marketing_updated_at: customer.accepts_marketing_updated_at %}\n  {% endif %}\n\n{% elsif event.topic == \"mechanic/user/trigger\" %}\n  {% capture bulk_operation_query %}\n    query {\n      customers {\n        edges {\n          node {\n            id\n            tags\n            acceptsMarketing\n            marketingOptInLevel\n          }\n        }\n      }\n    }\n  {% endcapture %}\n\n  {% action \"shopify\" %}\n    mutation {\n      bulkOperationRunQuery(\n        query: {{ bulk_operation_query | json }}\n      ) {\n        bulkOperation {\n          id\n          status\n        }\n        userErrors {\n          field\n          message\n        }\n      }\n    }\n  {% endaction %}\n\n{% elsif event.topic == \"mechanic/shopify/bulk_operation\" %}\n  {% if event.preview %}\n    {% capture bulkOperation_objects_jsonl %}\n      {\"id\":\"gid:\\/\\/shopify\\/Customer\\/1234567890\",\"tags\":[],\"acceptsMarketing\":true,\"marketingOptInLevel\":\"SINGLE_OPT_IN\"}\n      {\"id\":\"gid:\\/\\/shopify\\/Customer\\/2345678901\",\"tags\":[{{ options.customer_tag_to_add__required | json }}],\"acceptsMarketing\":false,\"marketingOptInLevel\":null}\n      {\"id\":\"gid:\\/\\/shopify\\/Customer\\/3456789012\",\"tags\":[{{ options.customer_tag_to_add__required | json }}],\"acceptsMarketing\":true,\"marketingOptInLevel\":\"SINGLE_OPT_IN\"}\n      {\"id\":\"gid:\\/\\/shopify\\/Customer\\/4567890123\",\"tags\":[],\"acceptsMarketing\":true,\"marketingOptInLevel\":\"CONFIRMED_OPT_IN\"}\n    {% endcapture %}\n\n    {% assign bulkOperation = hash %}\n    {% assign bulkOperation[\"objects\"] = bulkOperation_objects_jsonl | parse_jsonl %}\n  {% endif %}\n\n  {% for customer in bulkOperation.objects %}\n    {% assign qualifies_for_tag = false %}\n\n    {% if options.only_tag_confirmed_opt_ins__boolean %}\n      {% if customer.marketingOptInLevel == \"CONFIRMED_OPT_IN\" %}\n        {% assign qualifies_for_tag = true %}\n      {% endif %}\n    {% elsif options.tag_both_single_and_confirmed_opt_ins__boolean %}\n      {% if customer.marketingOptInLevel == \"CONFIRMED_OPT_IN\" or customer.marketingOptInLevel == \"SINGLE_OPT_IN\" %}\n        {% assign qualifies_for_tag = true %}\n      {% endif %}\n    {% elsif customer.acceptsMarketing %}\n      {% assign qualifies_for_tag = true %}\n    {% endif %}\n\n    {% if qualifies_for_tag %}\n      {% unless customer.tags contains options.customer_tag_to_add__required %}\n        {% action \"shopify\" %}\n          mutation {\n            tagsAdd(\n              id: {{ customer.id | json }}\n              tags: {{ options.customer_tag_to_add__required | json }}\n            ) {\n              userErrors {\n                field\n                message\n              }\n            }\n          }\n        {% endaction %}\n      {% endunless %}\n    {% elsif customer.tags contains options.customer_tag_to_add__required %}\n      {% action \"shopify\" %}\n        mutation {\n          tagsRemove(\n            id: {{ customer.id | json }}\n            tags: {{ options.customer_tag_to_add__required | json }}\n          ) {\n            userErrors {\n              field\n              message\n            }\n          }\n        }\n      {% endaction %}\n    {% endif %}\n  {% endfor %}\n{% endif %}",
  "docs": "Use this task to auto-tag customers whose marketing preferences have been updated, adding a tag for those that do accept marketing and removing it from customers who do not. Optionally, choose whether to limit tags to customers who have single or confirmed opt-in levels. Run this task manually to scan all customers at once.\n\n[Learn more from Shopify](https://help.shopify.com/en/manual/promoting-marketing/create-marketing/customer-emails#enable-double-opt-in-for-subscribers) about confirmed opt-in (aka double opt-in), and how to configure this for your store.\n\nNote: Running this task manually will sync that tag for **ALL** customers that accept marketing (and if checked, with required opt-in level), regardless of when their marketing preferences were last updated. If you have many customers, running this task manually could take a long time!",
  "halt_action_run_sequence_on_error": false,
  "online_store_javascript": null,
  "order_status_javascript": null,
  "perform_action_runs_in_sequence": false,
  "tags": [
    "Auto-Tag",
    "Customers",
    "Marketing"
  ]
}
